{
  "services": {
    "catalog": {
      "1.0": {
        "user_preference_info": {
          "controller": {
            "description": "\nThe UserPreferenceInfo resource defines the available user preferences supported by the system.\n\nIt is also used to validate values saved in UserPreference.\n      ",
            "media_type": "V1::MediaType::UserPreferenceInfo",
            "mime_type": "application/vnd.rightscale.self_service.user_preference_info",
            "actions": [
              {
                "description": "List the UserPreferenceInfo.",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/accounts/:account_id/user_preference_infos"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreferenceInfo",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "filter": {
                        "description": "Filter by category and/or name",
                        "example_definition": "[\"category==Notifications\", \"name==default_level\"]",
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "filter": [
                      "category==Notifications",
                      "name==default_level"
                    ]
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Get details for a particular UserPreferenceInfo",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/accounts/:account_id/user_preference_infos/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreferenceInfo",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the UserPreferenceInfo to retrieve",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "id": "12345"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "not_found": {
                    "description": "A UserPreferenceInfo with the given ID could not be found",
                    "status": 404
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "user_preference_info"
          },
          "media_type": {
            "name": "V1::MediaType::UserPreferenceInfo",
            "attributes": {
              "id": {
                "description": "Unique identifier for the UserPreferenceInfo",
                "example_definition": "123456",
                "type": {
                  "name": "String"
                }
              },
              "name": {
                "description": "Name of user preference info",
                "example_definition": "default_level",
                "type": {
                  "name": "String"
                }
              },
              "display_name": {
                "description": "Display name of user preference",
                "example_definition": "Default Level",
                "type": {
                  "name": "String"
                }
              },
              "category": {
                "description": "Category of user preference",
                "example_definition": "Notifications",
                "type": {
                  "name": "String"
                }
              },
              "help_text": {
                "description": "Details on the purpose of the user preference",
                "example_definition": "Defines the default email notification level.",
                "type": {
                  "name": "String"
                }
              },
              "value_type": {
                "values": [
                  "Array",
                  "Boolean",
                  "Float",
                  "Integer",
                  "String"
                ],
                "description": "Type of data expected for this preference",
                "example_definition": "String",
                "type": {
                  "name": "String"
                }
              },
              "value_constraint": {
                "description": "When present, lists the only possible values for the preference",
                "example_definition": "[\"all\", \"errors\", \"none\"]",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "String"
                    }
                  }
                }
              },
              "value_range": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "min": {
                      "description": "The minimum value allowed",
                      "example_definition": "1",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "max": {
                      "description": "The maximum value allowed",
                      "example_definition": "10",
                      "type": {
                        "name": "Integer"
                      }
                    }
                  }
                }
              },
              "default_value": {
                "description": "The value that will be used if no UserPreference has been created for this UserPreferenceInfo",
                "example_definition": "errors",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "UserPreference href",
                "example_definition": "/api/catalog/account/12345/user_preference_infos/12345",
                "type": {
                  "name": "String"
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#user_preference_info",
                "example_definition": "self_service#user_preference_info",
                "type": {
                  "name": "String"
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "id": {
                  },
                  "name": {
                  },
                  "display_name": {
                  },
                  "category": {
                  },
                  "help_text": {
                  },
                  "value_type": {
                  },
                  "value_constraint": {
                  },
                  "value_range": {
                  },
                  "default_value": {
                  },
                  "href": {
                  },
                  "kind": {
                  }
                },
                "example": {
                  "id": "123456",
                  "name": "default_level",
                  "display_name": "Default Level",
                  "category": "Notifications",
                  "help_text": "Defines the default email notification level.",
                  "value_type": "String",
                  "value_constraint": [
                    "all",
                    "errors",
                    "none"
                  ],
                  "value_range": {
                    "min": 1,
                    "max": 10
                  },
                  "default_value": "errors",
                  "href": "/api/catalog/account/12345/user_preference_infos/12345",
                  "kind": "self_service#user_preference_info"
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.user_preference_info",
            "description": null,
            "example": {
              "id": "123456",
              "name": "default_level",
              "display_name": "Default Level",
              "category": "Notifications",
              "help_text": "Defines the default email notification level.",
              "value_type": "String",
              "value_constraint": [
                "all",
                "errors",
                "none"
              ],
              "value_range": {
                "min": 1,
                "max": 10
              },
              "default_value": "errors",
              "href": "/api/catalog/account/12345/user_preference_infos/12345",
              "kind": "self_service#user_preference_info"
            }
          }
        },
        "user_preference": {
          "controller": {
            "description": "\nThe UserPreference resource stores preferences on a per user basis, such as default notification preference.\n\nThe Self-Service portal uses these preferences in the portal.\n      ",
            "media_type": "V1::MediaType::UserPreference",
            "mime_type": "application/vnd.rightscale.self_service.user_preference",
            "actions": [
              {
                "description": "\nList the UserPreference for users in this account.\n\nOnly administrators and infrastructure users may request the preferences of other users.\n\nUsers who are not members of the admin role need to specify a filter with their ID in order to retrieve their preferences.\n",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/accounts/:account_id/user_preferences"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "filter": {
                        "description": "Filter by user, so that only UserPreference belonging to that user are returned. Use \"me\" as a shortcut for the current user ID.",
                        "example_definition": "[\"user_id==1234\"]",
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      },
                      "view": {
                        "values": [
                          "default",
                          "expanded"
                        ],
                        "description": "Optional view to return",
                        "example_definition": "expanded",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "filter": [
                      "user_id==1234"
                    ],
                    "view": "expanded"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "forbidden": {
                    "description": "Only administrators may retrieve preferences from another user.",
                    "status": 403
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Get details for a particular UserPreference",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/accounts/:account_id/user_preferences/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the UserPreference to retrieve",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "view": {
                        "values": [
                          "default",
                          "expanded"
                        ],
                        "description": "Optional view to return",
                        "example_definition": "expanded",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "id": "12345",
                    "view": "expanded"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "forbidden": {
                    "description": "Only administrators may retrieve preferences from another user.",
                    "status": 403
                  },
                  "not_found": {
                    "description": "A UserPreference with the given account and ID could not be found",
                    "status": 404
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "\nCreate a new UserPreference.\n\nMultiple resources can be created at once with a multipart request.\n\nValues are validated with the corresponding UserPreferenceInfo.\n",
                "name": "create",
                "urls": [
                  [
                    "POST",
                    "/accounts/:account_id/user_preferences"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "user_id": {
                        "required": true,
                        "description": "Administrators can create preferences for other users by providing this value",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "user_preference_info_id": {
                        "required": true,
                        "description": "The ID for the UserPreferenceInfo defining this UserPreference",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "value": {
                        "required": true,
                        "description": "The value to set for this UserPreference",
                        "example_definition": "some_custom_value",
                        "type": {
                          "name": "Object"
                        }
                      }
                    }
                  },
                  "example": {
                    "user_id": "12345",
                    "user_preference_info_id": "12345",
                    "value": "some_custom_value"
                  }
                },
                "responses": {
                  "default": {
                    "description": "When creating multiple UserPreference with a multipart request, the response will specify each resource status in a part.",
                    "status": 200
                  },
                  "validation": {
                    "description": "Either one ore more parameter is invalid or the value provided does not satisfy the UserPreferenceInfo requirements.",
                    "status": 400
                  },
                  "created": {
                    "description": "The UserPreference was successfully created",
                    "status": 201,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "forbidden": {
                    "description": "Only administrators may create preferences that belong to another user.",
                    "status": 403
                  },
                  "already_exists": {
                    "description": "A preference already exists for the given user and UserPreferenceInfo.",
                    "status": 409
                  },
                  "not_found": {
                    "description": "A UserPreferenceIfno with the given ID could not be found.",
                    "status": 404
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "\nUpdate the value of a UserPreference.\n\nMultiple values may be updated using a multipart request.\n\nValues are validated with the corresponding UserPreferenceInfo.\n",
                "name": "update",
                "urls": [
                  [
                    "PATCH",
                    "/accounts/:account_id/user_preferences/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the UserPreference to update, or \"*\" for a multipart request",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "id": {
                        "description": "In a multipart request, the ID of the UserPreference to update",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "value": {
                        "required": true,
                        "description": "The value to set for this UserPreference",
                        "example_definition": "some_custom_value",
                        "type": {
                          "name": "Object"
                        }
                      }
                    }
                  },
                  "example": {
                    "id": "12345",
                    "value": "some_custom_value"
                  }
                },
                "responses": {
                  "default": {
                    "description": "When updating multiple UserPreference with a multipart request, the response will specify each resource status in a part.",
                    "status": 200
                  },
                  "validation": {
                    "description": "Either one ore more parameter is invalid or the value provided does not satisfy the UserPreferenceInfo requirements.",
                    "status": 400
                  },
                  "no_content": {
                    "description": "The UserPreference was successfully updated.",
                    "status": 204
                  },
                  "not_found": {
                    "description": "The UserPreference ID was not found in the specified Account.",
                    "status": 404
                  },
                  "forbidden": {
                    "description": "Only administrators may update preferences that belong to another user.",
                    "status": 403
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete a UserPreference",
                "name": "delete",
                "urls": [
                  [
                    "DELETE",
                    "/accounts/:account_id/user_preferences/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::UserPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the UserPreference to delete",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "id": "12345"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": "UserPreference successfully deleted",
                    "status": 204
                  },
                  "forbidden": {
                    "description": "Only administrators may delete preferences from another user.",
                    "status": 403
                  },
                  "not_found": {
                    "description": "A UserPreference with the given account and name could not be found",
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "user_preference"
          },
          "media_type": {
            "name": "V1::MediaType::UserPreference",
            "attributes": {
              "id": {
                "description": "UserPreference id",
                "example_definition": "53dc455d2b5b92e482000001",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "UserPreference href",
                "example_definition": "/api/catalog/account/12345/user_preferences/12345",
                "type": {
                  "name": "String"
                }
              },
              "user_id": {
                "description": "ID of the user this preference applies to",
                "example_definition": "12345",
                "type": {
                  "name": "Integer"
                }
              },
              "value": {
                "description": "Value of user preference",
                "example_definition": "#96F2E7",
                "type": {
                  "name": "String"
                }
              },
              "user_preference_info": {
                "identity": "id",
                "dsl_compiler": {
                },
                "description": "Definition of the UserPreference",
                "reference": "V1::MediaType::UserPreferenceInfo",
                "type": {
                  "name": "V1::MediaType::UserPreferenceInfo",
                  "views": {
                    "default": {
                      "attributes": {
                        "id": {
                        },
                        "name": {
                        },
                        "display_name": {
                        },
                        "category": {
                        },
                        "help_text": {
                        },
                        "value_type": {
                        },
                        "value_constraint": {
                        },
                        "value_range": {
                        },
                        "default_value": {
                        },
                        "href": {
                        },
                        "kind": {
                        }
                      }
                    },
                    "master": {
                      "attributes": {
                        "id": {
                          "view": "master"
                        },
                        "name": {
                          "view": "master"
                        },
                        "display_name": {
                          "view": "master"
                        },
                        "category": {
                          "view": "master"
                        },
                        "help_text": {
                          "view": "master"
                        },
                        "value_type": {
                          "view": "master"
                        },
                        "value_constraint": {
                          "view": "master"
                        },
                        "value_range": {
                          "view": "master"
                        },
                        "default_value": {
                          "view": "master"
                        },
                        "href": {
                          "view": "master"
                        },
                        "kind": {
                          "view": "master"
                        }
                      }
                    }
                  },
                  "mime_type": "application/vnd.rightscale.self_service.user_preference_info",
                  "description": null
                }
              },
              "created_by": {
                "description": "User that created the user preference",
                "type": {
                  "name": "Service::SharedType::User"
                }
              },
              "timestamps": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "created_at": {
                      "description": "Created timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "updated_at": {
                      "description": "Updated timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#user_preference",
                "example_definition": "self_service#user_preference",
                "type": {
                  "name": "String"
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "id": {
                  },
                  "href": {
                  },
                  "user_id": {
                  },
                  "kind": {
                  },
                  "value": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  }
                },
                "example": {
                  "id": "53dc455d2b5b92e482000001",
                  "href": "/api/catalog/account/12345/user_preferences/12345",
                  "user_id": 12345,
                  "kind": "self_service#user_preference",
                  "value": "#96F2E7",
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2014-01-25T00:00:00+00:00",
                    "updated_at": "2014-11-08T00:00:00+00:00"
                  }
                }
              },
              "expanded": {
                "attributes": {
                  "id": {
                  },
                  "href": {
                  },
                  "user_id": {
                  },
                  "kind": {
                  },
                  "value": {
                  },
                  "user_preference_info": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  }
                },
                "example": {
                  "id": "53dc455d2b5b92e482000001",
                  "href": "/api/catalog/account/12345/user_preferences/12345",
                  "user_id": 12345,
                  "kind": "self_service#user_preference",
                  "value": "#96F2E7",
                  "user_preference_info": {
                    "id": "123456",
                    "name": "default_level",
                    "display_name": "Default Level",
                    "category": "Notifications",
                    "help_text": "Defines the default email notification level.",
                    "value_type": "String",
                    "value_constraint": [
                      "all",
                      "errors",
                      "none"
                    ],
                    "value_range": {
                      "min": 1,
                      "max": 10
                    },
                    "default_value": "errors",
                    "href": "/api/catalog/account/12345/user_preference_infos/12345",
                    "kind": "self_service#user_preference_info"
                  },
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2014-01-25T00:00:00+00:00",
                    "updated_at": "2014-11-08T00:00:00+00:00"
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.user_preference",
            "description": null,
            "example": {
              "id": "53dc455d2b5b92e482000001",
              "href": "/api/catalog/account/12345/user_preferences/12345",
              "user_id": 12345,
              "value": "#96F2E7",
              "user_preference_info": {
                "id": "123456",
                "name": "default_level",
                "display_name": "Default Level",
                "category": "Notifications",
                "help_text": "Defines the default email notification level.",
                "value_type": "String",
                "value_constraint": [
                  "all",
                  "errors",
                  "none"
                ],
                "value_range": {
                  "min": 1,
                  "max": 10
                },
                "default_value": "errors",
                "href": "/api/catalog/account/12345/user_preference_infos/12345",
                "kind": "self_service#user_preference_info"
              },
              "created_by": {
                "id": 9876,
                "name": "Joe Montana",
                "email": "joe.montana@49ers.com"
              },
              "timestamps": {
                "created_at": "2014-01-25T00:00:00+00:00",
                "updated_at": "2014-11-08T00:00:00+00:00"
              },
              "kind": "self_service#user_preference"
            }
          }
        },
        "notification_rule": {
          "controller": {
            "description": "A notification rule describes which notification should be created\n        when events occur in the system. Events may be generated when an\n        execution status changes or when an operation fails for example.\n        A rule has a source which can be a specific resource or a group of\n        resources (described via a link-like syntax), a target which\n        corresponds to a user (for now) and a minimum severity used to filter\n        out events with lower severities.",
            "media_type": "V1::MediaType::NotificationRule",
            "mime_type": "application/vnd.rightscale.self_service.notification_rule",
            "actions": [
              {
                "description": "List all notification rules, potentially filtering by a collection of resources.",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/accounts/:account_id/notification_rules"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "Account ID of the target and resource.",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "source": {
                        "required": true,
                        "description": "List all notification rules where the target is the current user.\n                          The list can be further filtered by notification source: either by\n                          source type or by specific source.\n                          * To retrieve all notification rules that apply to all executions use:\n                            GET nofication_rules?source==/api/projects/1234/executions\n                          * To retrieve all notification rules that apply to a specific execution use:\n                            GET notification_rules?source==/api/projects/1234/executions/5678",
                        "example_definition": [
                          "/api/projects/1234/executions"
                        ],
                        "type": {
                          "name": "String"
                        }
                      },
                      "targets": {
                        "description": "Comma separated list of target ids. Note, currently only \"me\" is allowed.",
                        "example_definition": "me,1234,1235",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "source": "/api/projects/1234/executions",
                    "targets": "me,1234,1235"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "forbidden": {
                    "description": "Not allowed to view other users NotificationRules. Only allowed Target is \"me\"",
                    "status": 403
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Create one notification rule for a specific target and source.\n          The source must be unique in the scope of target and account.",
                "name": "create",
                "urls": [
                  [
                    "POST",
                    "/accounts/:account_id/notification_rules"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "Account ID of the target and resource.",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "filter": {
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "filter": [
                      "musings",
                      "Cockney"
                    ]
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "source": {
                        "description": "The resource (or resource collection) that would trigger the notification.\n                    \"/api/manager/projects/1234/executions\" refers to ALL executions in the project,\n                    \"/api/manager/projects/1234/executions/5678\" refers to just one execution, and\n                    \"/api/manager/projects/1234/executions?filter[]=created_by==me\" refers to executions\n                    created by the submitting user. The source must be unique in the scope of target and account.\n                    Note that at this time, \"me\" is the only supported target filter.",
                        "required": true,
                        "example_definition": [
                          "/api/manager/projects/1234/executions",
                          "/api/manager/projects/1234/executions/5678",
                          "/api/manager/projects/1234/executions?filter[]=created_by==me"
                        ],
                        "type": {
                          "name": "String"
                        }
                      },
                      "min_severity": {
                        "values": [
                          "error",
                          "info",
                          "none"
                        ],
                        "description": "The lowest level of notifications for the target to receive.\n                    Setting this to \"error\" will result in only receiving error notifications,\n                    whereas setting it to \"info\" will result in receiving both info and error notifications,\n                    and setting it to \"none\" will result in not receiving any notifications.",
                        "required": true,
                        "type": {
                          "name": "String"
                        }
                      },
                      "target": {
                        "description": "The notification target (user) that the rule applies to.\n                    Note that at this time, \"me\" is the only supported target.",
                        "required": true,
                        "example_definition": "me",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "source": "/api/manager/projects/1234/executions?filter[]=created_by==me",
                    "min_severity": "info",
                    "target": "me"
                  }
                },
                "responses": {
                  "created": {
                    "description": "The resource was successfully created, and the href is in the Location header.",
                    "status": 201
                  },
                  "already_exists": {
                    "description": "There is already a rule for the given source and target in the account",
                    "status": 409
                  },
                  "forbidden": {
                    "description": "Not allowed to create NotificationRules for other users. Only allowed Target is \"me\"",
                    "status": 403
                  },
                  "not_found": {
                    "description": "If a source with an ID is passed (e.g. /api/manager/project/1234/executions/5678),\n            that resource must exist, and the target must have privilege to access it.",
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Change min severity of existing rule",
                "name": "patch",
                "urls": [
                  [
                    "PATCH",
                    "/accounts/:account_id/notification_rules/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "Account ID of the target and resource.",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "Notification rule id",
                        "example_definition": "53e3bfa9a37b334abf000064",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "id": "53e3bfa9a37b334abf000064"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "min_severity": {
                        "values": [
                          "error",
                          "info",
                          "none"
                        ],
                        "description": "The lowest level of notifications for the target to receive.\n                    Setting this to \"error\" will result in only receiving error notifications,\n                    whereas setting it to \"info\" will result in receiving both info and error notifications,\n                    and setting it to \"none\" will result in not receiving any notifications.",
                        "required": true,
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "min_severity": "info"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": null,
                    "status": 204
                  },
                  "forbidden": {
                    "description": "Not allowed to patch NotificationRules for other users. Only allowed Target is \"me\"",
                    "status": 403
                  },
                  "not_found": {
                    "description": null,
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Show one notification rule.",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/accounts/:account_id/notification_rules/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "Account ID of the target and resource.",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "Notification rule id",
                        "example_definition": "53e3bfa9a37b334abf000064",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "id": "53e3bfa9a37b334abf000064"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "forbidden": {
                    "description": "Not allowed to show NotificationRules for other users. Only allowed Target is \"me\"",
                    "status": 403
                  },
                  "not_found": {
                    "description": null,
                    "status": 404
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete one notification rule.",
                "name": "delete",
                "urls": [
                  [
                    "DELETE",
                    "/accounts/:account_id/notification_rules/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "Account ID of the target and resource.",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "Notification rule id",
                        "example_definition": "53e3bfa9a37b334abf000064",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "id": "53e3bfa9a37b334abf000064"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": null,
                    "status": 204
                  },
                  "forbidden": {
                    "description": "Not allowed to delete NotificationRules for other users. Only allowed Target is \"me\"",
                    "status": 403
                  },
                  "not_found": {
                    "description": null,
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete one or more notification rules by id or source and target.",
                "name": "multi_delete",
                "urls": [
                  [
                    "DELETE",
                    "/accounts/:account_id/notification_rules"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "Account ID of the target and resource.",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::NotificationRule",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "id": {
                        "required": false,
                        "description": "Notification rule id",
                        "example_definition": "53e3bfa9a37b334abf000064",
                        "type": {
                          "name": "String"
                        }
                      },
                      "source": {
                        "description": "The exact source of the rule to be deleted",
                        "example_definition": [
                          "/api/manager/projects/1234/executions",
                          "/api/manager/projects/1234/executions/5678",
                          "/api/manager/projects/1234/executions?filter[]=created_by==me"
                        ],
                        "type": {
                          "name": "String"
                        }
                      },
                      "target": {
                        "description": "The notification target (user) that the rule applies to.\n                    Note that at this time, \"me\" is the only supported target.",
                        "example_definition": "me",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "id": "53e3bfa9a37b334abf000064",
                    "source": "/api/manager/projects/1234/executions?filter[]=created_by==me",
                    "target": "me"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "always",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "forbidden": {
                    "description": "Not allowed to delete NotificationRules for other users. Only allowed Target is \"me\"",
                    "status": 403
                  },
                  "not_found": {
                    "description": null,
                    "status": 404
                  },
                  "no_content": {
                    "description": null,
                    "status": 204
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "notification_rule"
          },
          "media_type": {
            "name": "V1::MediaType::NotificationRule",
            "attributes": {
              "id": {
                "required": true,
                "description": "Notification rule id",
                "example_definition": "53e3bfa9a37b334abf000064",
                "type": {
                  "name": "String"
                }
              },
              "account_id": {
                "required": true,
                "description": "Account ID of the target and resource.",
                "example_definition": "12345",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "Notification rule href",
                "example_definition": "/api/catalog/accounts/12345/notification_rules/53e3bfa9a37b334abf000064",
                "type": {
                  "name": "String"
                }
              },
              "source": {
                "description": "The resource (or resource collection) that would trigger the notification.\n                    \"/api/manager/projects/1234/executions\" refers to ALL executions in the project,\n                    \"/api/manager/projects/1234/executions/5678\" refers to just one execution, and\n                    \"/api/manager/projects/1234/executions?filter[]=created_by==me\" refers to executions\n                    created by the submitting user. The source must be unique in the scope of target and account.\n                    Note that at this time, \"me\" is the only supported target filter.",
                "example_definition": [
                  "/api/manager/projects/1234/executions",
                  "/api/manager/projects/1234/executions/5678",
                  "/api/manager/projects/1234/executions?filter[]=created_by==me"
                ],
                "type": {
                  "name": "String"
                }
              },
              "min_severity": {
                "values": [
                  "error",
                  "info",
                  "none"
                ],
                "description": "The lowest level of notifications for the target to receive.\n                    Setting this to \"error\" will result in only receiving error notifications,\n                    whereas setting it to \"info\" will result in receiving both info and error notifications,\n                    and setting it to \"none\" will result in not receiving any notifications.",
                "type": {
                  "name": "String"
                }
              },
              "target": {
                "description": "The notification target (user) that the rule applies to.\n                    Note that at this time, \"me\" is the only supported target.",
                "example_definition": "me",
                "type": {
                  "name": "String"
                }
              },
              "priority": {
                "description": "During an index call, multiple rules that apply to the\n                    same execution might be returned, The one with the highest priority\n                    is the one that applies.",
                "example_definition": "1",
                "type": {
                  "name": "Integer"
                }
              },
              "timestamps": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "created_at": {
                      "description": "Creation timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "updated_at": {
                      "description": "Update timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#notification_rule",
                "example_definition": "self_service#notification_rule",
                "type": {
                  "name": "String"
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "href": {
                  },
                  "source": {
                  },
                  "min_severity": {
                  },
                  "target": {
                  },
                  "priority": {
                  },
                  "timestamps": {
                  }
                },
                "example": {
                  "kind": "self_service#notification_rule",
                  "id": "53e3bfa9a37b334abf000064",
                  "href": "/api/catalog/accounts/12345/notification_rules/53e3bfa9a37b334abf000064",
                  "source": "/api/manager/projects/1234/executions?filter[]=created_by==me",
                  "min_severity": "info",
                  "target": "me",
                  "priority": 1,
                  "timestamps": {
                    "created_at": "2013-04-27T00:00:00+00:00",
                    "updated_at": "2013-03-24T00:00:00+00:00"
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.notification_rule",
            "description": null,
            "example": {
              "id": "53e3bfa9a37b334abf000064",
              "account_id": "12345",
              "href": "/api/catalog/accounts/12345/notification_rules/53e3bfa9a37b334abf000064",
              "source": "/api/manager/projects/1234/executions?filter[]=created_by==me",
              "min_severity": "info",
              "target": "me",
              "priority": 1,
              "timestamps": {
                "created_at": "2013-04-27T00:00:00+00:00",
                "updated_at": "2013-03-24T00:00:00+00:00"
              },
              "kind": "self_service#notification_rule"
            }
          }
        },
        "application": {
          "controller": {
            "description": "\nAn Application is an element in the Catalog that can be launched by users. Applications are generally created by uploading CAT\nfiles to the Designer and publishing them to the Catalog, though they can also be created via API calls to the Catalog directly without\ngoing through Designer. If an Application was created from Designer through the publish action, it contains a link back to the Template\nresource in Designer.\n\nIn the Self-Service portal, an Application is equivalent to an item in the Catalog. Most users have access to these Application resources\nand can launch them to create Executions in the Manager application.\n      ",
            "media_type": "V1::MediaType::Application",
            "mime_type": "application/vnd.rightscale.self_service.application",
            "actions": [
              {
                "description": "List the Applications available in the specified Catalog.",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/catalogs/:catalog_id/applications"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "catalog_id": {
                        "required": true,
                        "description": "The catalog ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "ids": {
                        "description": "An optional list of Application IDs to retrieve. If not specified, all are returned.",
                        "example_definition": "5392479332ca2bd0ca000002,5395f22432ca2bfd41000001,53b447b64a16db52e7000001",
                        "type": {
                          "name": "Ids",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "catalog_id": "12345",
                    "ids": [
                      "5392479332ca2bd0ca000002",
                      "5395f22432ca2bfd41000001",
                      "53b447b64a16db52e7000001"
                    ]
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Show detailed information about a given Application.",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/catalogs/:catalog_id/applications/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "catalog_id": {
                        "required": true,
                        "description": "The catalog ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The Application ID",
                        "example_definition": "53dc411b2b5b92f8f6000001",
                        "type": {
                          "name": "String"
                        }
                      },
                      "view": {
                        "values": [
                          "default",
                          "expanded"
                        ],
                        "description": "Optional view to return",
                        "example_definition": "expanded",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "catalog_id": "12345",
                    "id": "53dc411b2b5b92f8f6000001",
                    "view": "expanded"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "not_found": {
                    "description": "The Application ID was not found in the specified Catalog.",
                    "status": 404
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Create a new Application in the Catalog.",
                "name": "create",
                "urls": [
                  [
                    "POST",
                    "/catalogs/:catalog_id/applications"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "catalog_id": {
                        "required": true,
                        "description": "The catalog ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "catalog_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "name": {
                        "description": "The name of the Application",
                        "required": true,
                        "example_definition": "Development All-in-One",
                        "type": {
                          "name": "String"
                        }
                      },
                      "short_description": {
                        "description": "A short description of the Application. In the Self-Service portal, this is shown on the front of the card.",
                        "required": true,
                        "example_definition": "All-in-One Server for development purposes.",
                        "type": {
                          "name": "String"
                        }
                      },
                      "long_description": {
                        "description": "A long description for the Application",
                        "example_definition": "All-in-One Server for development purposes. In the Self-Service portal, this is shown when someone selects Details on a card.",
                        "type": {
                          "name": "String"
                        }
                      },
                      "compiled_cat": {
                        "dsl_compiler": {
                        },
                        "required": true,
                        "description": "The compiled source of the CAT file. This can be obtained by calling Template.compile or Template.show in the Designer application.",
                        "reference": "Service::MediaType::CompiledCAT",
                        "type": {
                          "name": "Service::MediaType::CompiledCAT",
                          "views": {
                            "default": {
                              "attributes": {
                                "name": {
                                },
                                "rs_ca_ver": {
                                },
                                "short_description": {
                                },
                                "long_description": {
                                },
                                "parameters": {
                                },
                                "conditions": {
                                },
                                "mappings": {
                                },
                                "resources": {
                                },
                                "outputs": {
                                },
                                "operations": {
                                },
                                "definitions": {
                                }
                              }
                            },
                            "expanded": {
                              "attributes": {
                                "name": {
                                },
                                "rs_ca_ver": {
                                },
                                "short_description": {
                                },
                                "long_description": {
                                },
                                "source": {
                                },
                                "parameters": {
                                },
                                "conditions": {
                                },
                                "mappings": {
                                },
                                "resources": {
                                },
                                "outputs": {
                                },
                                "operations": {
                                },
                                "definitions": {
                                }
                              }
                            },
                            "master": {
                              "attributes": {
                                "name": {
                                  "view": "master"
                                },
                                "rs_ca_ver": {
                                  "view": "master"
                                },
                                "short_description": {
                                  "view": "master"
                                },
                                "long_description": {
                                  "view": "master"
                                },
                                "source": {
                                  "view": "master"
                                },
                                "parameters": {
                                  "view": "master"
                                },
                                "required_parameters": {
                                  "view": "master"
                                },
                                "conditions": {
                                  "view": "master"
                                },
                                "mappings": {
                                  "view": "master"
                                },
                                "resources": {
                                  "view": "master"
                                },
                                "outputs": {
                                  "view": "master"
                                },
                                "operations": {
                                  "view": "master"
                                },
                                "definitions": {
                                  "view": "master"
                                }
                              }
                            }
                          },
                          "mime_type": "application/vnd.rightscale.self_service.compiled_cat",
                          "description": null
                        }
                      },
                      "template_href": {
                        "description": "If created from a Template, the template href can be provided to maintain the relationship between the resources.",
                        "example_definition": "/api/designer/collections/60073/templates/53dfcb642b5b921f3e000001",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "name": "Development All-in-One",
                    "short_description": "All-in-One Server for development purposes.",
                    "long_description": "All-in-One Server for development purposes. In the Self-Service portal, this is shown when someone selects Details on a card.",
                    "compiled_cat": {
                      "name": "miraculously",
                      "rs_ca_ver": 127,
                      "short_description": "Frey",
                      "long_description": "tamest",
                      "parameters": {
                        "busiest": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "assureds": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "conditions": {
                        "slackens": {
                          "transshipment": [
                            "An Object",
                            "An Object"
                          ],
                          "martyrs": [
                            "An Object"
                          ],
                          "conceding": [
                            "An Object",
                            "An Object"
                          ]
                        },
                        "Rowling": {
                          "accounted": [
                            "An Object",
                            "An Object",
                            "An Object"
                          ]
                        }
                      },
                      "mappings": {
                        "Freud": {
                          "implacability": {
                            "communicators": "abduction",
                            "lightheartedly": "fishwife",
                            "curling": "chronicles"
                          },
                          "implant": {
                            "sacrifices": "overpowered",
                            "recollection": "distractions",
                            "Arlene": "revocable"
                          }
                        },
                        "forecasters": {
                          "wickedest": {
                            "Bernardo": "fireproofs"
                          },
                          "conveyer": {
                            "overstocks": "vulvae",
                            "turbine": "Lascaux",
                            "Zen": "decamps"
                          },
                          "ossification": {
                            "unplugged": "regattas"
                          }
                        }
                      },
                      "resources": {
                        "penniless": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "from": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "chirrupping": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "outputs": {
                        "monographs": {
                          "lazy_attributes": {
                            "index": {
                            },
                            "default_value": {
                            },
                            "category": {
                            },
                            "label": {
                            },
                            "description": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "operations": {
                        "hydroplaned": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "overate": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "mechanically": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "definitions": {
                        "cupcakes": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "Sigismund": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "ripely": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      }
                    },
                    "template_href": "/api/designer/collections/60073/templates/53dfcb642b5b921f3e000001"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "created": {
                    "description": "The Application was successfully created.",
                    "status": 201,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "already_exists": {
                    "description": "An Application with that name already exists or, if specified, the Template has previously been published. Use Application.update instead.",
                    "status": 409
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Update the content of an existing Application.",
                "name": "update",
                "urls": [
                  [
                    "PUT",
                    "/catalogs/:catalog_id/applications/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "catalog_id": {
                        "required": true,
                        "description": "The catalog ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The Application ID",
                        "example_definition": "53dc411b2b5b92f8f6000001",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "catalog_id": "12345",
                    "id": "53dc411b2b5b92f8f6000001"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "name": {
                        "description": "The name of the Application",
                        "example_definition": "Development All-in-One",
                        "type": {
                          "name": "String"
                        }
                      },
                      "short_description": {
                        "description": "A short description of the Application. In the Self-Service portal, this is shown on the front of the card.",
                        "example_definition": "All-in-One Server for development purposes.",
                        "type": {
                          "name": "String"
                        }
                      },
                      "long_description": {
                        "description": "A long description for the Application",
                        "example_definition": "All-in-One Server for development purposes. In the Self-Service portal, this is shown when someone selects Details on a card.",
                        "type": {
                          "name": "String"
                        }
                      },
                      "compiled_cat": {
                        "dsl_compiler": {
                        },
                        "description": "The compiled source of the CAT file. This can be obtained by calling Template.compile or Template.show in the Designer application.",
                        "reference": "Service::MediaType::CompiledCAT",
                        "type": {
                          "name": "Service::MediaType::CompiledCAT",
                          "views": {
                            "default": {
                              "attributes": {
                                "name": {
                                },
                                "rs_ca_ver": {
                                },
                                "short_description": {
                                },
                                "long_description": {
                                },
                                "parameters": {
                                },
                                "conditions": {
                                },
                                "mappings": {
                                },
                                "resources": {
                                },
                                "outputs": {
                                },
                                "operations": {
                                },
                                "definitions": {
                                }
                              }
                            },
                            "expanded": {
                              "attributes": {
                                "name": {
                                },
                                "rs_ca_ver": {
                                },
                                "short_description": {
                                },
                                "long_description": {
                                },
                                "source": {
                                },
                                "parameters": {
                                },
                                "conditions": {
                                },
                                "mappings": {
                                },
                                "resources": {
                                },
                                "outputs": {
                                },
                                "operations": {
                                },
                                "definitions": {
                                }
                              }
                            },
                            "master": {
                              "attributes": {
                                "name": {
                                  "view": "master"
                                },
                                "rs_ca_ver": {
                                  "view": "master"
                                },
                                "short_description": {
                                  "view": "master"
                                },
                                "long_description": {
                                  "view": "master"
                                },
                                "source": {
                                  "view": "master"
                                },
                                "parameters": {
                                  "view": "master"
                                },
                                "required_parameters": {
                                  "view": "master"
                                },
                                "conditions": {
                                  "view": "master"
                                },
                                "mappings": {
                                  "view": "master"
                                },
                                "resources": {
                                  "view": "master"
                                },
                                "outputs": {
                                  "view": "master"
                                },
                                "operations": {
                                  "view": "master"
                                },
                                "definitions": {
                                  "view": "master"
                                }
                              }
                            }
                          },
                          "mime_type": "application/vnd.rightscale.self_service.compiled_cat",
                          "description": null
                        }
                      },
                      "template_href": {
                        "description": "A template href can be provided to maintain the relationship between the resources.",
                        "example_definition": "/api/designer/collections/60073/templates/53dfcb642b5b921f3e000001",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "name": "Development All-in-One",
                    "short_description": "All-in-One Server for development purposes.",
                    "long_description": "All-in-One Server for development purposes. In the Self-Service portal, this is shown when someone selects Details on a card.",
                    "compiled_cat": {
                      "name": "miraculously",
                      "rs_ca_ver": 127,
                      "short_description": "Frey",
                      "long_description": "tamest",
                      "parameters": {
                        "busiest": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "assureds": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "conditions": {
                        "slackens": {
                          "transshipment": [
                            "An Object",
                            "An Object"
                          ],
                          "martyrs": [
                            "An Object"
                          ],
                          "conceding": [
                            "An Object",
                            "An Object"
                          ]
                        },
                        "Rowling": {
                          "accounted": [
                            "An Object",
                            "An Object",
                            "An Object"
                          ]
                        }
                      },
                      "mappings": {
                        "Freud": {
                          "implacability": {
                            "communicators": "abduction",
                            "lightheartedly": "fishwife",
                            "curling": "chronicles"
                          },
                          "implant": {
                            "sacrifices": "overpowered",
                            "recollection": "distractions",
                            "Arlene": "revocable"
                          }
                        },
                        "forecasters": {
                          "wickedest": {
                            "Bernardo": "fireproofs"
                          },
                          "conveyer": {
                            "overstocks": "vulvae",
                            "turbine": "Lascaux",
                            "Zen": "decamps"
                          },
                          "ossification": {
                            "unplugged": "regattas"
                          }
                        }
                      },
                      "resources": {
                        "penniless": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "from": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "chirrupping": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "outputs": {
                        "monographs": {
                          "lazy_attributes": {
                            "index": {
                            },
                            "default_value": {
                            },
                            "category": {
                            },
                            "label": {
                            },
                            "description": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "operations": {
                        "hydroplaned": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "overate": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "mechanically": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "definitions": {
                        "cupcakes": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "Sigismund": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "ripely": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      }
                    },
                    "template_href": "/api/designer/collections/60073/templates/53dfcb642b5b921f3e000001"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": "The Application was successfully updated.",
                    "status": 204
                  },
                  "not_found": {
                    "description": "The Application ID was not found in the specified Catalog.",
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Update the content of multiple Applications.",
                "name": "multi_update",
                "urls": [
                  [
                    "PUT",
                    "/catalogs/:catalog_id/applications"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "catalog_id": {
                        "required": true,
                        "description": "The catalog ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "catalog_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "id": {
                        "required": true,
                        "description": "The Application ID to update",
                        "example_definition": "53dc411b2b5b92f8f6000001",
                        "type": {
                          "name": "String"
                        }
                      },
                      "name": {
                        "description": "The name of the Application",
                        "example_definition": "Development All-in-One",
                        "type": {
                          "name": "String"
                        }
                      },
                      "short_description": {
                        "description": "A short description of the Application. In the Self-Service portal, this is shown on the front of the card.",
                        "example_definition": "All-in-One Server for development purposes.",
                        "type": {
                          "name": "String"
                        }
                      },
                      "long_description": {
                        "description": "A long description for the Application",
                        "example_definition": "All-in-One Server for development purposes. In the Self-Service portal, this is shown when someone selects Details on a card.",
                        "type": {
                          "name": "String"
                        }
                      },
                      "compiled_cat": {
                        "dsl_compiler": {
                        },
                        "description": "The compiled source of the CAT file. This can be obtained by calling Template.compile or Template.show in the Designer application.",
                        "reference": "Service::MediaType::CompiledCAT",
                        "type": {
                          "name": "Service::MediaType::CompiledCAT",
                          "views": {
                            "default": {
                              "attributes": {
                                "name": {
                                },
                                "rs_ca_ver": {
                                },
                                "short_description": {
                                },
                                "long_description": {
                                },
                                "parameters": {
                                },
                                "conditions": {
                                },
                                "mappings": {
                                },
                                "resources": {
                                },
                                "outputs": {
                                },
                                "operations": {
                                },
                                "definitions": {
                                }
                              }
                            },
                            "expanded": {
                              "attributes": {
                                "name": {
                                },
                                "rs_ca_ver": {
                                },
                                "short_description": {
                                },
                                "long_description": {
                                },
                                "source": {
                                },
                                "parameters": {
                                },
                                "conditions": {
                                },
                                "mappings": {
                                },
                                "resources": {
                                },
                                "outputs": {
                                },
                                "operations": {
                                },
                                "definitions": {
                                }
                              }
                            },
                            "master": {
                              "attributes": {
                                "name": {
                                  "view": "master"
                                },
                                "rs_ca_ver": {
                                  "view": "master"
                                },
                                "short_description": {
                                  "view": "master"
                                },
                                "long_description": {
                                  "view": "master"
                                },
                                "source": {
                                  "view": "master"
                                },
                                "parameters": {
                                  "view": "master"
                                },
                                "required_parameters": {
                                  "view": "master"
                                },
                                "conditions": {
                                  "view": "master"
                                },
                                "mappings": {
                                  "view": "master"
                                },
                                "resources": {
                                  "view": "master"
                                },
                                "outputs": {
                                  "view": "master"
                                },
                                "operations": {
                                  "view": "master"
                                },
                                "definitions": {
                                  "view": "master"
                                }
                              }
                            }
                          },
                          "mime_type": "application/vnd.rightscale.self_service.compiled_cat",
                          "description": null
                        }
                      },
                      "template_href": {
                        "description": "A template href can be provided to maintain the relationship between the resources.",
                        "example_definition": "/api/designer/collections/60073/templates/53dfcb642b5b921f3e000001",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "id": "53dc411b2b5b92f8f6000001",
                    "name": "Development All-in-One",
                    "short_description": "All-in-One Server for development purposes.",
                    "long_description": "All-in-One Server for development purposes. In the Self-Service portal, this is shown when someone selects Details on a card.",
                    "compiled_cat": {
                      "name": "miraculously",
                      "rs_ca_ver": 127,
                      "short_description": "Frey",
                      "long_description": "tamest",
                      "parameters": {
                        "busiest": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "assureds": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "conditions": {
                        "slackens": {
                          "transshipment": [
                            "An Object",
                            "An Object"
                          ],
                          "martyrs": [
                            "An Object"
                          ],
                          "conceding": [
                            "An Object",
                            "An Object"
                          ]
                        },
                        "Rowling": {
                          "accounted": [
                            "An Object",
                            "An Object",
                            "An Object"
                          ]
                        }
                      },
                      "mappings": {
                        "Freud": {
                          "implacability": {
                            "communicators": "abduction",
                            "lightheartedly": "fishwife",
                            "curling": "chronicles"
                          },
                          "implant": {
                            "sacrifices": "overpowered",
                            "recollection": "distractions",
                            "Arlene": "revocable"
                          }
                        },
                        "forecasters": {
                          "wickedest": {
                            "Bernardo": "fireproofs"
                          },
                          "conveyer": {
                            "overstocks": "vulvae",
                            "turbine": "Lascaux",
                            "Zen": "decamps"
                          },
                          "ossification": {
                            "unplugged": "regattas"
                          }
                        }
                      },
                      "resources": {
                        "penniless": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "from": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "chirrupping": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "outputs": {
                        "monographs": {
                          "lazy_attributes": {
                            "index": {
                            },
                            "default_value": {
                            },
                            "category": {
                            },
                            "label": {
                            },
                            "description": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "operations": {
                        "hydroplaned": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "overate": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "mechanically": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "definitions": {
                        "cupcakes": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "Sigismund": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "ripely": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      }
                    },
                    "template_href": "/api/designer/collections/60073/templates/53dfcb642b5b921f3e000001"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": "The Application was successfully updated.",
                    "status": 204
                  },
                  "not_found": {
                    "description": "The Application ID was not found in the specified Catalog.",
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "always",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete an Application from the Catalog",
                "name": "delete",
                "urls": [
                  [
                    "DELETE",
                    "/catalogs/:catalog_id/applications/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "catalog_id": {
                        "required": true,
                        "description": "The catalog ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The Application ID to delete",
                        "example_definition": "53dc411b2b5b92f8f6000001",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "catalog_id": "12345",
                    "id": "53dc411b2b5b92f8f6000001"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": "The Application was successfully deleted.",
                    "status": 204
                  },
                  "not_found": {
                    "description": "The Application ID was not found in the specified Catalog.",
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete multiple Applications from the Catalog",
                "name": "multi_delete",
                "urls": [
                  [
                    "DELETE",
                    "/catalogs/:catalog_id/applications"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "catalog_id": {
                        "required": true,
                        "description": "The catalog ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "ids": {
                        "required": true,
                        "description": "The Application IDs to delete",
                        "example_definition": "53dc411b2b5b92f8f6000001,53dc455d2b5b92e482000001",
                        "type": {
                          "name": "Ids",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "catalog_id": "12345",
                    "ids": [
                      "53dc411b2b5b92f8f6000001",
                      "53dc455d2b5b92e482000001"
                    ]
                  }
                },
                "responses": {
                  "no_content": {
                    "description": "The Application was successfully deleted.",
                    "status": 204
                  },
                  "not_found": {
                    "description": "The Application ID was not found in the specified Catalog.",
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "always",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Download the underlying CAT source of an Application.",
                "name": "download",
                "urls": [
                  [
                    "GET",
                    "/catalogs/:catalog_id/applications/:id/download"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Application",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "catalog_id": {
                        "required": true,
                        "description": "The catalog ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The Application ID to delete",
                        "example_definition": "53dc411b2b5b92f8f6000001",
                        "type": {
                          "name": "String"
                        }
                      },
                      "api_version": {
                        "required": true,
                        "description": "The API version (only valid value is currently \"1.0\")",
                        "example_definition": "1.0",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "catalog_id": "12345",
                    "id": "53dc411b2b5b92f8f6000001",
                    "api_version": "1.0"
                  }
                },
                "responses": {
                  "not_found": {
                    "description": "The Application ID was not found in the specified Catalog.",
                    "status": 404
                  },
                  "download": {
                    "description": null,
                    "status": 200
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "application"
          },
          "media_type": {
            "name": "V1::MediaType::Application",
            "attributes": {
              "id": {
                "required": true,
                "description": "Application id",
                "example_definition": "53dc455d2b5b92e482000001",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "Application href",
                "example_definition": "/api/catalog/catalogs/60073/applications/53dc455d2b5b92e482000001",
                "type": {
                  "name": "String"
                }
              },
              "name": {
                "description": "Name of application",
                "example_definition": "Development All-in-One",
                "type": {
                  "name": "String"
                }
              },
              "short_description": {
                "description": "Short description of application",
                "example_definition": "All-in-One Server for development purposes.",
                "type": {
                  "name": "String"
                }
              },
              "long_description": {
                "description": "Long description of application",
                "example_definition": "Development server with basic environment setup",
                "type": {
                  "name": "String"
                }
              },
              "compiled_cat": {
                "description": "Parsed CAT source of application",
                "example_definition": "",
                "type": {
                  "name": "String"
                }
              },
              "parameters": {
                "description": "Parameters that define how an application can be configured",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "Service::SharedType::Parameter"
                    }
                  }
                }
              },
              "required_parameters": {
                "description": "Parameters required to launch the CAT",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "String"
                    }
                  }
                }
              },
              "template_info": {
                "description": "Template that this application was created from",
                "type": {
                  "name": "V1::Type::TemplateInfo"
                }
              },
              "created_by": {
                "description": "User that created this application",
                "type": {
                  "name": "Service::SharedType::User"
                }
              },
              "timestamps": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "created_at": {
                      "description": "Created timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "updated_at": {
                      "description": "Updated timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#application",
                "example_definition": "self_service#application",
                "type": {
                  "name": "String"
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "name": {
                  },
                  "href": {
                  },
                  "short_description": {
                  },
                  "long_description": {
                  },
                  "parameters": {
                  },
                  "required_parameters": {
                  },
                  "template_info": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  }
                },
                "example": {
                  "kind": "self_service#application",
                  "id": "53dc455d2b5b92e482000001",
                  "name": "Development All-in-One",
                  "href": "/api/catalog/catalogs/60073/applications/53dc455d2b5b92e482000001",
                  "short_description": "All-in-One Server for development purposes.",
                  "long_description": "Development server with basic environment setup",
                  "parameters": [
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    },
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    }
                  ],
                  "required_parameters": [
                    "chamomile"
                  ],
                  "template_info": {
                    "href": "/api/designer/collections/12345/templates/53dc45552b5b92ace8000001",
                    "name": "Development All-in-One"
                  },
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2013-06-17T00:00:00+00:00",
                    "updated_at": "2013-01-26T00:00:00+00:00"
                  }
                }
              },
              "expanded": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "name": {
                  },
                  "href": {
                  },
                  "short_description": {
                  },
                  "long_description": {
                  },
                  "parameters": {
                  },
                  "required_parameters": {
                  },
                  "template_info": {
                  },
                  "compiled_cat": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  }
                },
                "example": {
                  "kind": "self_service#application",
                  "id": "53dc455d2b5b92e482000001",
                  "name": "Development All-in-One",
                  "href": "/api/catalog/catalogs/60073/applications/53dc455d2b5b92e482000001",
                  "short_description": "All-in-One Server for development purposes.",
                  "long_description": "Development server with basic environment setup",
                  "parameters": [
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    },
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    }
                  ],
                  "required_parameters": [
                    "chamomile"
                  ],
                  "template_info": {
                    "href": "/api/designer/collections/12345/templates/53dc45552b5b92ace8000001",
                    "name": "Development All-in-One"
                  },
                  "compiled_cat": "",
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2013-06-17T00:00:00+00:00",
                    "updated_at": "2013-01-26T00:00:00+00:00"
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.application",
            "description": null,
            "example": {
              "id": "53dc455d2b5b92e482000001",
              "href": "/api/catalog/catalogs/60073/applications/53dc455d2b5b92e482000001",
              "name": "Development All-in-One",
              "short_description": "All-in-One Server for development purposes.",
              "long_description": "Development server with basic environment setup",
              "compiled_cat": "",
              "parameters": [
                {
                  "name": "cloud",
                  "description": "Select the cloud to launch in",
                  "type": "string",
                  "default": "AWS US-East",
                  "operations": [
                    "launch",
                    "update_code"
                  ],
                  "ui": {
                    "label": "Cloud",
                    "category": "Cloud Information",
                    "index": 1
                  },
                  "validation": {
                    "no_echo": true,
                    "min_length": 5,
                    "max_length": 100,
                    "min_value": 1024,
                    "max_value": 2048,
                    "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                    "allowed_values": [
                      "An Object",
                      "An Object"
                    ],
                    "constraint_description": "The value must fit the pattern: ###-ABC"
                  }
                },
                {
                  "name": "cloud",
                  "description": "Select the cloud to launch in",
                  "type": "string",
                  "default": "AWS US-East",
                  "operations": [
                    "launch",
                    "update_code"
                  ],
                  "ui": {
                    "label": "Cloud",
                    "category": "Cloud Information",
                    "index": 1
                  },
                  "validation": {
                    "no_echo": true,
                    "min_length": 5,
                    "max_length": 100,
                    "min_value": 1024,
                    "max_value": 2048,
                    "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                    "allowed_values": [
                      "An Object",
                      "An Object"
                    ],
                    "constraint_description": "The value must fit the pattern: ###-ABC"
                  }
                }
              ],
              "required_parameters": [
                "chamomile"
              ],
              "template_info": {
                "href": "/api/designer/collections/12345/templates/53dc45552b5b92ace8000001",
                "name": "Development All-in-One"
              },
              "created_by": {
                "id": 9876,
                "name": "Joe Montana",
                "email": "joe.montana@49ers.com"
              },
              "timestamps": {
                "created_at": "2013-06-17T00:00:00+00:00",
                "updated_at": "2013-01-26T00:00:00+00:00"
              },
              "kind": "self_service#application"
            }
          }
        },
        "account_preference": {
          "controller": {
            "description": "\nThe AccountPreference resource stores preferences that apply account-wide, such as UI customization settings and other settings.\nThe Self-Service portal uses some of these preferences in the portal itself, and this resource allows you to extend the settings\nto use in your own integration.\n      ",
            "media_type": "V1::MediaType::AccountPreference",
            "mime_type": "application/vnd.rightscale.self_service.account_preference",
            "actions": [
              {
                "description": "List the AccountPreferences for this account.",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/accounts/:account_id/account_preferences"
                  ]
                ],
                "params": {
                  "identity": "name",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::AccountPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "group": {
                        "description": "The group that this setting belongs to, simply for organizational purposes",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "filter": {
                        "description": "Filter by group, so that only AccountPreferences belonging to that group are returned",
                        "example_definition": "[\"group==portal_customization\"]",
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "group": "12345",
                    "filter": [
                      "group==portal_customization"
                    ]
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Get details for a particular AccountPreference",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/accounts/:account_id/account_preferences/:name"
                  ]
                ],
                "params": {
                  "identity": "name",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::AccountPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "name": {
                        "required": true,
                        "description": "The name of the AccountPreference to retrieve",
                        "example_definition": "primary_color",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "name": "primary_color"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "not_found": {
                    "description": "An AccountPreference with the given account and name could not be found",
                    "status": 404
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Create a new AccountPreference or update an existing AccountPreference with the new value",
                "name": "create",
                "urls": [
                  [
                    "POST",
                    "/accounts/:account_id/account_preferences"
                  ]
                ],
                "params": {
                  "identity": "name",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::AccountPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345"
                  }
                },
                "payload": {
                  "identity": "name",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::AccountPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "name": {
                        "required": true,
                        "description": "The name for the new AccountPreference or AccountPreference to update (note this is the key for this resource)",
                        "example_definition": "my_new_preference",
                        "type": {
                          "name": "String"
                        }
                      },
                      "value": {
                        "required": true,
                        "description": "The value to set for this AccountPreference",
                        "example_definition": "some_custom_value",
                        "type": {
                          "name": "String"
                        }
                      },
                      "group_name": {
                        "required": true,
                        "description": "The group to place this AccountPreference in. Any string value is accepted - the group does not need to exist",
                        "example_definition": "my_custom_prefs",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "name": "my_new_preference",
                    "value": "some_custom_value",
                    "group_name": "my_custom_prefs"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "created": {
                    "description": "The AccountPreference was successfully created",
                    "status": 201,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete an AccountPreference",
                "name": "delete",
                "urls": [
                  [
                    "DELETE",
                    "/accounts/:account_id/account_preferences/:name"
                  ]
                ],
                "params": {
                  "identity": "name",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::AccountPreference",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "account_id": {
                        "required": true,
                        "description": "The account ID",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "name": {
                        "required": true,
                        "description": "The name of the AccountPreference to delete",
                        "example_definition": "my_new_preference",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "account_id": "12345",
                    "name": "my_new_preference"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": "AccountPreference successfully deleted",
                    "status": 204
                  },
                  "not_found": {
                    "description": "An AccountPreference with the given account and name could not be found",
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "account_preference"
          },
          "media_type": {
            "name": "V1::MediaType::AccountPreference",
            "attributes": {
              "name": {
                "description": "Name of account preference",
                "example_definition": "primary_color",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "AccountPreference href",
                "example_definition": "/api/catalog/account/12345/account_preferences/primary_color",
                "type": {
                  "name": "String"
                }
              },
              "value": {
                "description": "Value of account preference",
                "example_definition": "#96F2E7",
                "type": {
                  "name": "String"
                }
              },
              "group_name": {
                "description": "Name of group the account preference belongs to",
                "example_definition": "portal_customization",
                "type": {
                  "name": "String"
                }
              },
              "created_by": {
                "description": "User that created account preference",
                "type": {
                  "name": "Service::SharedType::User"
                }
              },
              "timestamps": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "created_at": {
                      "description": "Created timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "updated_at": {
                      "description": "Updated timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#account_preference",
                "example_definition": "self_service#account_preference",
                "type": {
                  "name": "String"
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "name": {
                  },
                  "href": {
                  },
                  "kind": {
                  },
                  "value": {
                  },
                  "group_name": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  }
                },
                "example": {
                  "name": "primary_color",
                  "href": "/api/catalog/account/12345/account_preferences/primary_color",
                  "kind": "self_service#account_preference",
                  "value": "#96F2E7",
                  "group_name": "portal_customization",
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2012-12-14T00:00:00+00:00",
                    "updated_at": "2013-04-12T00:00:00+00:00"
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.account_preference",
            "description": null,
            "example": {
              "name": "primary_color",
              "href": "/api/catalog/account/12345/account_preferences/primary_color",
              "value": "#96F2E7",
              "group_name": "portal_customization",
              "created_by": {
                "id": 9876,
                "name": "Joe Montana",
                "email": "joe.montana@49ers.com"
              },
              "timestamps": {
                "created_at": "2012-12-14T00:00:00+00:00",
                "updated_at": "2013-04-12T00:00:00+00:00"
              },
              "kind": "self_service#account_preference"
            }
          }
        },
        "user (*)": {
          "kind": {
            "name": "Service::SharedType::User",
            "attributes": {
              "id": {
                "required": true,
                "description": "User id",
                "example_definition": "9876",
                "type": {
                  "name": "Integer"
                }
              },
              "name": {
                "description": "User name, usually of the form \"First Last\"",
                "example_definition": "Joe Montana",
                "type": {
                  "name": "String"
                }
              },
              "email": {
                "description": "User email",
                "example_definition": "joe.montana@49ers.com",
                "type": {
                  "name": "String"
                }
              }
            },
            "example": {
              "id": 9876,
              "name": "Joe Montana",
              "email": "joe.montana@49ers.com"
            }
          }
        },
        "parameter (*)": {
          "kind": {
            "name": "Service::SharedType::Parameter",
            "attributes": {
              "name": {
                "description": "Parameter name",
                "example_definition": "cloud",
                "type": {
                  "name": "String"
                }
              },
              "description": {
                "description": "A description of the parameter that will be displayed to users",
                "example_definition": "Select the cloud to launch in",
                "type": {
                  "name": "String"
                }
              },
              "type": {
                "values": [
                  "string",
                  "number",
                  "list"
                ],
                "description": "Defines whether the parameter is a string, a number or a comma separated list of values",
                "example_definition": "string",
                "type": {
                  "name": "String"
                }
              },
              "default": {
                "description": "Default value for parameter if none is specified. Note this must meet the requirements of the other fields (such as max_length, allowed pattern, etc).",
                "example_definition": "AWS US-East",
                "type": {
                  "name": "Object"
                }
              },
              "operations": {
                "description": "The name of operations that depend on this parameter",
                "example_definition": "[\"launch\", \"update_code\"]",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "Object"
                    }
                  }
                }
              },
              "ui": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "label": {
                      "description": "The label used to display the parameter to users e.g. when defining its value",
                      "example_definition": "Cloud",
                      "type": {
                        "name": "String"
                      }
                    },
                    "category": {
                      "description": "An optional category used to group parameters in the UI",
                      "example_definition": "Cloud Information",
                      "type": {
                        "name": "String"
                      }
                    },
                    "index": {
                      "description": "Parameters are displayed in the UI in the same order as they are defined in the template. Generally this is derived from the ordering in the source CAT file.",
                      "example_definition": "1",
                      "type": {
                        "name": "Integer"
                      }
                    }
                  }
                }
              },
              "validation": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "no_echo": {
                      "description": "Whether the value of the parameter should be hidden in UIs and API responses. Generally used for passwords or other sensitive inputs. (default: false)",
                      "example_definition": "true",
                      "type": {
                        "name": "Boolean"
                      }
                    },
                    "min_length": {
                      "description": "The mininum of characters in the parameter value. Only valid when \"type\" is one of \"string\" or \"list\".",
                      "example_definition": "5",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "max_length": {
                      "description": "The maximum number of characters in the parameter value. Only valid when \"type\" is one of \"string\" or \"list\".",
                      "example_definition": "100",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "min_value": {
                      "description": "The smallest numeric value allowed for the parameter. Only valid when \"type\" is \"number\".",
                      "example_definition": "1024",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "max_value": {
                      "description": "The largest numeric value allowed for the parameter. Only valid when \"type\" is \"number\".",
                      "example_definition": "2048",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "allowed_pattern": {
                      "description": "A regular expression that the paramater value must match. Only valid when the \"type\" is \"string\". Not valid when \"allowed_values\" is specified.",
                      "example_definition": "[a-z0-9]+[a-z0-9\\.-]*",
                      "type": {
                        "name": "String"
                      }
                    },
                    "allowed_values": {
                      "description": "A comma separated list of allowed values. Not valid when \"allowed_pattern\" is specified.",
                      "type": {
                        "name": "Collection",
                        "member_attribute": {
                          "type": {
                            "name": "Object"
                          }
                        }
                      }
                    },
                    "constraint_description": {
                      "description": "Message displayed when any of the constraint is violated. The system generates default error messages, this field allows overridding these to provide a clearer error message to the user.",
                      "example_definition": "The value must fit the pattern: ###-ABC",
                      "type": {
                        "name": "String"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "name": "cloud",
              "description": "Select the cloud to launch in",
              "type": "string",
              "default": "AWS US-East",
              "operations": [
                "launch",
                "update_code"
              ],
              "ui": {
                "label": "Cloud",
                "category": "Cloud Information",
                "index": 1
              },
              "validation": {
                "no_echo": true,
                "min_length": 5,
                "max_length": 100,
                "min_value": 1024,
                "max_value": 2048,
                "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                "allowed_values": [
                  "An Object",
                  "An Object",
                  "An Object"
                ],
                "constraint_description": "The value must fit the pattern: ###-ABC"
              }
            }
          }
        },
        "template_info (*)": {
          "kind": {
            "name": "V1::Type::TemplateInfo",
            "attributes": {
              "href": {
                "description": "Template href",
                "example_definition": "/api/designer/collections/12345/templates/53dc45552b5b92ace8000001",
                "type": {
                  "name": "String"
                }
              },
              "name": {
                "description": "Template name",
                "example_definition": "Development All-in-One",
                "type": {
                  "name": "String"
                }
              }
            },
            "example": {
              "href": "/api/designer/collections/12345/templates/53dc45552b5b92ace8000001",
              "name": "Development All-in-One"
            }
          }
        },
        "compiled_cat (*)": {
          "media_type": {
            "name": "Service::MediaType::CompiledCAT",
            "attributes": {
              "name": {
                "required": true,
                "type": {
                  "name": "String"
                }
              },
              "rs_ca_ver": {
                "required": true,
                "type": {
                  "name": "Integer"
                }
              },
              "short_description": {
                "type": {
                  "name": "String"
                }
              },
              "long_description": {
                "type": {
                  "name": "String"
                }
              },
              "source": {
                "required": true,
                "type": {
                  "name": "String"
                }
              },
              "parameters": {
                "type": {
                  "name": "Hash"
                }
              },
              "required_parameters": {
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "String"
                    }
                  }
                }
              },
              "conditions": {
                "type": {
                  "name": "Hash"
                }
              },
              "mappings": {
                "type": {
                  "name": "Hash"
                }
              },
              "resources": {
                "required": true,
                "type": {
                  "name": "Hash"
                }
              },
              "outputs": {
                "type": {
                  "name": "Hash"
                }
              },
              "operations": {
                "type": {
                  "name": "Hash"
                }
              },
              "definitions": {
                "type": {
                  "name": "Hash"
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "name": {
                  },
                  "rs_ca_ver": {
                  },
                  "short_description": {
                  },
                  "long_description": {
                  },
                  "parameters": {
                  },
                  "conditions": {
                  },
                  "mappings": {
                  },
                  "resources": {
                  },
                  "outputs": {
                  },
                  "operations": {
                  },
                  "definitions": {
                  }
                },
                "example": {
                  "name": "threesome",
                  "rs_ca_ver": 422,
                  "short_description": "telephoto",
                  "long_description": "poultice",
                  "parameters": {
                    "bombardment": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "label": {
                        },
                        "index": {
                        },
                        "category": {
                        },
                        "description": {
                        },
                        "default": {
                        },
                        "no_echo": {
                        },
                        "allowed_values": {
                        },
                        "operations": {
                        },
                        "min_length": {
                        },
                        "max_length": {
                        },
                        "min_value": {
                        },
                        "max_value": {
                        },
                        "allowed_pattern": {
                        },
                        "constraint_description": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "conditions": {
                    "stencilled": {
                      "matriculating": [
                        "An Object",
                        "An Object"
                      ],
                      "Hawthorne": [
                        "An Object",
                        "An Object"
                      ]
                    },
                    "sleeplessness": {
                      "pixie": [
                        "An Object"
                      ]
                    }
                  },
                  "mappings": {
                    "talkativeness": {
                      "ringmaster": {
                        "mongeese": "walling",
                        "saves": "additives",
                        "clinicians": "regurgitating"
                      },
                      "shortest": {
                        "Fijians": "fulminations"
                      }
                    }
                  },
                  "resources": {
                    "plating": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "fields": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "aver": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "fields": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "outputs": {
                    "giving": {
                      "lazy_attributes": {
                        "index": {
                        },
                        "default_value": {
                        },
                        "category": {
                        },
                        "label": {
                        },
                        "description": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "operations": {
                    "chiefs": {
                      "lazy_attributes": {
                        "definition": {
                        },
                        "description": {
                        },
                        "parameters": {
                        },
                        "output_mappings": {
                        },
                        "resource_mappings": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "spiciness": {
                      "lazy_attributes": {
                        "definition": {
                        },
                        "description": {
                        },
                        "parameters": {
                        },
                        "output_mappings": {
                        },
                        "resource_mappings": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "definitions": {
                    "decoded": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "kindergartener": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "subclass": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  }
                }
              },
              "expanded": {
                "attributes": {
                  "name": {
                  },
                  "rs_ca_ver": {
                  },
                  "short_description": {
                  },
                  "long_description": {
                  },
                  "source": {
                  },
                  "parameters": {
                  },
                  "conditions": {
                  },
                  "mappings": {
                  },
                  "resources": {
                  },
                  "outputs": {
                  },
                  "operations": {
                  },
                  "definitions": {
                  }
                },
                "example": {
                  "name": "threesome",
                  "rs_ca_ver": 422,
                  "short_description": "telephoto",
                  "long_description": "poultice",
                  "source": "sereneness",
                  "parameters": {
                    "bombardment": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "label": {
                        },
                        "index": {
                        },
                        "category": {
                        },
                        "description": {
                        },
                        "default": {
                        },
                        "no_echo": {
                        },
                        "allowed_values": {
                        },
                        "operations": {
                        },
                        "min_length": {
                        },
                        "max_length": {
                        },
                        "min_value": {
                        },
                        "max_value": {
                        },
                        "allowed_pattern": {
                        },
                        "constraint_description": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "conditions": {
                    "stencilled": {
                      "matriculating": [
                        "An Object",
                        "An Object"
                      ],
                      "Hawthorne": [
                        "An Object",
                        "An Object"
                      ]
                    },
                    "sleeplessness": {
                      "pixie": [
                        "An Object"
                      ]
                    }
                  },
                  "mappings": {
                    "talkativeness": {
                      "ringmaster": {
                        "mongeese": "walling",
                        "saves": "additives",
                        "clinicians": "regurgitating"
                      },
                      "shortest": {
                        "Fijians": "fulminations"
                      }
                    }
                  },
                  "resources": {
                    "plating": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "fields": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "aver": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "fields": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "outputs": {
                    "giving": {
                      "lazy_attributes": {
                        "index": {
                        },
                        "default_value": {
                        },
                        "category": {
                        },
                        "label": {
                        },
                        "description": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "operations": {
                    "chiefs": {
                      "lazy_attributes": {
                        "definition": {
                        },
                        "description": {
                        },
                        "parameters": {
                        },
                        "output_mappings": {
                        },
                        "resource_mappings": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "spiciness": {
                      "lazy_attributes": {
                        "definition": {
                        },
                        "description": {
                        },
                        "parameters": {
                        },
                        "output_mappings": {
                        },
                        "resource_mappings": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "definitions": {
                    "decoded": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "kindergartener": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "subclass": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.compiled_cat",
            "description": null,
            "example": {
              "name": "threesome",
              "rs_ca_ver": 422,
              "short_description": "telephoto",
              "long_description": "poultice",
              "source": "sereneness",
              "parameters": {
                "bombardment": {
                  "lazy_attributes": {
                    "type": {
                    },
                    "label": {
                    },
                    "index": {
                    },
                    "category": {
                    },
                    "description": {
                    },
                    "default": {
                    },
                    "no_echo": {
                    },
                    "allowed_values": {
                    },
                    "operations": {
                    },
                    "min_length": {
                    },
                    "max_length": {
                    },
                    "min_value": {
                    },
                    "max_value": {
                    },
                    "allowed_pattern": {
                    },
                    "constraint_description": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              },
              "required_parameters": [
                "gyros",
                "pestilent"
              ],
              "conditions": {
                "stencilled": {
                  "matriculating": [
                    "An Object",
                    "An Object"
                  ],
                  "Hawthorne": [
                    "An Object",
                    "An Object"
                  ]
                },
                "sleeplessness": {
                  "pixie": [
                    "An Object"
                  ]
                }
              },
              "mappings": {
                "talkativeness": {
                  "ringmaster": {
                    "mongeese": "walling",
                    "saves": "additives",
                    "clinicians": "regurgitating"
                  },
                  "shortest": {
                    "Fijians": "fulminations"
                  }
                }
              },
              "resources": {
                "plating": {
                  "lazy_attributes": {
                    "type": {
                    },
                    "fields": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                },
                "aver": {
                  "lazy_attributes": {
                    "type": {
                    },
                    "fields": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              },
              "outputs": {
                "giving": {
                  "lazy_attributes": {
                    "index": {
                    },
                    "default_value": {
                    },
                    "category": {
                    },
                    "label": {
                    },
                    "description": {
                    },
                    "condition": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              },
              "operations": {
                "chiefs": {
                  "lazy_attributes": {
                    "definition": {
                    },
                    "description": {
                    },
                    "parameters": {
                    },
                    "output_mappings": {
                    },
                    "resource_mappings": {
                    },
                    "condition": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                },
                "spiciness": {
                  "lazy_attributes": {
                    "definition": {
                    },
                    "description": {
                    },
                    "parameters": {
                    },
                    "output_mappings": {
                    },
                    "resource_mappings": {
                    },
                    "condition": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              },
              "definitions": {
                "decoded": {
                  "lazy_attributes": {
                    "source": {
                    },
                    "arguments": {
                    },
                    "returns": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                },
                "kindergartener": {
                  "lazy_attributes": {
                    "source": {
                    },
                    "arguments": {
                    },
                    "returns": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                },
                "subclass": {
                  "lazy_attributes": {
                    "source": {
                    },
                    "arguments": {
                    },
                    "returns": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              }
            }
          }
        }
      }
    },
    "designer": {
      "1.0": {
        "template": {
          "controller": {
            "description": "\nA Template represent a CloudApplication Template (CAT) that has been uploaded to this design collection. \nFor information on the syntax of a CAT file, please see the [CAT Designers Guide](http://support.rightscale.com/12-Guides/Self-Service/20_Cloud_Application_Template_%28CAT%29_Designers_Guide) on the RightScale Support \nsite.\n\nA CAT file is compiled by Self-Service to make it ready for publication and subsequent launch by users. To \ntest your CAT file syntax, you can call the compile action with the source content. In order to\nPublish your CAT to the Catalog where users can launch it, it must be uploaded to Designer first, and then\npublished to the Catalog. \n\nCAT files are uniquely identified by the name of the CloudApplication, which is specified as the \"name\" \nattribute inside of a CAT file. \n      ",
            "media_type": "V1::MediaType::Template",
            "mime_type": "application/vnd.rightscale.self_service.template",
            "actions": [
              {
                "description": "List the templates available in Designer along with some general details.",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/collections/:collection_id/templates"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "ids": {
                        "description": "An optional list of template IDs to retrieve",
                        "example_definition": "5392479332ca2bd0ca000002,5395f22432ca2bfd41000001,53b447b64a16db52e7000001",
                        "type": {
                          "name": "Ids",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345",
                    "ids": [
                      "5392479332ca2bd0ca000002",
                      "5395f22432ca2bfd41000001",
                      "53b447b64a16db52e7000001"
                    ]
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Show detailed information about a given Template. Use the views specified below for more information.",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/collections/:collection_id/templates/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the Template",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      },
                      "view": {
                        "values": [
                          "default",
                          "expanded"
                        ],
                        "description": "Optional view to return",
                        "example_definition": "expanded",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345",
                    "id": "5392479332ca2bd0ca000002",
                    "view": "expanded"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_found": {
                    "description": "The template ID was not found in the specified account/collection.",
                    "status": 404,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Create a new Template by uploading its content to Designer.",
                "name": "create",
                "urls": [
                  [
                    "POST",
                    "/collections/:collection_id/templates"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345"
                  }
                },
                "payload": {
                  "type": {
                    "attributes": {
                      "source": {
                        "required": true,
                        "type": {
                          "name": "V1::Type::FileUpload"
                        },
                        "description": "Multipart File Upload"
                      }
                    }
                  },
                  "example": {
                    "filename": "my_cat_file.rb",
                    "type": "explosiveness",
                    "name": "Athenian",
                    "tempfile": "#<File:0x00000002551520>",
                    "head": "purloining"
                  }
                },
                "responses": {
                  "created": {
                    "description": "The Template was successfully uploaded to and compiled by Designer.",
                    "status": 201,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "already_exists": {
                    "description": "A CAT with the same \"name\" (as specified in the CAT) already exists. Use \"update\" instead.",
                    "status": 409
                  },
                  "unprocessable_entity": {
                    "description": "The Template failed to compile - the response includes detailed information about the failure(s).",
                    "status": 422
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Update the content of an existing Template (a Template with the same \"name\" value in the CAT).",
                "name": "update",
                "urls": [
                  [
                    "PUT",
                    "/collections/:collection_id/templates/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the Template to update",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345",
                    "id": "5392479332ca2bd0ca000002"
                  }
                },
                "payload": {
                  "type": {
                    "attributes": {
                      "source": {
                        "required": true,
                        "type": {
                          "name": "V1::Type::FileUpload"
                        },
                        "description": "Multipart File Upload"
                      }
                    }
                  },
                  "example": {
                    "filename": "my_cat_file.rb",
                    "type": "explosiveness",
                    "name": "Athenian",
                    "tempfile": "#<File:0x0000000255ae90>",
                    "head": "purloining"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": "The Template was successfully updated.",
                    "status": 204,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_found": {
                    "description": "The template ID was not found in the specified account/collection.",
                    "status": 404,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "unprocessable_entity": {
                    "description": "The Template failed to compile - the response includes detailed information about the failure(s).",
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete a Template from the system. Note: deleting a Template from Designer doesn't remove it from the Catalog if it has already been published -- see the \"unpublish\" action.",
                "name": "delete",
                "urls": [
                  [
                    "DELETE",
                    "/collections/:collection_id/templates/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the Template to delete",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345",
                    "id": "5392479332ca2bd0ca000002"
                  }
                },
                "responses": {
                  "no_content": {
                    "description": null,
                    "status": 204,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_found": {
                    "description": "The template ID was not found in the specified account/collection.",
                    "status": 404,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete multiple Templates from the system in bulk. Note: deleting a Template from Designer doesn't remove it from the Catalog if it has already been published -- see the \"unpublish\" action.",
                "name": "multi_delete",
                "urls": [
                  [
                    "DELETE",
                    "/collections/:collection_id/templates"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "ids": {
                        "required": true,
                        "description": "The IDs of the Template to delete",
                        "example_definition": "5392479332ca2bd0ca000002,5395f22432ca2bfd41000001,53b447b64a16db52e7000001",
                        "type": {
                          "name": "Ids",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345",
                    "ids": [
                      "5392479332ca2bd0ca000002",
                      "5395f22432ca2bfd41000001",
                      "53b447b64a16db52e7000001"
                    ]
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "no_content": {
                    "description": "The Template was successfully deleted.",
                    "status": 204,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_found": {
                    "description": "The template ID was not found in the specified account/collection.",
                    "status": 404,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Download the source of a Template.",
                "name": "download",
                "urls": [
                  [
                    "GET",
                    "/collections/:collection_id/templates/:id/download"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the Template to download",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      },
                      "api_version": {
                        "required": true,
                        "description": "The API version (only valid value is currently \"1.0\")",
                        "example_definition": "1.0",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345",
                    "id": "5392479332ca2bd0ca000002",
                    "api_version": "1.0"
                  }
                },
                "responses": {
                  "download": {
                    "description": null,
                    "status": 200
                  },
                  "not_found": {
                    "description": "The template ID was not found in the specified account/collection.",
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Compile the Template, but don't save it to Designer. Useful for debugging a CAT file while you are still authoring it.",
                "name": "compile",
                "urls": [
                  [
                    "POST",
                    "/collections/:collection_id/templates/actions/compile"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "source": {
                        "required": true,
                        "description": "The source of the CAT as a string",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "source": "poled"
                  }
                },
                "responses": {
                  "compiled_template": {
                    "description": "The CAT was successfully compiled and its internal representation as JSON was returned.",
                    "status": 200,
                    "mime_type": "application/vnd.rightscale.self_service.compiled_cat"
                  },
                  "parse_failure": {
                    "description": "The Template failed to compile - the response includes detailed information about the failure(s).",
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Publish the given Template to the Catalog so that users can launch it.",
                "name": "publish",
                "urls": [
                  [
                    "POST",
                    "/collections/:collection_id/templates/actions/publish"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "id": {
                        "required": true,
                        "description": "The ID of a Template to publish",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      },
                      "name": {
                        "description": "Optionally override the Template name for display in the Catalog",
                        "example_definition": "Development Server",
                        "type": {
                          "name": "String"
                        }
                      },
                      "short_description": {
                        "description": "Optionally override the Template short description for display in the Catalog",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      },
                      "overridden_application_href": {
                        "description": "If re-publishing, you must specify the href of the Application in the Catalog that is being overridden",
                        "example_definition": "/api/catalog/catalogs/12345/applications/5392479332c42bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "id": "5392479332ca2bd0ca000002",
                    "name": "Development Server",
                    "short_description": "5392479332ca2bd0ca000002",
                    "overridden_application_href": "/api/catalog/catalogs/12345/applications/5392479332c42bd0ca000002"
                  }
                },
                "responses": {
                  "proxy": {
                    "description": null,
                    "status": 200
                  },
                  "published": {
                    "description": "Template successfully published to the Catalog",
                    "status": 201
                  },
                  "already_published": {
                    "description": "The Template was already published and \"overridden_application_href\" was not specified.",
                    "status": 409
                  },
                  "no_content": {
                    "description": null,
                    "status": 204
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_found": {
                    "description": "The template ID was not found in the specified account/collection.",
                    "status": 404,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "unprocessable_entity": {
                    "description": "The specified \"overridden_application_href\" was invalid or not found.",
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Remove a publication from the Catalog by specifying its associated Template.",
                "name": "unpublish",
                "urls": [
                  [
                    "POST",
                    "/collections/:collection_id/templates/actions/unpublish"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "collection_id": {
                        "required": true,
                        "description": "The collection ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "collection_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": "Skeletor::MediaType::DSLCompiler",
                  "reference": "V1::MediaType::Template",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "id": {
                        "required": true,
                        "description": "The ID of the Template to unpublish",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "id": "5392479332ca2bd0ca000002"
                  }
                },
                "responses": {
                  "proxy": {
                    "description": null,
                    "status": 200
                  },
                  "no_content": {
                    "description": "The Template was successfully unpublished from the Catalog",
                    "status": 204
                  },
                  "not_found": {
                    "description": "The template ID was not found in the specified account/collection.",
                    "status": 404
                  },
                  "unprocessable_entity": {
                    "description": "The template was not published, so could not be unpublished.",
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "template"
          },
          "media_type": {
            "name": "V1::MediaType::Template",
            "attributes": {
              "id": {
                "required": true,
                "description": "Template id",
                "example_definition": "5392479332ca2bd0ca000002",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "Template href",
                "example_definition": "/api/designer/collections/60073/templates/5392479332ca2bd0ca000002",
                "type": {
                  "name": "String"
                }
              },
              "name": {
                "description": "Name of Template as specified in the CAT",
                "example_definition": "Base Dev Server",
                "type": {
                  "name": "String"
                }
              },
              "filename": {
                "description": "Local filename of Template when it was uploaded",
                "example_definition": "base_server.rb",
                "type": {
                  "name": "String"
                }
              },
              "source": {
                "description": "Raw Template source (CAT content)",
                "example_definition": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                "type": {
                  "name": "String"
                }
              },
              "short_description": {
                "description": "Short description of Template (can't be blank)",
                "example_definition": "A basic server",
                "type": {
                  "name": "String"
                }
              },
              "long_description": {
                "description": "Long description of Template (can be blank)",
                "example_definition": "A development server to use for any purpose",
                "type": {
                  "name": "String"
                }
              },
              "compiled_cat": {
                "description": "Compiled Template source",
                "example_definition": "{\\\"name\\\":\\\"TEST - new outputs\\\",\\\"rs_ca_ver\\\":20131202,\\\"short_description\\\":\\\"Tests for new outputs\\\"....}",
                "type": {
                  "name": "String"
                }
              },
              "parameters": {
                "description": "Parameters from the CAT file",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "Service::SharedType::Parameter"
                    }
                  }
                }
              },
              "required_parameters": {
                "description": "Parameters required to launch the CAT",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "String"
                    }
                  }
                }
              },
              "application_info": {
                "description": "Application that was published from this Template, if one exists",
                "type": {
                  "name": "V1::Type::ApplicationInfo"
                }
              },
              "created_by": {
                "description": "User that created the Template",
                "type": {
                  "name": "Service::SharedType::User"
                }
              },
              "timestamps": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "created_at": {
                      "description": "Created timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "updated_at": {
                      "description": "Updated timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "published_at": {
                      "description": "Published timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#template",
                "example_definition": "self_service#template",
                "type": {
                  "name": "String"
                }
              },
              "published_by": {
                "description": "User that published the Template",
                "type": {
                  "name": "Service::SharedType::User"
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "name": {
                  },
                  "filename": {
                  },
                  "href": {
                  },
                  "short_description": {
                  },
                  "long_description": {
                  },
                  "application_info": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  },
                  "published_by": {
                  }
                },
                "example": {
                  "kind": "self_service#template",
                  "id": "5392479332ca2bd0ca000002",
                  "name": "Base Dev Server",
                  "filename": "base_server.rb",
                  "href": "/api/designer/collections/60073/templates/5392479332ca2bd0ca000002",
                  "short_description": "A basic server",
                  "long_description": "A development server to use for any purpose",
                  "application_info": {
                    "href": "/api/catalog/catalogs/1234/applications/53b41da24a16db7f41000001",
                    "name": "All-In-One Dev Server"
                  },
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2014-04-13T00:00:00+00:00",
                    "updated_at": "2014-02-12T00:00:00+00:00",
                    "published_at": "2013-06-13T00:00:00+00:00"
                  },
                  "published_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  }
                }
              },
              "expanded": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "name": {
                  },
                  "filename": {
                  },
                  "href": {
                  },
                  "source": {
                  },
                  "short_description": {
                  },
                  "long_description": {
                  },
                  "compiled_cat": {
                  },
                  "parameters": {
                  },
                  "required_parameters": {
                  },
                  "application_info": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  },
                  "published_by": {
                  }
                },
                "example": {
                  "kind": "self_service#template",
                  "id": "5392479332ca2bd0ca000002",
                  "name": "Base Dev Server",
                  "filename": "base_server.rb",
                  "href": "/api/designer/collections/60073/templates/5392479332ca2bd0ca000002",
                  "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                  "short_description": "A basic server",
                  "long_description": "A development server to use for any purpose",
                  "compiled_cat": "{\\\"name\\\":\\\"TEST - new outputs\\\",\\\"rs_ca_ver\\\":20131202,\\\"short_description\\\":\\\"Tests for new outputs\\\"....}",
                  "parameters": [
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    },
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    }
                  ],
                  "required_parameters": [
                    "lovable",
                    "invested",
                    "maced"
                  ],
                  "application_info": {
                    "href": "/api/catalog/catalogs/1234/applications/53b41da24a16db7f41000001",
                    "name": "All-In-One Dev Server"
                  },
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2014-04-13T00:00:00+00:00",
                    "updated_at": "2014-02-12T00:00:00+00:00",
                    "published_at": "2013-06-13T00:00:00+00:00"
                  },
                  "published_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.template",
            "description": null,
            "example": {
              "id": "5392479332ca2bd0ca000002",
              "href": "/api/designer/collections/60073/templates/5392479332ca2bd0ca000002",
              "name": "Base Dev Server",
              "filename": "base_server.rb",
              "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
              "short_description": "A basic server",
              "long_description": "A development server to use for any purpose",
              "compiled_cat": "{\\\"name\\\":\\\"TEST - new outputs\\\",\\\"rs_ca_ver\\\":20131202,\\\"short_description\\\":\\\"Tests for new outputs\\\"....}",
              "parameters": [
                {
                  "name": "cloud",
                  "description": "Select the cloud to launch in",
                  "type": "string",
                  "default": "AWS US-East",
                  "operations": [
                    "launch",
                    "update_code"
                  ],
                  "ui": {
                    "label": "Cloud",
                    "category": "Cloud Information",
                    "index": 1
                  },
                  "validation": {
                    "no_echo": true,
                    "min_length": 5,
                    "max_length": 100,
                    "min_value": 1024,
                    "max_value": 2048,
                    "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                    "allowed_values": [
                      "An Object",
                      "An Object",
                      "An Object"
                    ],
                    "constraint_description": "The value must fit the pattern: ###-ABC"
                  }
                },
                {
                  "name": "cloud",
                  "description": "Select the cloud to launch in",
                  "type": "string",
                  "default": "AWS US-East",
                  "operations": [
                    "launch",
                    "update_code"
                  ],
                  "ui": {
                    "label": "Cloud",
                    "category": "Cloud Information",
                    "index": 1
                  },
                  "validation": {
                    "no_echo": true,
                    "min_length": 5,
                    "max_length": 100,
                    "min_value": 1024,
                    "max_value": 2048,
                    "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                    "allowed_values": [
                      "An Object",
                      "An Object"
                    ],
                    "constraint_description": "The value must fit the pattern: ###-ABC"
                  }
                }
              ],
              "required_parameters": [
                "lovable",
                "invested",
                "maced"
              ],
              "application_info": {
                "href": "/api/catalog/catalogs/1234/applications/53b41da24a16db7f41000001",
                "name": "All-In-One Dev Server"
              },
              "created_by": {
                "id": 9876,
                "name": "Joe Montana",
                "email": "joe.montana@49ers.com"
              },
              "timestamps": {
                "created_at": "2014-04-13T00:00:00+00:00",
                "updated_at": "2014-02-12T00:00:00+00:00",
                "published_at": "2013-06-13T00:00:00+00:00"
              },
              "kind": "self_service#template",
              "published_by": {
                "id": 9876,
                "name": "Joe Montana",
                "email": "joe.montana@49ers.com"
              }
            }
          }
        },
        "parameter (*)": {
          "kind": {
            "name": "Service::SharedType::Parameter",
            "attributes": {
              "name": {
                "description": "Parameter name",
                "example_definition": "cloud",
                "type": {
                  "name": "String"
                }
              },
              "description": {
                "description": "A description of the parameter that will be displayed to users",
                "example_definition": "Select the cloud to launch in",
                "type": {
                  "name": "String"
                }
              },
              "type": {
                "values": [
                  "string",
                  "number",
                  "list"
                ],
                "description": "Defines whether the parameter is a string, a number or a comma separated list of values",
                "example_definition": "string",
                "type": {
                  "name": "String"
                }
              },
              "default": {
                "description": "Default value for parameter if none is specified. Note this must meet the requirements of the other fields (such as max_length, allowed pattern, etc).",
                "example_definition": "AWS US-East",
                "type": {
                  "name": "Object"
                }
              },
              "operations": {
                "description": "The name of operations that depend on this parameter",
                "example_definition": "[\"launch\", \"update_code\"]",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "Object"
                    }
                  }
                }
              },
              "ui": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "label": {
                      "description": "The label used to display the parameter to users e.g. when defining its value",
                      "example_definition": "Cloud",
                      "type": {
                        "name": "String"
                      }
                    },
                    "category": {
                      "description": "An optional category used to group parameters in the UI",
                      "example_definition": "Cloud Information",
                      "type": {
                        "name": "String"
                      }
                    },
                    "index": {
                      "description": "Parameters are displayed in the UI in the same order as they are defined in the template. Generally this is derived from the ordering in the source CAT file.",
                      "example_definition": "1",
                      "type": {
                        "name": "Integer"
                      }
                    }
                  }
                }
              },
              "validation": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "no_echo": {
                      "description": "Whether the value of the parameter should be hidden in UIs and API responses. Generally used for passwords or other sensitive inputs. (default: false)",
                      "example_definition": "true",
                      "type": {
                        "name": "Boolean"
                      }
                    },
                    "min_length": {
                      "description": "The mininum of characters in the parameter value. Only valid when \"type\" is one of \"string\" or \"list\".",
                      "example_definition": "5",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "max_length": {
                      "description": "The maximum number of characters in the parameter value. Only valid when \"type\" is one of \"string\" or \"list\".",
                      "example_definition": "100",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "min_value": {
                      "description": "The smallest numeric value allowed for the parameter. Only valid when \"type\" is \"number\".",
                      "example_definition": "1024",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "max_value": {
                      "description": "The largest numeric value allowed for the parameter. Only valid when \"type\" is \"number\".",
                      "example_definition": "2048",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "allowed_pattern": {
                      "description": "A regular expression that the paramater value must match. Only valid when the \"type\" is \"string\". Not valid when \"allowed_values\" is specified.",
                      "example_definition": "[a-z0-9]+[a-z0-9\\.-]*",
                      "type": {
                        "name": "String"
                      }
                    },
                    "allowed_values": {
                      "description": "A comma separated list of allowed values. Not valid when \"allowed_pattern\" is specified.",
                      "type": {
                        "name": "Collection",
                        "member_attribute": {
                          "type": {
                            "name": "Object"
                          }
                        }
                      }
                    },
                    "constraint_description": {
                      "description": "Message displayed when any of the constraint is violated. The system generates default error messages, this field allows overridding these to provide a clearer error message to the user.",
                      "example_definition": "The value must fit the pattern: ###-ABC",
                      "type": {
                        "name": "String"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "name": "cloud",
              "description": "Select the cloud to launch in",
              "type": "string",
              "default": "AWS US-East",
              "operations": [
                "launch",
                "update_code"
              ],
              "ui": {
                "label": "Cloud",
                "category": "Cloud Information",
                "index": 1
              },
              "validation": {
                "no_echo": true,
                "min_length": 5,
                "max_length": 100,
                "min_value": 1024,
                "max_value": 2048,
                "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                "allowed_values": [
                  "An Object",
                  "An Object",
                  "An Object"
                ],
                "constraint_description": "The value must fit the pattern: ###-ABC"
              }
            }
          }
        },
        "application_info (*)": {
          "kind": {
            "name": "V1::Type::ApplicationInfo",
            "attributes": {
              "href": {
                "description": "Application href",
                "example_definition": "/api/catalog/catalogs/1234/applications/53b41da24a16db7f41000001",
                "type": {
                  "name": "String"
                }
              },
              "name": {
                "description": "Application name, set when calling the \"publish\" action from Designer",
                "example_definition": "All-In-One Dev Server",
                "type": {
                  "name": "String"
                }
              }
            },
            "example": {
              "href": "/api/catalog/catalogs/1234/applications/53b41da24a16db7f41000001",
              "name": "All-In-One Dev Server"
            }
          }
        },
        "user (*)": {
          "kind": {
            "name": "Service::SharedType::User",
            "attributes": {
              "id": {
                "required": true,
                "description": "User id",
                "example_definition": "9876",
                "type": {
                  "name": "Integer"
                }
              },
              "name": {
                "description": "User name, usually of the form \"First Last\"",
                "example_definition": "Joe Montana",
                "type": {
                  "name": "String"
                }
              },
              "email": {
                "description": "User email",
                "example_definition": "joe.montana@49ers.com",
                "type": {
                  "name": "String"
                }
              }
            },
            "example": {
              "id": 9876,
              "name": "Joe Montana",
              "email": "joe.montana@49ers.com"
            }
          }
        },
        "file_upload (*)": {
          "kind": {
            "name": "V1::Type::FileUpload",
            "attributes": {
              "filename": {
                "required": true,
                "description": "The name of the file being uploaded",
                "example_definition": "my_cat_file.rb",
                "type": {
                  "name": "String"
                }
              },
              "type": {
                "required": true,
                "type": {
                  "name": "String"
                }
              },
              "name": {
                "required": true,
                "type": {
                  "name": "String"
                }
              },
              "tempfile": {
                "required": true,
                "type": {
                  "name": "Tempfile"
                }
              },
              "head": {
                "required": true,
                "type": {
                  "name": "String"
                }
              }
            },
            "example": {
              "filename": "my_cat_file.rb",
              "type": "devious",
              "name": "rowdiest",
              "tempfile": "#<File:0x000000025e4aa0>",
              "head": "objectiveness"
            }
          }
        }
      }
    },
    "manager": {
      "1.0": {
        "operation": {
          "controller": {
            "description": "Operations represent actions that can be taken on an Execution.\n\nWhen a CloudApp is launched, a sequence of Operations is run as [explained here](http://support.rightscale.com/12-Guides/Self-Service/25_Cloud_Application_Template_Language) in the Operations section\n\nWhile a CloudApp is running, users may launch any custom Operations as defined in the CAT.\n\nOnce a CAT is Terminated, a sequence of Operations is run as [explained here](http://support.rightscale.com/12-Guides/Self-Service/25_Cloud_Application_Template_Language#Operations) in the Operations section\n",
            "media_type": "V1::MediaType::Operation",
            "mime_type": "application/vnd.rightscale.self_service.operation",
            "actions": [
              {
                "description": "Get the list of 50 most recent Operations (usually filtered by Execution).",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/projects/:project_id/operations"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Operation",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "ids": {
                        "description": "IDs of operations to filter on",
                        "example_definition": [
                          "5395c9d1a27d2ee0f9000003",
                          "539bb5b4a27d2e570c000005"
                        ],
                        "type": {
                          "name": "Ids",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      },
                      "filter": {
                        "description": "Filter by Execution id, status and/or by ids",
                        "example_definition": {
                        },
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      },
                      "limit": {
                        "min": 1,
                        "description": "The maximum number of operations to retrieve. The maximum (and default) limit is 50.If a limit of more than 50 is specified, only 50 operations will be returned",
                        "example_definition": "1",
                        "type": {
                          "name": "Integer"
                        }
                      },
                      "view": {
                        "values": [
                          "default",
                          "expanded"
                        ],
                        "description": "Optional view to return",
                        "example_definition": "expanded",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "ids": [
                      "5395c9d1a27d2ee0f9000003"
                    ],
                    "filter": [
                      "execution_id==5392479332ca2bd0ca000002",
                      "ids==53d7dc731ee3ea0c7400001c,53e3bc46a37b33619600018a",
                      "status==running",
                      "name==update_code"
                    ],
                    "limit": 1,
                    "view": "expanded"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Get the details for a specific Operation",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/projects/:project_id/operations/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Operation",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the Operation to get details for",
                        "example_definition": "539bb5b4a27d2e570c000005",
                        "type": {
                          "name": "String"
                        }
                      },
                      "view": {
                        "values": [
                          "default",
                          "expanded"
                        ],
                        "description": "Optional view to return",
                        "example_definition": "expanded",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "id": "539bb5b4a27d2e570c000005",
                    "view": "expanded"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_found": {
                    "description": "An Operation with the given ID could not be found",
                    "status": 404,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "forbidden": {
                    "description": "The Execution specified was launched by a different user and the AccountPreference is set to only allow users to manage their own CloudApp Executions.",
                    "status": 403,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Trigger an Operation to run by specifying the Execution ID and the name of the Operation.",
                "name": "create",
                "urls": [
                  [
                    "POST",
                    "/projects/:project_id/operations"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Operation",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Operation",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "name": {
                        "description": "The name of the operation to run",
                        "required": true,
                        "example_definition": "update_code",
                        "type": {
                          "name": "String"
                        }
                      },
                      "execution_id": {
                        "required": true,
                        "description": "The Execution ID on which to run the operation",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      },
                      "options": {
                        "description": "The configuration options of the operation. These are the values provided for the CloudAPP parameters that this operation depends on.",
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "V1::Type::ConfigurationOption"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "name": "update_code",
                    "execution_id": "5392479332ca2bd0ca000002",
                    "options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ]
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "created": {
                    "description": "The Operation was successfully started.",
                    "status": 201,
                    "headers": "Location",
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "no_content": {
                    "description": "No operation to create (Example: The CAT doesn't have any resources and the 'launch' operation is being created)",
                    "status": 204,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "bad_request": {
                    "description": null,
                    "status": 400,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_allowed": {
                    "description": null,
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "parameter_not_found": {
                    "description": null,
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_disabled": {
                    "description": "The 'enable' operation can only be called if the CloudApp state is 'disabled' or 'launching'",
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_enabled": {
                    "description": "The 'disable' operation can only be called if the CloudApp state is 'running'",
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_running": {
                    "description": "The operation can not be called when the CloudApp is in the 'not_started' or 'terminated' state",
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "already_launched": {
                    "description": "The 'launch' operation can only be called when the CloudApp is in the 'not_started' or 'terminated' state",
                    "status": 409,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "already_terminating": {
                    "description": "The 'terminate' operation cannot be called when the CloudApp is already 'terminating'",
                    "status": 409,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "forbidden": {
                    "description": "The Execution specified was launched by a different user and the AccountPreference is set to only allow users to manage their own CloudApp Executions.",
                    "status": 403,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "operation"
          },
          "media_type": {
            "name": "V1::MediaType::Operation",
            "attributes": {
              "id": {
                "required": true,
                "description": "Operation id",
                "example_definition": "53e270fca37b3315c5000136",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "Operation href",
                "example_definition": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                "type": {
                  "name": "String"
                }
              },
              "name": {
                "description": "Name of operation",
                "example_definition": "launch",
                "type": {
                  "name": "String"
                }
              },
              "configuration_options": {
                "description": "Configuration options given when creating the operation",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "V1::Type::ConfigurationOption"
                    }
                  }
                }
              },
              "status": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "tasks": {
                      "description": "Running operation tasks",
                      "type": {
                        "name": "Collection",
                        "member_attribute": {
                          "type": {
                            "name": "V1::MediaType::Task"
                          }
                        }
                      }
                    },
                    "summary": {
                      "values": [
                        "not_started",
                        "running",
                        "paused",
                        "canceling",
                        "completed",
                        "failed",
                        "canceled",
                        "aborted"
                      ],
                      "description": "Operation status",
                      "type": {
                        "name": "String"
                      }
                    },
                    "percent": {
                      "description": "Overall operation progress percentage",
                      "example_definition": "75",
                      "type": {
                        "name": "Integer"
                      }
                    }
                  }
                }
              },
              "execution": {
                "identity": "id",
                "dsl_compiler": {
                },
                "description": "Execution that owns operation",
                "reference": "V1::MediaType::Execution",
                "type": {
                  "name": "V1::MediaType::Execution",
                  "views": {
                    "default": {
                      "attributes": {
                        "kind": {
                        },
                        "id": {
                        },
                        "name": {
                        },
                        "href": {
                        },
                        "description": {
                        },
                        "status": {
                        },
                        "cost": {
                        },
                        "deployment": {
                        },
                        "created_by": {
                        },
                        "timestamps": {
                        },
                        "links": {
                        }
                      }
                    },
                    "expanded": {
                      "attributes": {
                        "kind": {
                        },
                        "id": {
                        },
                        "name": {
                        },
                        "href": {
                        },
                        "description": {
                        },
                        "status": {
                        },
                        "cost": {
                        },
                        "deployment": {
                        },
                        "deployment_url": {
                        },
                        "configuration_options": {
                        },
                        "outputs": {
                        },
                        "available_operations": {
                        },
                        "running_operations": {
                        },
                        "api_resources": {
                        },
                        "latest_notifications": {
                        },
                        "created_by": {
                        },
                        "timestamps": {
                        },
                        "links": {
                        },
                        "launched_from_summary": {
                        }
                      }
                    },
                    "source": {
                      "attributes": {
                        "id": {
                        },
                        "name": {
                        },
                        "href": {
                        },
                        "description": {
                        },
                        "configuration_options": {
                        },
                        "status": {
                        },
                        "source": {
                        },
                        "launched_from": {
                        }
                      }
                    },
                    "master": {
                      "attributes": {
                        "id": {
                          "view": "master"
                        },
                        "href": {
                          "view": "master"
                        },
                        "name": {
                          "view": "master"
                        },
                        "description": {
                          "view": "master"
                        },
                        "status": {
                          "view": "master"
                        },
                        "available_operations": {
                          "view": "master"
                        },
                        "running_operations": {
                          "view": "master"
                        },
                        "configuration_options": {
                          "view": "master"
                        },
                        "api_resources": {
                          "view": "master"
                        },
                        "outputs": {
                          "view": "master"
                        },
                        "source": {
                          "view": "master"
                        },
                        "launched_from": {
                          "view": "master"
                        },
                        "launched_from_summary": {
                          "view": "master"
                        },
                        "deployment": {
                          "view": "master"
                        },
                        "deployment_url": {
                          "view": "master"
                        },
                        "latest_notifications": {
                          "view": "master"
                        },
                        "created_by": {
                          "view": "master"
                        },
                        "cost": {
                          "view": "master"
                        },
                        "timestamps": {
                          "view": "master"
                        },
                        "kind": {
                          "view": "master"
                        },
                        "links": {
                          "view": "master"
                        }
                      }
                    }
                  },
                  "mime_type": "application/vnd.rightscale.self_service.execution",
                  "description": null
                }
              },
              "created_by": {
                "description": "User that launched execution",
                "type": {
                  "name": "Service::SharedType::User"
                }
              },
              "timestamps": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "created_at": {
                      "description": "Creation timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "finished_at": {
                      "description": "Finish timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#operation",
                "example_definition": "self_service#operation",
                "type": {
                  "name": "String"
                }
              },
              "links": {
                "reference": "V1::MediaType::Operation",
                "type": {
                  "name": "V1::MediaType::Operation::Links",
                  "attributes": {
                    "execution": {
                      "identity": "id",
                      "dsl_compiler": {
                      },
                      "reference": "V1::MediaType::Execution",
                      "type": {
                        "name": "V1::MediaType::Execution::Link",
                        "attributes": {
                          "id": {
                            "required": true,
                            "description": "Execution id",
                            "example_definition": "5392479332ca2bd0ca000002",
                            "type": {
                              "name": "String"
                            }
                          },
                          "name": {
                            "description": "Name of execution",
                            "example_definition": "My dev server for testing",
                            "type": {
                              "name": "String"
                            }
                          },
                          "href": {
                            "description": "Execution href",
                            "example_definition": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                            "type": {
                              "name": "String"
                            }
                          }
                        },
                        "views": {
                          "default": {
                            "attributes": {
                              "id": {
                              },
                              "name": {
                              },
                              "href": {
                              }
                            }
                          },
                          "master": {
                            "attributes": {
                              "id": {
                                "view": "master"
                              },
                              "name": {
                                "view": "master"
                              },
                              "href": {
                                "view": "master"
                              }
                            }
                          }
                        },
                        "link_to": "V1::MediaType::Execution"
                      }
                    }
                  },
                  "views": {
                    "default": {
                      "attributes": {
                        "execution": {
                        }
                      }
                    },
                    "master": {
                      "attributes": {
                        "execution": {
                          "view": "master"
                        }
                      }
                    }
                  },
                  "links_struct": true
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "name": {
                  },
                  "href": {
                  },
                  "status": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  },
                  "links": {
                  }
                },
                "example": {
                  "kind": "self_service#operation",
                  "id": "53e270fca37b3315c5000136",
                  "name": "launch",
                  "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                  "status": {
                    "tasks": [
                      {
                        "name": "somnambulism",
                        "label": "Khabarovsk",
                        "status": {
                          "percent": 508,
                          "summary": "subordination"
                        }
                      },
                      {
                        "name": "squishes",
                        "label": "ballyhoos",
                        "status": {
                          "percent": 134,
                          "summary": "exhorting"
                        }
                      },
                      {
                        "name": "unimaginative",
                        "label": "Bridgman",
                        "status": {
                          "percent": 320,
                          "summary": "pusillanimous"
                        }
                      }
                    ],
                    "summary": "canceling",
                    "percent": 75
                  },
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2013-07-25T00:00:00+00:00",
                    "finished_at": "2012-12-13T00:00:00+00:00"
                  },
                  "links": {
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "name": "My dev server for testing",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                    }
                  }
                }
              },
              "expanded": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "name": {
                  },
                  "href": {
                  },
                  "status": {
                  },
                  "configuration_options": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  },
                  "links": {
                  }
                },
                "example": {
                  "kind": "self_service#operation",
                  "id": "53e270fca37b3315c5000136",
                  "name": "launch",
                  "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                  "status": {
                    "tasks": [
                      {
                        "name": "somnambulism",
                        "label": "Khabarovsk",
                        "status": {
                          "percent": 508,
                          "summary": "subordination"
                        }
                      },
                      {
                        "name": "squishes",
                        "label": "ballyhoos",
                        "status": {
                          "percent": 134,
                          "summary": "exhorting"
                        }
                      },
                      {
                        "name": "unimaginative",
                        "label": "Bridgman",
                        "status": {
                          "percent": 320,
                          "summary": "pusillanimous"
                        }
                      }
                    ],
                    "summary": "canceling",
                    "percent": 75
                  },
                  "configuration_options": [
                    {
                      "name": "cloud",
                      "type": "string",
                      "value": "AWS US-West"
                    },
                    {
                      "name": "cloud",
                      "type": "string",
                      "value": "AWS US-West"
                    }
                  ],
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2013-07-25T00:00:00+00:00",
                    "finished_at": "2012-12-13T00:00:00+00:00"
                  },
                  "links": {
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "name": "My dev server for testing",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                    }
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.operation",
            "description": null,
            "example": {
              "id": "53e270fca37b3315c5000136",
              "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
              "name": "launch",
              "configuration_options": [
                {
                  "name": "cloud",
                  "type": "string",
                  "value": "AWS US-West"
                },
                {
                  "name": "cloud",
                  "type": "string",
                  "value": "AWS US-West"
                }
              ],
              "status": {
                "tasks": [
                  {
                    "name": "somnambulism",
                    "label": "Khabarovsk",
                    "status": {
                      "percent": 508,
                      "summary": "subordination"
                    }
                  },
                  {
                    "name": "squishes",
                    "label": "ballyhoos",
                    "status": {
                      "percent": 134,
                      "summary": "exhorting"
                    }
                  },
                  {
                    "name": "unimaginative",
                    "label": "Bridgman",
                    "status": {
                      "percent": 320,
                      "summary": "pusillanimous"
                    }
                  }
                ],
                "summary": "canceling",
                "percent": 75
              },
              "execution": {
                "id": "5392479332ca2bd0ca000002",
                "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                "name": "My dev server for testing",
                "description": "Dev server for our new user interface project.",
                "status": "running",
                "available_operations": [
                  {
                    "name": "update_code",
                    "description": "Update the code on the app servers",
                    "parameters": [
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      },
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      },
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      }
                    ]
                  },
                  {
                    "name": "update_code",
                    "description": "Update the code on the app servers",
                    "parameters": [
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      }
                    ]
                  }
                ],
                "running_operations": [
                  {
                    "id": "53e270fca37b3315c5000136",
                    "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                    "name": "launch",
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "status": {
                      "tasks": [
                        {
                          "name": "reemphasizing",
                          "label": "lissom"
                        },
                        {
                          "name": "slashing",
                          "label": "edify"
                        }
                      ],
                      "summary": "aborted",
                      "percent": 75
                    },
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                      "name": "My dev server for testing",
                      "description": "Dev server for our new user interface project.",
                      "status": "running",
                      "available_operations": [
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        }
                      ],
                      "running_operations": [
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        }
                      ],
                      "configuration_options": [
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        },
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        }
                      ],
                      "api_resources": [
                        {
                          "name": "busbies",
                          "type": "hairnets"
                        },
                        {
                          "name": "impositions",
                          "type": "chuckholes"
                        },
                        {
                          "name": "doubles",
                          "type": "Wheaties"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        }
                      ],
                      "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                      "launched_from": {
                        "type": "application",
                        "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                      },
                      "launched_from_summary": {
                      },
                      "deployment": "/api/deployments/461147093",
                      "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                      "latest_notifications": [
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "error",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "info",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        }
                      ],
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "cost": {
                        "value": "23.53",
                        "unit": "$",
                        "updated_at": "2013-01-03T00:00:00+00:00"
                      },
                      "timestamps": {
                        "created_at": "2012-12-12T00:00:00+00:00",
                        "launched_at": "2013-12-21T00:00:00+00:00",
                        "terminated_at": "2014-10-26T00:00:00+00:00"
                      },
                      "kind": "self_service#execution",
                      "links": {
                        "running_operations": {
                          "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                        },
                        "latest_notifications": {
                          "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                        }
                      }
                    },
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "timestamps": {
                      "created_at": "2013-05-22T00:00:00+00:00",
                      "finished_at": "2013-05-11T00:00:00+00:00"
                    },
                    "kind": "self_service#operation",
                    "links": {
                      "execution": {
                        "id": "5392479332ca2bd0ca000002",
                        "name": "My dev server for testing",
                        "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                      }
                    }
                  },
                  {
                    "id": "53e270fca37b3315c5000136",
                    "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                    "name": "launch",
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "status": {
                      "tasks": [
                        {
                          "name": "streakiest",
                          "label": "stultification"
                        }
                      ],
                      "summary": "paused",
                      "percent": 75
                    },
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                      "name": "My dev server for testing",
                      "description": "Dev server for our new user interface project.",
                      "status": "running",
                      "available_operations": [
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        }
                      ],
                      "running_operations": [
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        }
                      ],
                      "configuration_options": [
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        }
                      ],
                      "api_resources": [
                        {
                          "name": "assassin",
                          "type": "darker"
                        },
                        {
                          "name": "however",
                          "type": "essayist"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        }
                      ],
                      "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                      "launched_from": {
                        "type": "application",
                        "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                      },
                      "launched_from_summary": {
                      },
                      "deployment": "/api/deployments/461147093",
                      "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                      "latest_notifications": [
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "info",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "status_update",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        }
                      ],
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "cost": {
                        "value": "23.53",
                        "unit": "$",
                        "updated_at": "2014-07-18T00:00:00+00:00"
                      },
                      "timestamps": {
                        "created_at": "2014-08-17T00:00:00+00:00",
                        "launched_at": "2012-11-28T00:00:00+00:00",
                        "terminated_at": "2013-01-11T00:00:00+00:00"
                      },
                      "kind": "self_service#execution",
                      "links": {
                        "running_operations": {
                          "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                        },
                        "latest_notifications": {
                          "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                        }
                      }
                    },
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "timestamps": {
                      "created_at": "2014-09-09T00:00:00+00:00",
                      "finished_at": "2013-08-31T00:00:00+00:00"
                    },
                    "kind": "self_service#operation",
                    "links": {
                      "execution": {
                        "id": "5392479332ca2bd0ca000002",
                        "name": "My dev server for testing",
                        "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                      }
                    }
                  },
                  {
                    "id": "53e270fca37b3315c5000136",
                    "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                    "name": "launch",
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "status": {
                      "tasks": [
                        {
                          "name": "blah",
                          "label": "boisterously"
                        },
                        {
                          "name": "adoption",
                          "label": "foreknowledge"
                        },
                        {
                          "name": "handgun",
                          "label": "beaching"
                        }
                      ],
                      "summary": "aborted",
                      "percent": 75
                    },
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                      "name": "My dev server for testing",
                      "description": "Dev server for our new user interface project.",
                      "status": "running",
                      "available_operations": [
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        }
                      ],
                      "running_operations": [
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        }
                      ],
                      "configuration_options": [
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        },
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        }
                      ],
                      "api_resources": [
                        {
                          "name": "Horthy",
                          "type": "blazer"
                        },
                        {
                          "name": "Jock",
                          "type": "massacred"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        }
                      ],
                      "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                      "launched_from": {
                        "type": "application",
                        "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                      },
                      "launched_from_summary": {
                      },
                      "deployment": "/api/deployments/461147093",
                      "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                      "latest_notifications": [
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "info",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "error",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "status_update",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        }
                      ],
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "cost": {
                        "value": "23.53",
                        "unit": "$",
                        "updated_at": "2013-10-11T00:00:00+00:00"
                      },
                      "timestamps": {
                        "created_at": "2013-07-28T00:00:00+00:00",
                        "launched_at": "2013-05-29T00:00:00+00:00",
                        "terminated_at": "2014-11-10T00:00:00+00:00"
                      },
                      "kind": "self_service#execution",
                      "links": {
                        "running_operations": {
                          "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                        },
                        "latest_notifications": {
                          "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                        }
                      }
                    },
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "timestamps": {
                      "created_at": "2013-11-19T00:00:00+00:00",
                      "finished_at": "2013-08-04T00:00:00+00:00"
                    },
                    "kind": "self_service#operation",
                    "links": {
                      "execution": {
                        "id": "5392479332ca2bd0ca000002",
                        "name": "My dev server for testing",
                        "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                      }
                    }
                  }
                ],
                "configuration_options": [
                  {
                    "name": "cloud",
                    "type": "string",
                    "value": "AWS US-West"
                  },
                  {
                    "name": "cloud",
                    "type": "string",
                    "value": "AWS US-West"
                  },
                  {
                    "name": "cloud",
                    "type": "string",
                    "value": "AWS US-West"
                  }
                ],
                "api_resources": [
                  {
                    "name": "jigsawed",
                    "type": "eddy",
                    "value": {
                      "href": "tugs",
                      "details": {
                      }
                    }
                  }
                ],
                "outputs": [
                  {
                    "name": "running_branch",
                    "label": "Branch name",
                    "description": "The name of the branch that is running on the app servers",
                    "category": "Developer Information",
                    "index": 3,
                    "value": "dev_branch_1"
                  },
                  {
                    "name": "running_branch",
                    "label": "Branch name",
                    "description": "The name of the branch that is running on the app servers",
                    "category": "Developer Information",
                    "index": 3,
                    "value": "dev_branch_1"
                  },
                  {
                    "name": "running_branch",
                    "label": "Branch name",
                    "description": "The name of the branch that is running on the app servers",
                    "category": "Developer Information",
                    "index": 3,
                    "value": "dev_branch_1"
                  }
                ],
                "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                "launched_from": {
                  "type": "application",
                  "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                },
                "launched_from_summary": {
                },
                "deployment": "/api/deployments/461147093",
                "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                "latest_notifications": [
                  {
                    "id": "53e3bfa9a37b334abf000064",
                    "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                      "name": "My dev server for testing",
                      "description": "Dev server for our new user interface project.",
                      "status": "running",
                      "available_operations": [
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        }
                      ],
                      "running_operations": [
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        }
                      ],
                      "configuration_options": [
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        }
                      ],
                      "api_resources": [
                        {
                          "name": "Renee",
                          "type": "Izod"
                        },
                        {
                          "name": "uncertain",
                          "type": "businesslike"
                        },
                        {
                          "name": "unionized",
                          "type": "zonal"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        }
                      ],
                      "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                      "launched_from": {
                        "type": "application",
                        "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                      },
                      "launched_from_summary": {
                      },
                      "deployment": "/api/deployments/461147093",
                      "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                      "latest_notifications": [
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "status_update",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "status_update",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "status_update",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        }
                      ],
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "cost": {
                        "value": "23.53",
                        "unit": "$",
                        "updated_at": "2012-12-23T00:00:00+00:00"
                      },
                      "timestamps": {
                        "created_at": "2012-12-25T00:00:00+00:00",
                        "launched_at": "2013-01-28T00:00:00+00:00",
                        "terminated_at": "2013-07-20T00:00:00+00:00"
                      },
                      "kind": "self_service#execution",
                      "links": {
                        "running_operations": {
                          "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                        },
                        "latest_notifications": {
                          "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                        }
                      }
                    },
                    "message": "Operation \"launch\" completed",
                    "category": "info",
                    "read": false,
                    "timestamps": {
                      "created_at": "2013-05-11T00:00:00+00:00"
                    },
                    "kind": "self_service#notification",
                    "links": {
                      "execution": {
                        "id": "5392479332ca2bd0ca000002",
                        "name": "My dev server for testing",
                        "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                      }
                    }
                  },
                  {
                    "id": "53e3bfa9a37b334abf000064",
                    "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                      "name": "My dev server for testing",
                      "description": "Dev server for our new user interface project.",
                      "status": "running",
                      "available_operations": [
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        }
                      ],
                      "running_operations": [
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        }
                      ],
                      "configuration_options": [
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        },
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        }
                      ],
                      "api_resources": [
                        {
                          "name": "beans",
                          "type": "toffee"
                        },
                        {
                          "name": "payday",
                          "type": "discontinued"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        }
                      ],
                      "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                      "launched_from": {
                        "type": "application",
                        "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                      },
                      "launched_from_summary": {
                      },
                      "deployment": "/api/deployments/461147093",
                      "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                      "latest_notifications": [
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "info",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        }
                      ],
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "cost": {
                        "value": "23.53",
                        "unit": "$",
                        "updated_at": "2014-05-13T00:00:00+00:00"
                      },
                      "timestamps": {
                        "created_at": "2014-04-12T00:00:00+00:00",
                        "launched_at": "2014-04-29T00:00:00+00:00",
                        "terminated_at": "2014-01-01T00:00:00+00:00"
                      },
                      "kind": "self_service#execution",
                      "links": {
                        "running_operations": {
                          "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                        },
                        "latest_notifications": {
                          "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                        }
                      }
                    },
                    "message": "Operation \"launch\" completed",
                    "category": "status_update",
                    "read": false,
                    "timestamps": {
                      "created_at": "2014-03-26T00:00:00+00:00"
                    },
                    "kind": "self_service#notification",
                    "links": {
                      "execution": {
                        "id": "5392479332ca2bd0ca000002",
                        "name": "My dev server for testing",
                        "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                      }
                    }
                  }
                ],
                "created_by": {
                  "id": 9876,
                  "name": "Joe Montana",
                  "email": "joe.montana@49ers.com"
                },
                "cost": {
                  "value": "23.53",
                  "unit": "$",
                  "updated_at": "2013-10-05T00:00:00+00:00"
                },
                "timestamps": {
                  "created_at": "2014-12-21T00:00:00+00:00",
                  "launched_at": "2013-07-24T00:00:00+00:00",
                  "terminated_at": "2014-03-07T00:00:00+00:00"
                },
                "kind": "self_service#execution",
                "links": {
                  "running_operations": {
                    "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                  },
                  "latest_notifications": {
                    "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                  }
                }
              },
              "created_by": {
                "id": 9876,
                "name": "Joe Montana",
                "email": "joe.montana@49ers.com"
              },
              "timestamps": {
                "created_at": "2013-07-25T00:00:00+00:00",
                "finished_at": "2012-12-13T00:00:00+00:00"
              },
              "kind": "self_service#operation",
              "links": {
                "execution": {
                  "id": "5392479332ca2bd0ca000002",
                  "name": "My dev server for testing",
                  "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                }
              }
            }
          }
        },
        "notification": {
          "controller": {
            "description": "\nThe Notification resource represents a system notification that an action has occurred. Generally\nthese Notifications are the start and completion of Operations. Currently notifications are only\navailable via the API/UI and are not distributed externally to users.\n      ",
            "media_type": "V1::MediaType::Notification",
            "mime_type": "application/vnd.rightscale.self_service.notification",
            "actions": [
              {
                "description": "List the most recent 50 Notifications. Use the filter parameter to specify specify Executions.",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/projects/:project_id/notifications"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Notification",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "ids": {
                        "description": "The Notification IDs to return",
                        "example_definition": "53e3ba76a37b334abf000022,53e3ba6da37b334abf000021,53e3ba67a37b334abf00001e",
                        "type": {
                          "name": "Ids",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      },
                      "filter": {
                        "description": "Filter by Execution",
                        "example_definition": "[\"execution_id==53e13e92bf615be42e000001\"]",
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "ids": [
                      "53e3ba76a37b334abf000022",
                      "53e3ba6da37b334abf000021",
                      "53e3ba67a37b334abf00001e"
                    ],
                    "filter": [
                      "execution_id==53e13e92bf615be42e000001"
                    ]
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Get details for a specific Notification",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/projects/:project_id/notifications/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Notification",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The Notification ID to return",
                        "example_definition": "53e3ba76a37b334abf000022",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "id": "53e3ba76a37b334abf000022"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_found": {
                    "description": "No Notification with the given ID was found",
                    "status": 404,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "forbidden": {
                    "description": "The Execution specified was launched by a different user and the AccountPreference is set to only allow users to manage their own CloudApp Executions.",
                    "status": 403,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "notification"
          },
          "media_type": {
            "name": "V1::MediaType::Notification",
            "attributes": {
              "id": {
                "required": true,
                "description": "Notification id",
                "example_definition": "53e3bfa9a37b334abf000064",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "Notification href",
                "example_definition": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                "type": {
                  "name": "String"
                }
              },
              "execution": {
                "identity": "id",
                "dsl_compiler": {
                },
                "description": "Execution notification is for",
                "reference": "V1::MediaType::Execution",
                "type": {
                  "name": "V1::MediaType::Execution",
                  "views": {
                    "default": {
                      "attributes": {
                        "kind": {
                        },
                        "id": {
                        },
                        "name": {
                        },
                        "href": {
                        },
                        "description": {
                        },
                        "status": {
                        },
                        "cost": {
                        },
                        "deployment": {
                        },
                        "created_by": {
                        },
                        "timestamps": {
                        },
                        "links": {
                        }
                      }
                    },
                    "expanded": {
                      "attributes": {
                        "kind": {
                        },
                        "id": {
                        },
                        "name": {
                        },
                        "href": {
                        },
                        "description": {
                        },
                        "status": {
                        },
                        "cost": {
                        },
                        "deployment": {
                        },
                        "deployment_url": {
                        },
                        "configuration_options": {
                        },
                        "outputs": {
                        },
                        "available_operations": {
                        },
                        "running_operations": {
                        },
                        "api_resources": {
                        },
                        "latest_notifications": {
                        },
                        "created_by": {
                        },
                        "timestamps": {
                        },
                        "links": {
                        },
                        "launched_from_summary": {
                        }
                      }
                    },
                    "source": {
                      "attributes": {
                        "id": {
                        },
                        "name": {
                        },
                        "href": {
                        },
                        "description": {
                        },
                        "configuration_options": {
                        },
                        "status": {
                        },
                        "source": {
                        },
                        "launched_from": {
                        }
                      }
                    },
                    "master": {
                      "attributes": {
                        "id": {
                          "view": "master"
                        },
                        "href": {
                          "view": "master"
                        },
                        "name": {
                          "view": "master"
                        },
                        "description": {
                          "view": "master"
                        },
                        "status": {
                          "view": "master"
                        },
                        "available_operations": {
                          "view": "master"
                        },
                        "running_operations": {
                          "view": "master"
                        },
                        "configuration_options": {
                          "view": "master"
                        },
                        "api_resources": {
                          "view": "master"
                        },
                        "outputs": {
                          "view": "master"
                        },
                        "source": {
                          "view": "master"
                        },
                        "launched_from": {
                          "view": "master"
                        },
                        "launched_from_summary": {
                          "view": "master"
                        },
                        "deployment": {
                          "view": "master"
                        },
                        "deployment_url": {
                          "view": "master"
                        },
                        "latest_notifications": {
                          "view": "master"
                        },
                        "created_by": {
                          "view": "master"
                        },
                        "cost": {
                          "view": "master"
                        },
                        "timestamps": {
                          "view": "master"
                        },
                        "kind": {
                          "view": "master"
                        },
                        "links": {
                          "view": "master"
                        }
                      }
                    }
                  },
                  "mime_type": "application/vnd.rightscale.self_service.execution",
                  "description": null
                }
              },
              "message": {
                "description": "Notification content",
                "example_definition": "Operation \"launch\" completed",
                "type": {
                  "name": "String"
                }
              },
              "category": {
                "values": [
                  "info",
                  "error",
                  "status_update"
                ],
                "description": "Notification category, info or error",
                "type": {
                  "name": "String"
                }
              },
              "read": {
                "description": "Whether notification was marked as read (not currently used)",
                "example_definition": "false",
                "type": {
                  "name": "Boolean"
                }
              },
              "timestamps": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "created_at": {
                      "description": "Creation timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#notification",
                "example_definition": "self_service#notification",
                "type": {
                  "name": "String"
                }
              },
              "links": {
                "reference": "V1::MediaType::Notification",
                "type": {
                  "name": "V1::MediaType::Notification::Links",
                  "attributes": {
                    "execution": {
                      "identity": "id",
                      "dsl_compiler": {
                      },
                      "reference": "V1::MediaType::Execution",
                      "type": {
                        "name": "V1::MediaType::Execution::Link",
                        "attributes": {
                          "id": {
                            "required": true,
                            "description": "Execution id",
                            "example_definition": "5392479332ca2bd0ca000002",
                            "type": {
                              "name": "String"
                            }
                          },
                          "name": {
                            "description": "Name of execution",
                            "example_definition": "My dev server for testing",
                            "type": {
                              "name": "String"
                            }
                          },
                          "href": {
                            "description": "Execution href",
                            "example_definition": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                            "type": {
                              "name": "String"
                            }
                          }
                        },
                        "views": {
                          "default": {
                            "attributes": {
                              "id": {
                              },
                              "name": {
                              },
                              "href": {
                              }
                            }
                          },
                          "master": {
                            "attributes": {
                              "id": {
                                "view": "master"
                              },
                              "name": {
                                "view": "master"
                              },
                              "href": {
                                "view": "master"
                              }
                            }
                          }
                        },
                        "link_to": "V1::MediaType::Execution"
                      }
                    }
                  },
                  "views": {
                    "default": {
                      "attributes": {
                        "execution": {
                        }
                      }
                    },
                    "master": {
                      "attributes": {
                        "execution": {
                          "view": "master"
                        }
                      }
                    }
                  },
                  "links_struct": true
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "href": {
                  },
                  "message": {
                  },
                  "category": {
                  },
                  "read": {
                  },
                  "timestamps": {
                  },
                  "links": {
                  }
                },
                "example": {
                  "kind": "self_service#notification",
                  "id": "53e3bfa9a37b334abf000064",
                  "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                  "message": "Operation \"launch\" completed",
                  "category": "error",
                  "read": false,
                  "timestamps": {
                    "created_at": "2013-06-17T00:00:00+00:00"
                  },
                  "links": {
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "name": "My dev server for testing",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                    }
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.notification",
            "description": null,
            "example": {
              "id": "53e3bfa9a37b334abf000064",
              "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
              "execution": {
                "id": "5392479332ca2bd0ca000002",
                "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                "name": "My dev server for testing",
                "description": "Dev server for our new user interface project.",
                "status": "running",
                "available_operations": [
                  {
                    "name": "update_code",
                    "description": "Update the code on the app servers",
                    "parameters": [
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      },
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      },
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      }
                    ]
                  },
                  {
                    "name": "update_code",
                    "description": "Update the code on the app servers",
                    "parameters": [
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      },
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      }
                    ]
                  },
                  {
                    "name": "update_code",
                    "description": "Update the code on the app servers",
                    "parameters": [
                      {
                        "name": "cloud",
                        "description": "Select the cloud to launch in",
                        "type": "string",
                        "default": "AWS US-East",
                        "operations": [
                          "launch",
                          "update_code"
                        ]
                      }
                    ]
                  }
                ],
                "running_operations": [
                  {
                    "id": "53e270fca37b3315c5000136",
                    "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                    "name": "launch",
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "status": {
                      "tasks": [
                        {
                          "name": "refinement",
                          "label": "retreated"
                        },
                        {
                          "name": "thematic",
                          "label": "retouches"
                        },
                        {
                          "name": "catechism",
                          "label": "verses"
                        }
                      ],
                      "summary": "aborted",
                      "percent": 75
                    },
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                      "name": "My dev server for testing",
                      "description": "Dev server for our new user interface project.",
                      "status": "running",
                      "available_operations": [
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        }
                      ],
                      "running_operations": [
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        }
                      ],
                      "configuration_options": [
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        },
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        },
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        }
                      ],
                      "api_resources": [
                        {
                          "name": "slithered",
                          "type": "displays"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        }
                      ],
                      "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                      "launched_from": {
                        "type": "application",
                        "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                      },
                      "launched_from_summary": {
                      },
                      "deployment": "/api/deployments/461147093",
                      "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                      "latest_notifications": [
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "info",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "status_update",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "info",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        }
                      ],
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "cost": {
                        "value": "23.53",
                        "unit": "$",
                        "updated_at": "2013-07-06T00:00:00+00:00"
                      },
                      "timestamps": {
                        "created_at": "2014-11-30T00:00:00+00:00",
                        "launched_at": "2013-11-11T00:00:00+00:00",
                        "terminated_at": "2013-04-13T00:00:00+00:00"
                      },
                      "kind": "self_service#execution",
                      "links": {
                        "running_operations": {
                          "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                        },
                        "latest_notifications": {
                          "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                        }
                      }
                    },
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "timestamps": {
                      "created_at": "2014-09-09T00:00:00+00:00",
                      "finished_at": "2013-02-20T00:00:00+00:00"
                    },
                    "kind": "self_service#operation",
                    "links": {
                      "execution": {
                        "id": "5392479332ca2bd0ca000002",
                        "name": "My dev server for testing",
                        "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                      }
                    }
                  },
                  {
                    "id": "53e270fca37b3315c5000136",
                    "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                    "name": "launch",
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "status": {
                      "tasks": [
                        {
                          "name": "prude",
                          "label": "suspenders"
                        },
                        {
                          "name": "legations",
                          "label": "reflect"
                        },
                        {
                          "name": "excuse",
                          "label": "nonbreakable"
                        }
                      ],
                      "summary": "aborted",
                      "percent": 75
                    },
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                      "name": "My dev server for testing",
                      "description": "Dev server for our new user interface project.",
                      "status": "running",
                      "available_operations": [
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        },
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        }
                      ],
                      "running_operations": [
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        }
                      ],
                      "configuration_options": [
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        }
                      ],
                      "api_resources": [
                        {
                          "name": "grooves",
                          "type": "arbiters"
                        },
                        {
                          "name": "rustics",
                          "type": "watermark"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        }
                      ],
                      "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                      "launched_from": {
                        "type": "application",
                        "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                      },
                      "launched_from_summary": {
                      },
                      "deployment": "/api/deployments/461147093",
                      "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                      "latest_notifications": [
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "status_update",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        }
                      ],
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "cost": {
                        "value": "23.53",
                        "unit": "$",
                        "updated_at": "2014-12-04T00:00:00+00:00"
                      },
                      "timestamps": {
                        "created_at": "2012-12-17T00:00:00+00:00",
                        "launched_at": "2014-05-23T00:00:00+00:00",
                        "terminated_at": "2014-04-04T00:00:00+00:00"
                      },
                      "kind": "self_service#execution",
                      "links": {
                        "running_operations": {
                          "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                        },
                        "latest_notifications": {
                          "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                        }
                      }
                    },
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "timestamps": {
                      "created_at": "2014-09-25T00:00:00+00:00",
                      "finished_at": "2013-02-08T00:00:00+00:00"
                    },
                    "kind": "self_service#operation",
                    "links": {
                      "execution": {
                        "id": "5392479332ca2bd0ca000002",
                        "name": "My dev server for testing",
                        "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                      }
                    }
                  }
                ],
                "configuration_options": [
                  {
                    "name": "cloud",
                    "type": "string",
                    "value": "AWS US-West"
                  },
                  {
                    "name": "cloud",
                    "type": "string",
                    "value": "AWS US-West"
                  }
                ],
                "api_resources": [
                  {
                    "name": "irregular",
                    "type": "Mn",
                    "value": {
                      "href": "splicer",
                      "details": {
                      }
                    }
                  },
                  {
                    "name": "cancans",
                    "type": "colorfast",
                    "value": {
                      "href": "derails",
                      "details": {
                      }
                    }
                  },
                  {
                    "name": "browbeat",
                    "type": "tenon",
                    "value": {
                      "href": "unearned",
                      "details": {
                      }
                    }
                  }
                ],
                "outputs": [
                  {
                    "name": "running_branch",
                    "label": "Branch name",
                    "description": "The name of the branch that is running on the app servers",
                    "category": "Developer Information",
                    "index": 3,
                    "value": "dev_branch_1"
                  },
                  {
                    "name": "running_branch",
                    "label": "Branch name",
                    "description": "The name of the branch that is running on the app servers",
                    "category": "Developer Information",
                    "index": 3,
                    "value": "dev_branch_1"
                  },
                  {
                    "name": "running_branch",
                    "label": "Branch name",
                    "description": "The name of the branch that is running on the app servers",
                    "category": "Developer Information",
                    "index": 3,
                    "value": "dev_branch_1"
                  }
                ],
                "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                "launched_from": {
                  "type": "application",
                  "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                },
                "launched_from_summary": {
                },
                "deployment": "/api/deployments/461147093",
                "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                "latest_notifications": [
                  {
                    "id": "53e3bfa9a37b334abf000064",
                    "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                      "name": "My dev server for testing",
                      "description": "Dev server for our new user interface project.",
                      "status": "running",
                      "available_operations": [
                        {
                          "name": "update_code",
                          "description": "Update the code on the app servers",
                          "parameters": [
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            },
                            {
                              "name": "cloud",
                              "description": "Select the cloud to launch in",
                              "type": "string",
                              "default": "AWS US-East",
                              "operations": [
                                "launch",
                                "update_code"
                              ]
                            }
                          ]
                        }
                      ],
                      "running_operations": [
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            },
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        },
                        {
                          "id": "53e270fca37b3315c5000136",
                          "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                          "name": "launch",
                          "configuration_options": [
                            {
                              "name": "cloud",
                              "type": "string",
                              "value": "AWS US-West"
                            }
                          ],
                          "kind": "self_service#operation",
                          "links": {
                          }
                        }
                      ],
                      "configuration_options": [
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        },
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        },
                        {
                          "name": "cloud",
                          "type": "string",
                          "value": "AWS US-West"
                        }
                      ],
                      "api_resources": [
                        {
                          "name": "so",
                          "type": "linseed"
                        },
                        {
                          "name": "dendrite",
                          "type": "Swaziland"
                        },
                        {
                          "name": "sunbathing",
                          "type": "straps"
                        }
                      ],
                      "outputs": [
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        },
                        {
                          "name": "running_branch",
                          "label": "Branch name",
                          "description": "The name of the branch that is running on the app servers",
                          "category": "Developer Information",
                          "index": 3,
                          "value": "dev_branch_1"
                        }
                      ],
                      "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                      "launched_from": {
                        "type": "application",
                        "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                      },
                      "launched_from_summary": {
                      },
                      "deployment": "/api/deployments/461147093",
                      "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                      "latest_notifications": [
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "error",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        },
                        {
                          "id": "53e3bfa9a37b334abf000064",
                          "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                          "message": "Operation \"launch\" completed",
                          "category": "status_update",
                          "read": false,
                          "kind": "self_service#notification",
                          "links": {
                          }
                        }
                      ],
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "cost": {
                        "value": "23.53",
                        "unit": "$",
                        "updated_at": "2013-02-27T00:00:00+00:00"
                      },
                      "timestamps": {
                        "created_at": "2014-08-01T00:00:00+00:00",
                        "launched_at": "2014-04-17T00:00:00+00:00",
                        "terminated_at": "2013-09-25T00:00:00+00:00"
                      },
                      "kind": "self_service#execution",
                      "links": {
                        "running_operations": {
                          "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                        },
                        "latest_notifications": {
                          "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                        }
                      }
                    },
                    "message": "Operation \"launch\" completed",
                    "category": "info",
                    "read": false,
                    "timestamps": {
                      "created_at": "2012-12-29T00:00:00+00:00"
                    },
                    "kind": "self_service#notification",
                    "links": {
                      "execution": {
                        "id": "5392479332ca2bd0ca000002",
                        "name": "My dev server for testing",
                        "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                      }
                    }
                  }
                ],
                "created_by": {
                  "id": 9876,
                  "name": "Joe Montana",
                  "email": "joe.montana@49ers.com"
                },
                "cost": {
                  "value": "23.53",
                  "unit": "$",
                  "updated_at": "2013-05-18T00:00:00+00:00"
                },
                "timestamps": {
                  "created_at": "2014-02-09T00:00:00+00:00",
                  "launched_at": "2014-02-04T00:00:00+00:00",
                  "terminated_at": "2014-08-25T00:00:00+00:00"
                },
                "kind": "self_service#execution",
                "links": {
                  "running_operations": {
                    "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                  },
                  "latest_notifications": {
                    "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                  }
                }
              },
              "message": "Operation \"launch\" completed",
              "category": "error",
              "read": false,
              "timestamps": {
                "created_at": "2013-06-17T00:00:00+00:00"
              },
              "kind": "self_service#notification",
              "links": {
                "execution": {
                  "id": "5392479332ca2bd0ca000002",
                  "name": "My dev server for testing",
                  "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                }
              }
            }
          }
        },
        "execution": {
          "controller": {
            "description": "An Execution is a launched instance of a CloudApp. Executions can be created from the catalog\nby launching an Application, from Designer by launching a Template, or directly in Manager\nby using the API and sending the CAT source or CAT Compiled source.\n\nExecutions are represented in RightScale Cloud Management by a deployment -- the resources\ndefined in the CAT are all created in the Deployment. Any action on a running CloudApp should\nbe made on its Execution resource.\n\nMaking changes to any resource directly in the CM deployment\nmay result in undesired behavior since the Execution only refreshes certain information as a\nresult of running an Operation on an Execution. For example, if a Server is replaced in CM\ninstead of through Self-Service, the new Server's information won' be available in\nSelf-Service.\n",
            "media_type": "V1::MediaType::Execution",
            "mime_type": "application/vnd.rightscale.self_service.execution",
            "actions": [
              {
                "description": "List information about the Executions, or use a filter to only return certain Executions. A view can be used for various levels of detail.",
                "name": "index",
                "urls": [
                  [
                    "GET",
                    "/projects/:project_id/executions"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "ids": {
                        "description": "An optional list of execution IDs to retrieve",
                        "example_definition": "5392479332ca2bd0ca000002,5395f22432ca2bfd41000001,53b447b64a16db52e7000001",
                        "type": {
                          "name": "Ids",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      },
                      "filter": {
                        "description": "Filter by status, syntax is [\"status==running\"]",
                        "example_definition": {
                        },
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      },
                      "view": {
                        "values": [
                          "default",
                          "expanded"
                        ],
                        "description": "Optional view to return",
                        "example_definition": "expanded",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "ids": [
                      "5392479332ca2bd0ca000002",
                      "5395f22432ca2bfd41000001",
                      "53b447b64a16db52e7000001"
                    ],
                    "filter": [
                      "status==running"
                    ],
                    "view": "expanded"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Show details for a given Execution. A view can be used for various levels of detail.",
                "name": "show",
                "urls": [
                  [
                    "GET",
                    "/projects/:project_id/executions/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the execution",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      },
                      "view": {
                        "values": [
                          "default",
                          "expanded",
                          "source"
                        ],
                        "description": "Optional view to return",
                        "example_definition": "source",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "id": "5392479332ca2bd0ca000002",
                    "view": "source"
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_found": {
                    "description": "The Execution ID was not found in the specified account/project.",
                    "status": 404,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "forbidden": {
                    "description": "The Execution specified was launched by a different user and the AccountPreference is set to only show users their own CloudApp Executions.",
                    "status": 403,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Create a new execution from a CAT, a compiled CAT, an Application in the Catalog, or a Template in Designer",
                "name": "create",
                "urls": [
                  [
                    "POST",
                    "/projects/:project_id/executions"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "name": {
                        "description": "The name for the Execution. The Template name will be used if none is provided. This will be used as the name of the deployment (appended with a unique ID).",
                        "example_definition": "My dev server for testing",
                        "type": {
                          "name": "String"
                        }
                      },
                      "description": {
                        "description": "The description for the execution. The short_description of the Template will be used if none is provided.",
                        "example_definition": "Dev server for our new user interface project.",
                        "type": {
                          "name": "String"
                        }
                      },
                      "source": {
                        "description": "The raw CAT source from which to create the Execution. The CAT will be compiled first and then launched if successful. This attribute is mutually exclusive with: compiled_cat, template_href and application_href.",
                        "type": {
                          "name": "String"
                        }
                      },
                      "compiled_cat": {
                        "dsl_compiler": {
                        },
                        "description": "The compiled CAT source from which to create the Execution. This attribute is mutually exclusive with: source, template_href and application_href.",
                        "reference": "Service::MediaType::CompiledCAT",
                        "type": {
                          "name": "Service::MediaType::CompiledCAT",
                          "views": {
                            "default": {
                              "attributes": {
                                "name": {
                                },
                                "rs_ca_ver": {
                                },
                                "short_description": {
                                },
                                "long_description": {
                                },
                                "parameters": {
                                },
                                "conditions": {
                                },
                                "mappings": {
                                },
                                "resources": {
                                },
                                "outputs": {
                                },
                                "operations": {
                                },
                                "definitions": {
                                }
                              }
                            },
                            "expanded": {
                              "attributes": {
                                "name": {
                                },
                                "rs_ca_ver": {
                                },
                                "short_description": {
                                },
                                "long_description": {
                                },
                                "source": {
                                },
                                "parameters": {
                                },
                                "conditions": {
                                },
                                "mappings": {
                                },
                                "resources": {
                                },
                                "outputs": {
                                },
                                "operations": {
                                },
                                "definitions": {
                                }
                              }
                            },
                            "master": {
                              "attributes": {
                                "name": {
                                  "view": "master"
                                },
                                "rs_ca_ver": {
                                  "view": "master"
                                },
                                "short_description": {
                                  "view": "master"
                                },
                                "long_description": {
                                  "view": "master"
                                },
                                "source": {
                                  "view": "master"
                                },
                                "parameters": {
                                  "view": "master"
                                },
                                "required_parameters": {
                                  "view": "master"
                                },
                                "conditions": {
                                  "view": "master"
                                },
                                "mappings": {
                                  "view": "master"
                                },
                                "resources": {
                                  "view": "master"
                                },
                                "outputs": {
                                  "view": "master"
                                },
                                "operations": {
                                  "view": "master"
                                },
                                "definitions": {
                                  "view": "master"
                                }
                              }
                            }
                          },
                          "mime_type": "application/vnd.rightscale.self_service.compiled_cat",
                          "description": null
                        }
                      },
                      "template_href": {
                        "description": "The href of the Template in Designer from which to create the Execution. This attribute is mutually exclusive with: source, compiled_cat, and application_href.",
                        "example_definition": "/api/designer/collections/12345/templates/53dc45552b5b92ace8000001",
                        "type": {
                          "name": "String"
                        }
                      },
                      "application_href": {
                        "description": "The href of the Application in Catalog from which to create the Execution. This attribute is mutually exclusive with: source, compiled_cat, and template_href.",
                        "example_definition": "/api/catalog/catalogs/12345/applications/53dc455d2b5b92e482000001",
                        "type": {
                          "name": "String"
                        }
                      },
                      "options": {
                        "description": "The configuration options of the Execution. These are the values provided for the CloudApp parameters.",
                        "type": {
                          "name": "Collection",
                          "member_attribute": {
                            "type": {
                              "name": "V1::Type::ConfigurationOption"
                            }
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "name": "My dev server for testing",
                    "description": "Dev server for our new user interface project.",
                    "source": "impinges",
                    "compiled_cat": {
                      "name": "spearhead",
                      "rs_ca_ver": 468,
                      "short_description": "ministries",
                      "long_description": "Gilead",
                      "parameters": {
                        "insupportable": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "califs": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "angelic": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "label": {
                            },
                            "index": {
                            },
                            "category": {
                            },
                            "description": {
                            },
                            "default": {
                            },
                            "no_echo": {
                            },
                            "allowed_values": {
                            },
                            "operations": {
                            },
                            "min_length": {
                            },
                            "max_length": {
                            },
                            "min_value": {
                            },
                            "max_value": {
                            },
                            "allowed_pattern": {
                            },
                            "constraint_description": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "conditions": {
                        "wiretapping": {
                          "impudent": [
                            "An Object"
                          ],
                          "Willard": [
                            "An Object",
                            "An Object"
                          ],
                          "beginner": [
                            "An Object",
                            "An Object",
                            "An Object"
                          ]
                        },
                        "Renee": {
                          "circumnavigate": [
                            "An Object",
                            "An Object"
                          ],
                          "broilers": [
                            "An Object",
                            "An Object"
                          ]
                        },
                        "behavioral": {
                          "Egyptology": [
                            "An Object"
                          ],
                          "hijacker": [
                            "An Object",
                            "An Object",
                            "An Object"
                          ],
                          "Chicagoan": [
                            "An Object",
                            "An Object",
                            "An Object"
                          ]
                        }
                      },
                      "mappings": {
                        "flouting": {
                          "Dooley": {
                            "wildernesses": "rending",
                            "Saratov": "boulders"
                          },
                          "pulls": {
                            "homelessness": "trapper"
                          },
                          "miaow": {
                            "pharmacy": "dalliances",
                            "finished": "hysterectomy",
                            "measures": "foretasted"
                          }
                        }
                      },
                      "resources": {
                        "lockable": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "deadened": {
                          "lazy_attributes": {
                            "type": {
                            },
                            "fields": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "outputs": {
                        "errs": {
                          "lazy_attributes": {
                            "index": {
                            },
                            "default_value": {
                            },
                            "category": {
                            },
                            "label": {
                            },
                            "description": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "multitasking": {
                          "lazy_attributes": {
                            "index": {
                            },
                            "default_value": {
                            },
                            "category": {
                            },
                            "label": {
                            },
                            "description": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "operations": {
                        "streaming": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "information": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "annals": {
                          "lazy_attributes": {
                            "definition": {
                            },
                            "description": {
                            },
                            "parameters": {
                            },
                            "output_mappings": {
                            },
                            "resource_mappings": {
                            },
                            "condition": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      },
                      "definitions": {
                        "mildew": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "slog": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        },
                        "monastic": {
                          "lazy_attributes": {
                            "source": {
                            },
                            "arguments": {
                            },
                            "returns": {
                            }
                          },
                          "validating": false,
                          "dumping": false,
                          "attributes": {
                          }
                        }
                      }
                    },
                    "template_href": "/api/designer/collections/12345/templates/53dc45552b5b92ace8000001",
                    "application_href": "/api/catalog/catalogs/12345/applications/53dc455d2b5b92e482000001",
                    "options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ]
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200
                  },
                  "created": {
                    "description": null,
                    "status": 201,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "parameter_not_found": {
                    "description": null,
                    "status": 422
                  },
                  "template_not_found": {
                    "description": null,
                    "status": 422
                  },
                  "invalid_template_href": {
                    "description": null,
                    "status": 422
                  },
                  "application_not_found": {
                    "description": null,
                    "status": 422
                  },
                  "invalid_application_href": {
                    "description": null,
                    "status": 422
                  },
                  "parse_failure": {
                    "description": null,
                    "status": 422
                  },
                  "converge_failure": {
                    "description": null,
                    "status": 422
                  },
                  "bad_request": {
                    "description": null,
                    "status": 400
                  },
                  "missing_def_name": {
                    "description": null,
                    "status": 400
                  },
                  "missing_definition": {
                    "description": null,
                    "status": 400
                  },
                  "missing_definition_source": {
                    "description": null,
                    "status": 400
                  },
                  "missing_value": {
                    "description": null,
                    "status": 400
                  },
                  "refresh_job_creation_failed": {
                    "description": null,
                    "status": 500
                  },
                  "not_disabled": {
                    "description": null,
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_enabled": {
                    "description": null,
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "not_running": {
                    "description": null,
                    "status": 422,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": null,
                "name": "delete",
                "urls": [
                  [
                    "DELETE",
                    "/projects/:project_id/executions/:id"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "ID of execution to delete",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      },
                      "force": {
                        "description": "Force delete execution, bypass state validation so that non term can deleted.\n\nNote: using this option may leave cloud resources running that must manually be destroyed.",
                        "default": false,
                        "type": {
                          "name": "Boolean"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "id": "5392479332ca2bd0ca000002",
                    "force": false
                  }
                },
                "responses": {
                  "no_content": {
                    "description": null,
                    "status": 204
                  },
                  "unprocessable_entity": {
                    "description": null,
                    "status": 422
                  },
                  "forbidden": {
                    "description": null,
                    "status": 403
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Delete several executions from the database. Note: if an execution has not successfully been terminated, there may still be associated cloud resources running.",
                "name": "multi_delete",
                "urls": [
                  [
                    "DELETE",
                    "/projects/:project_id/executions"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "ids": {
                        "required": true,
                        "description": "List of execution IDs to delete",
                        "example_definition": "5392479332ca2bd0ca000002,5395f22432ca2bfd41000001,53b447b64a16db52e7000001",
                        "type": {
                          "name": "Ids",
                          "member_attribute": {
                            "type": {
                              "name": "String"
                            }
                          }
                        }
                      },
                      "force": {
                        "description": "Force delete execution, bypass state validation so that non term can deleted.\n                              Note:       using this option may leave cloud resources running that must manually be destroyed.",
                        "default": false,
                        "type": {
                          "name": "Boolean"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "ids": [
                      "5392479332ca2bd0ca000002",
                      "5395f22432ca2bfd41000001",
                      "53b447b64a16db52e7000001"
                    ],
                    "force": false
                  }
                },
                "responses": {
                  "default": {
                    "description": null,
                    "status": 200,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "no_content": {
                    "description": null,
                    "status": 204
                  },
                  "unprocessable_entity": {
                    "description": null,
                    "status": 422
                  },
                  "forbidden": {
                    "description": null,
                    "status": 403
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Download the CAT source for the execution.",
                "name": "download",
                "urls": [
                  [
                    "GET",
                    "/projects/:project_id/executions/:id/download"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the execution",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      },
                      "api_version": {
                        "required": true,
                        "description": "The API version (only valid value is currently \"1.0\")",
                        "example_definition": "1.0",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "id": "5392479332ca2bd0ca000002",
                    "api_version": "1.0"
                  }
                },
                "responses": {
                  "download": {
                    "description": null,
                    "status": 200
                  },
                  "forbidden": {
                    "description": null,
                    "status": 403,
                    "multipart": {
                      "type": "optional",
                      "envelope": {
                        "description": null,
                        "status": 200
                      }
                    }
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              },
              {
                "description": "Elect to get email notifications for the execution events.",
                "name": "subscribe",
                "urls": [
                  [
                    "POST",
                    "/projects/:project_id/executions/:id/subscribe"
                  ]
                ],
                "params": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "project_id": {
                        "required": true,
                        "description": "The project ID (currently the account ID)",
                        "example_definition": "12345",
                        "type": {
                          "name": "String"
                        }
                      },
                      "id": {
                        "required": true,
                        "description": "The ID of the execution",
                        "example_definition": "5392479332ca2bd0ca000002",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "project_id": "12345",
                    "id": "5392479332ca2bd0ca000002"
                  }
                },
                "payload": {
                  "identity": "id",
                  "dsl_compiler": {
                  },
                  "reference": "V1::MediaType::Execution",
                  "type": {
                    "name": "Struct",
                    "attributes": {
                      "level": {
                        "description": "Which events to notify on, \"all\", \"errors\", \"none\"",
                        "example_definition": "\"all\"",
                        "type": {
                          "name": "String"
                        }
                      }
                    }
                  },
                  "example": {
                    "level": "\"all\""
                  }
                },
                "responses": {
                  "no_content": {
                    "description": null,
                    "status": 204
                  },
                  "not_found": {
                    "description": null,
                    "status": 404
                  },
                  "default": {
                    "description": null,
                    "status": 200,
                    "mime_type": "controller_defined"
                  },
                  "validation": {
                    "description": "When parameter validation hits...",
                    "status": 400,
                    "mime_type": "application/json"
                  },
                  "internal_server_error": {
                    "description": "Internal Server Error",
                    "status": 500
                  },
                  "unauthorized": {
                    "description": "Authentication is required and has failed or has not yet been provided.",
                    "status": 401
                  }
                }
              }
            ],
            "name": "execution"
          },
          "media_type": {
            "name": "V1::MediaType::Execution",
            "attributes": {
              "id": {
                "required": true,
                "description": "Execution id",
                "example_definition": "5392479332ca2bd0ca000002",
                "type": {
                  "name": "String"
                }
              },
              "href": {
                "description": "Execution href",
                "example_definition": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                "type": {
                  "name": "String"
                }
              },
              "name": {
                "description": "Name of execution",
                "example_definition": "My dev server for testing",
                "type": {
                  "name": "String"
                }
              },
              "description": {
                "description": "Description of execution",
                "example_definition": "Dev server for our new user interface project.",
                "type": {
                  "name": "String"
                }
              },
              "status": {
                "values": [
                  "not_started",
                  "launching",
                  "enabling",
                  "running",
                  "disabling",
                  "disabled",
                  "terminating",
                  "canceling_operations",
                  "terminated",
                  "failed",
                  "provisioning",
                  "decommissioning",
                  "decommissioned"
                ],
                "description": "Execution status.",
                "example_definition": "running",
                "type": {
                  "name": "String"
                }
              },
              "available_operations": {
                "description": "Names of operations that can be run in the current state",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "V1::Type::OperationDefinition"
                    }
                  }
                }
              },
              "running_operations": {
                "description": "Running operations",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "identity": "id",
                    "dsl_compiler": {
                    },
                    "reference": "V1::MediaType::Operation",
                    "type": {
                      "name": "V1::MediaType::Operation",
                      "views": {
                        "default": {
                          "attributes": {
                            "kind": {
                            },
                            "id": {
                            },
                            "name": {
                            },
                            "href": {
                            },
                            "status": {
                            },
                            "created_by": {
                            },
                            "timestamps": {
                            },
                            "links": {
                            }
                          }
                        },
                        "expanded": {
                          "attributes": {
                            "kind": {
                            },
                            "id": {
                            },
                            "name": {
                            },
                            "href": {
                            },
                            "status": {
                            },
                            "configuration_options": {
                            },
                            "created_by": {
                            },
                            "timestamps": {
                            },
                            "links": {
                            }
                          }
                        },
                        "master": {
                          "attributes": {
                            "id": {
                              "view": "master"
                            },
                            "href": {
                              "view": "master"
                            },
                            "name": {
                              "view": "master"
                            },
                            "configuration_options": {
                              "view": "master"
                            },
                            "status": {
                              "view": "master"
                            },
                            "execution": {
                              "view": "master"
                            },
                            "created_by": {
                              "view": "master"
                            },
                            "timestamps": {
                              "view": "master"
                            },
                            "kind": {
                              "view": "master"
                            },
                            "links": {
                              "view": "master"
                            }
                          }
                        }
                      },
                      "mime_type": "application/vnd.rightscale.self_service.operation",
                      "description": null
                    }
                  }
                }
              },
              "configuration_options": {
                "description": "Configuration options initially provided to create execution",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "V1::Type::ConfigurationOption"
                    }
                  }
                }
              },
              "api_resources": {
                "description": "Resources created by execution and defined in its CAT",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "V1::Type::Resource"
                    }
                  }
                }
              },
              "outputs": {
                "description": "Outputs created by execution and defined in its CAT",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "V1::Type::Output"
                    }
                  }
                }
              },
              "source": {
                "description": "Original CAT source",
                "example_definition": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                "type": {
                  "name": "String"
                }
              },
              "launched_from": {
                "description": "How the CloudApp was launched, either from Application, Template, source, or compiled_cat",
                "type": {
                  "name": "V1::Type::LaunchedFrom"
                }
              },
              "launched_from_summary": {
                "description": "How the CloudApp was launched, either from Application, Template, source, or compiled_cat",
                "type": {
                  "name": "Hash"
                }
              },
              "deployment": {
                "description": "CloudApp deployment href",
                "example_definition": "/api/deployments/461147093",
                "type": {
                  "name": "String"
                }
              },
              "deployment_url": {
                "description": "URL of the CloudApp deployment in the Cloud Management Dashboard",
                "example_definition": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                "type": {
                  "name": "String"
                }
              },
              "latest_notifications": {
                "description": "Last 50 notifications",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "identity": "id",
                    "dsl_compiler": {
                    },
                    "reference": "V1::MediaType::Notification",
                    "type": {
                      "name": "V1::MediaType::Notification",
                      "views": {
                        "default": {
                          "attributes": {
                            "kind": {
                            },
                            "id": {
                            },
                            "href": {
                            },
                            "message": {
                            },
                            "category": {
                            },
                            "read": {
                            },
                            "timestamps": {
                            },
                            "links": {
                            }
                          }
                        },
                        "master": {
                          "attributes": {
                            "id": {
                              "view": "master"
                            },
                            "href": {
                              "view": "master"
                            },
                            "execution": {
                              "view": "master"
                            },
                            "message": {
                              "view": "master"
                            },
                            "category": {
                              "view": "master"
                            },
                            "read": {
                              "view": "master"
                            },
                            "timestamps": {
                              "view": "master"
                            },
                            "kind": {
                              "view": "master"
                            },
                            "links": {
                              "view": "master"
                            }
                          }
                        }
                      },
                      "mime_type": "application/vnd.rightscale.self_service.notification",
                      "description": null
                    }
                  }
                }
              },
              "created_by": {
                "description": "User that launched execution",
                "type": {
                  "name": "Service::SharedType::User"
                }
              },
              "cost": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "value": {
                      "description": "Amount of instance usage in CloudApp deployment, only available roughly 24 hours after launch, empty if not available",
                      "example_definition": "23.53",
                      "type": {
                        "name": "String"
                      }
                    },
                    "unit": {
                      "description": "Currency used for the cost value",
                      "example_definition": "$",
                      "type": {
                        "name": "String"
                      }
                    },
                    "updated_at": {
                      "description": "Timestamp of last cost refresh",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "timestamps": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "created_at": {
                      "description": "Creation timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "launched_at": {
                      "description": "Provision timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    },
                    "terminated_at": {
                      "description": "Decommission timestamp",
                      "type": {
                        "name": "DateTime"
                      }
                    }
                  }
                }
              },
              "kind": {
                "description": "The kind of this resource, always self_service#execution",
                "example_definition": "self_service#execution",
                "type": {
                  "name": "String"
                }
              },
              "links": {
                "reference": "V1::MediaType::Execution",
                "type": {
                  "name": "V1::MediaType::Execution::Links",
                  "attributes": {
                    "running_operations": {
                      "identity": "id",
                      "dsl_compiler": {
                      },
                      "reference": "V1::MediaType::Operation",
                      "type": {
                        "name": "V1::MediaType::Operation::RunningOperationsLink",
                        "attributes": {
                          "href": {
                            "type": {
                              "name": "String"
                            }
                          }
                        },
                        "views": {
                          "default": {
                            "attributes": {
                              "href": {
                              }
                            }
                          },
                          "master": {
                            "attributes": {
                              "href": {
                                "view": "master"
                              }
                            }
                          }
                        },
                        "link_to": "V1::MediaType::Operation",
                        "collection_link": true
                      }
                    },
                    "latest_notifications": {
                      "identity": "id",
                      "dsl_compiler": {
                      },
                      "reference": "V1::MediaType::Notification",
                      "type": {
                        "name": "V1::MediaType::Notification::LatestNotificationsLink",
                        "attributes": {
                          "href": {
                            "type": {
                              "name": "String"
                            }
                          }
                        },
                        "views": {
                          "default": {
                            "attributes": {
                              "href": {
                              }
                            }
                          },
                          "master": {
                            "attributes": {
                              "href": {
                                "view": "master"
                              }
                            }
                          }
                        },
                        "link_to": "V1::MediaType::Notification",
                        "collection_link": true
                      }
                    }
                  },
                  "views": {
                    "default": {
                      "attributes": {
                        "running_operations": {
                        },
                        "latest_notifications": {
                        }
                      }
                    },
                    "master": {
                      "attributes": {
                        "running_operations": {
                          "view": "master"
                        },
                        "latest_notifications": {
                          "view": "master"
                        }
                      }
                    }
                  },
                  "links_struct": true
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "name": {
                  },
                  "href": {
                  },
                  "description": {
                  },
                  "status": {
                  },
                  "cost": {
                  },
                  "deployment": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  },
                  "links": {
                  }
                },
                "example": {
                  "kind": "self_service#execution",
                  "id": "5392479332ca2bd0ca000002",
                  "name": "My dev server for testing",
                  "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                  "description": "Dev server for our new user interface project.",
                  "status": "running",
                  "cost": {
                    "value": "23.53",
                    "unit": "$",
                    "updated_at": "2014-07-02T00:00:00+00:00"
                  },
                  "deployment": "/api/deployments/461147093",
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2014-03-06T00:00:00+00:00",
                    "launched_at": "2013-07-11T00:00:00+00:00",
                    "terminated_at": "2012-11-29T00:00:00+00:00"
                  },
                  "links": {
                    "running_operations": {
                      "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                    },
                    "latest_notifications": {
                      "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                    }
                  }
                }
              },
              "expanded": {
                "attributes": {
                  "kind": {
                  },
                  "id": {
                  },
                  "name": {
                  },
                  "href": {
                  },
                  "description": {
                  },
                  "status": {
                  },
                  "cost": {
                  },
                  "deployment": {
                  },
                  "deployment_url": {
                  },
                  "configuration_options": {
                  },
                  "outputs": {
                  },
                  "available_operations": {
                  },
                  "running_operations": {
                  },
                  "api_resources": {
                  },
                  "latest_notifications": {
                  },
                  "created_by": {
                  },
                  "timestamps": {
                  },
                  "links": {
                  },
                  "launched_from_summary": {
                  }
                },
                "example": {
                  "kind": "self_service#execution",
                  "id": "5392479332ca2bd0ca000002",
                  "name": "My dev server for testing",
                  "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                  "description": "Dev server for our new user interface project.",
                  "status": "running",
                  "cost": {
                    "value": "23.53",
                    "unit": "$",
                    "updated_at": "2014-07-02T00:00:00+00:00"
                  },
                  "deployment": "/api/deployments/461147093",
                  "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                  "configuration_options": [
                    {
                      "name": "cloud",
                      "type": "string",
                      "value": "AWS US-West"
                    },
                    {
                      "name": "cloud",
                      "type": "string",
                      "value": "AWS US-West"
                    }
                  ],
                  "outputs": [
                    {
                      "name": "running_branch",
                      "label": "Branch name",
                      "description": "The name of the branch that is running on the app servers",
                      "category": "Developer Information",
                      "index": 3,
                      "value": "dev_branch_1"
                    }
                  ],
                  "available_operations": [
                    {
                      "name": "update_code",
                      "description": "Update the code on the app servers",
                      "parameters": [
                        {
                          "name": "cloud",
                          "description": "Select the cloud to launch in",
                          "type": "string",
                          "default": "AWS US-East",
                          "operations": [
                            "launch",
                            "update_code"
                          ],
                          "ui": {
                            "label": "Cloud",
                            "category": "Cloud Information",
                            "index": 1
                          },
                          "validation": {
                            "no_echo": true,
                            "min_length": 5,
                            "max_length": 100,
                            "min_value": 1024,
                            "max_value": 2048,
                            "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                            "allowed_values": [
                              "An Object",
                              "An Object",
                              "An Object"
                            ],
                            "constraint_description": "The value must fit the pattern: ###-ABC"
                          }
                        }
                      ]
                    },
                    {
                      "name": "update_code",
                      "description": "Update the code on the app servers",
                      "parameters": [
                        {
                          "name": "cloud",
                          "description": "Select the cloud to launch in",
                          "type": "string",
                          "default": "AWS US-East",
                          "operations": [
                            "launch",
                            "update_code"
                          ],
                          "ui": {
                            "label": "Cloud",
                            "category": "Cloud Information",
                            "index": 1
                          },
                          "validation": {
                            "no_echo": true,
                            "min_length": 5,
                            "max_length": 100,
                            "min_value": 1024,
                            "max_value": 2048,
                            "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                            "allowed_values": [
                              "An Object",
                              "An Object",
                              "An Object"
                            ],
                            "constraint_description": "The value must fit the pattern: ###-ABC"
                          }
                        },
                        {
                          "name": "cloud",
                          "description": "Select the cloud to launch in",
                          "type": "string",
                          "default": "AWS US-East",
                          "operations": [
                            "launch",
                            "update_code"
                          ],
                          "ui": {
                            "label": "Cloud",
                            "category": "Cloud Information",
                            "index": 1
                          },
                          "validation": {
                            "no_echo": true,
                            "min_length": 5,
                            "max_length": 100,
                            "min_value": 1024,
                            "max_value": 2048,
                            "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                            "allowed_values": [
                              "An Object",
                              "An Object"
                            ],
                            "constraint_description": "The value must fit the pattern: ###-ABC"
                          }
                        }
                      ]
                    },
                    {
                      "name": "update_code",
                      "description": "Update the code on the app servers",
                      "parameters": [
                        {
                          "name": "cloud",
                          "description": "Select the cloud to launch in",
                          "type": "string",
                          "default": "AWS US-East",
                          "operations": [
                            "launch",
                            "update_code"
                          ],
                          "ui": {
                            "label": "Cloud",
                            "category": "Cloud Information",
                            "index": 1
                          },
                          "validation": {
                            "no_echo": true,
                            "min_length": 5,
                            "max_length": 100,
                            "min_value": 1024,
                            "max_value": 2048,
                            "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                            "allowed_values": [
                              "An Object"
                            ],
                            "constraint_description": "The value must fit the pattern: ###-ABC"
                          }
                        },
                        {
                          "name": "cloud",
                          "description": "Select the cloud to launch in",
                          "type": "string",
                          "default": "AWS US-East",
                          "operations": [
                            "launch",
                            "update_code"
                          ],
                          "ui": {
                            "label": "Cloud",
                            "category": "Cloud Information",
                            "index": 1
                          },
                          "validation": {
                            "no_echo": true,
                            "min_length": 5,
                            "max_length": 100,
                            "min_value": 1024,
                            "max_value": 2048,
                            "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                            "allowed_values": [
                              "An Object"
                            ],
                            "constraint_description": "The value must fit the pattern: ###-ABC"
                          }
                        },
                        {
                          "name": "cloud",
                          "description": "Select the cloud to launch in",
                          "type": "string",
                          "default": "AWS US-East",
                          "operations": [
                            "launch",
                            "update_code"
                          ],
                          "ui": {
                            "label": "Cloud",
                            "category": "Cloud Information",
                            "index": 1
                          },
                          "validation": {
                            "no_echo": true,
                            "min_length": 5,
                            "max_length": 100,
                            "min_value": 1024,
                            "max_value": 2048,
                            "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                            "allowed_values": [
                              "An Object",
                              "An Object"
                            ],
                            "constraint_description": "The value must fit the pattern: ###-ABC"
                          }
                        }
                      ]
                    }
                  ],
                  "running_operations": [
                    {
                      "kind": "self_service#operation",
                      "id": "53e270fca37b3315c5000136",
                      "name": "launch",
                      "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                      "status": {
                        "tasks": [
                          {
                            "name": "Adams",
                            "label": "injurious"
                          },
                          {
                            "name": "bird",
                            "label": "vampire"
                          }
                        ],
                        "summary": "aborted",
                        "percent": 75
                      },
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "timestamps": {
                        "created_at": "2013-04-27T00:00:00+00:00",
                        "finished_at": "2014-03-21T00:00:00+00:00"
                      },
                      "links": {
                        "execution": {
                          "id": "5392479332ca2bd0ca000002",
                          "name": "My dev server for testing",
                          "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                        }
                      }
                    },
                    {
                      "kind": "self_service#operation",
                      "id": "53e270fca37b3315c5000136",
                      "name": "launch",
                      "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                      "status": {
                        "tasks": [
                          {
                            "name": "inflatables",
                            "label": "hypocrisies"
                          },
                          {
                            "name": "bypassed",
                            "label": "cluttered"
                          }
                        ],
                        "summary": "aborted",
                        "percent": 75
                      },
                      "created_by": {
                        "id": 9876,
                        "name": "Joe Montana",
                        "email": "joe.montana@49ers.com"
                      },
                      "timestamps": {
                        "created_at": "2013-03-03T00:00:00+00:00",
                        "finished_at": "2012-12-18T00:00:00+00:00"
                      },
                      "links": {
                        "execution": {
                          "id": "5392479332ca2bd0ca000002",
                          "name": "My dev server for testing",
                          "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                        }
                      }
                    }
                  ],
                  "api_resources": [
                    {
                      "name": "positive",
                      "type": "exiles",
                      "value": {
                        "href": "shiners",
                        "details": {
                        }
                      }
                    }
                  ],
                  "latest_notifications": [
                    {
                      "kind": "self_service#notification",
                      "id": "53e3bfa9a37b334abf000064",
                      "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                      "message": "Operation \"launch\" completed",
                      "category": "status_update",
                      "read": false,
                      "timestamps": {
                        "created_at": "2012-11-07T00:00:00+00:00"
                      },
                      "links": {
                        "execution": {
                          "id": "5392479332ca2bd0ca000002",
                          "name": "My dev server for testing",
                          "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                        }
                      }
                    },
                    {
                      "kind": "self_service#notification",
                      "id": "53e3bfa9a37b334abf000064",
                      "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                      "message": "Operation \"launch\" completed",
                      "category": "info",
                      "read": false,
                      "timestamps": {
                        "created_at": "2014-11-08T00:00:00+00:00"
                      },
                      "links": {
                        "execution": {
                          "id": "5392479332ca2bd0ca000002",
                          "name": "My dev server for testing",
                          "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                        }
                      }
                    }
                  ],
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2014-03-06T00:00:00+00:00",
                    "launched_at": "2013-07-11T00:00:00+00:00",
                    "terminated_at": "2012-11-29T00:00:00+00:00"
                  },
                  "links": {
                    "running_operations": {
                      "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                    },
                    "latest_notifications": {
                      "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                    }
                  },
                  "launched_from_summary": {
                  }
                }
              },
              "source": {
                "attributes": {
                  "id": {
                  },
                  "name": {
                  },
                  "href": {
                  },
                  "description": {
                  },
                  "configuration_options": {
                  },
                  "status": {
                  },
                  "source": {
                  },
                  "launched_from": {
                  }
                },
                "example": {
                  "id": "5392479332ca2bd0ca000002",
                  "name": "My dev server for testing",
                  "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                  "description": "Dev server for our new user interface project.",
                  "configuration_options": [
                    {
                      "name": "cloud",
                      "type": "string",
                      "value": "AWS US-West"
                    },
                    {
                      "name": "cloud",
                      "type": "string",
                      "value": "AWS US-West"
                    }
                  ],
                  "status": "running",
                  "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                  "launched_from": {
                    "type": "application",
                    "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.execution",
            "description": null,
            "example": {
              "id": "5392479332ca2bd0ca000002",
              "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
              "name": "My dev server for testing",
              "description": "Dev server for our new user interface project.",
              "status": "running",
              "available_operations": [
                {
                  "name": "update_code",
                  "description": "Update the code on the app servers",
                  "parameters": [
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    }
                  ]
                },
                {
                  "name": "update_code",
                  "description": "Update the code on the app servers",
                  "parameters": [
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    },
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    }
                  ]
                },
                {
                  "name": "update_code",
                  "description": "Update the code on the app servers",
                  "parameters": [
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    },
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    },
                    {
                      "name": "cloud",
                      "description": "Select the cloud to launch in",
                      "type": "string",
                      "default": "AWS US-East",
                      "operations": [
                        "launch",
                        "update_code"
                      ],
                      "ui": {
                        "label": "Cloud",
                        "category": "Cloud Information",
                        "index": 1
                      },
                      "validation": {
                        "no_echo": true,
                        "min_length": 5,
                        "max_length": 100,
                        "min_value": 1024,
                        "max_value": 2048,
                        "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                        "allowed_values": [
                          "An Object",
                          "An Object"
                        ],
                        "constraint_description": "The value must fit the pattern: ###-ABC"
                      }
                    }
                  ]
                }
              ],
              "running_operations": [
                {
                  "id": "53e270fca37b3315c5000136",
                  "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                  "name": "launch",
                  "configuration_options": [
                    {
                      "name": "cloud",
                      "type": "string",
                      "value": "AWS US-West"
                    }
                  ],
                  "status": {
                    "tasks": [
                      {
                        "name": "Adams",
                        "label": "injurious"
                      },
                      {
                        "name": "bird",
                        "label": "vampire"
                      }
                    ],
                    "summary": "aborted",
                    "percent": 75
                  },
                  "execution": {
                    "id": "5392479332ca2bd0ca000002",
                    "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                    "name": "My dev server for testing",
                    "description": "Dev server for our new user interface project.",
                    "status": "running",
                    "available_operations": [
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      }
                    ],
                    "running_operations": [
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      },
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      },
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      }
                    ],
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "api_resources": [
                      {
                        "name": "irresponsibly",
                        "type": "captious"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "running_branch",
                        "label": "Branch name",
                        "description": "The name of the branch that is running on the app servers",
                        "category": "Developer Information",
                        "index": 3,
                        "value": "dev_branch_1"
                      },
                      {
                        "name": "running_branch",
                        "label": "Branch name",
                        "description": "The name of the branch that is running on the app servers",
                        "category": "Developer Information",
                        "index": 3,
                        "value": "dev_branch_1"
                      }
                    ],
                    "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                    "launched_from": {
                      "type": "application",
                      "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                    },
                    "launched_from_summary": {
                    },
                    "deployment": "/api/deployments/461147093",
                    "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                    "latest_notifications": [
                      {
                        "id": "53e3bfa9a37b334abf000064",
                        "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                        "message": "Operation \"launch\" completed",
                        "category": "status_update",
                        "read": false,
                        "kind": "self_service#notification",
                        "links": {
                        }
                      },
                      {
                        "id": "53e3bfa9a37b334abf000064",
                        "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                        "message": "Operation \"launch\" completed",
                        "category": "error",
                        "read": false,
                        "kind": "self_service#notification",
                        "links": {
                        }
                      }
                    ],
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "cost": {
                      "value": "23.53",
                      "unit": "$",
                      "updated_at": "2013-03-11T00:00:00+00:00"
                    },
                    "timestamps": {
                      "created_at": "2014-04-05T00:00:00+00:00",
                      "launched_at": "2014-05-06T00:00:00+00:00",
                      "terminated_at": "2013-02-12T00:00:00+00:00"
                    },
                    "kind": "self_service#execution",
                    "links": {
                      "running_operations": {
                        "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                      },
                      "latest_notifications": {
                        "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                      }
                    }
                  },
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2013-04-27T00:00:00+00:00",
                    "finished_at": "2014-03-21T00:00:00+00:00"
                  },
                  "kind": "self_service#operation",
                  "links": {
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "name": "My dev server for testing",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                    }
                  }
                },
                {
                  "id": "53e270fca37b3315c5000136",
                  "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                  "name": "launch",
                  "configuration_options": [
                    {
                      "name": "cloud",
                      "type": "string",
                      "value": "AWS US-West"
                    }
                  ],
                  "status": {
                    "tasks": [
                      {
                        "name": "inflatables",
                        "label": "hypocrisies"
                      },
                      {
                        "name": "bypassed",
                        "label": "cluttered"
                      }
                    ],
                    "summary": "aborted",
                    "percent": 75
                  },
                  "execution": {
                    "id": "5392479332ca2bd0ca000002",
                    "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                    "name": "My dev server for testing",
                    "description": "Dev server for our new user interface project.",
                    "status": "running",
                    "available_operations": [
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      }
                    ],
                    "running_operations": [
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      },
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      },
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      }
                    ],
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "api_resources": [
                      {
                        "name": "coif",
                        "type": "deforesting"
                      },
                      {
                        "name": "tensor",
                        "type": "potable"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "running_branch",
                        "label": "Branch name",
                        "description": "The name of the branch that is running on the app servers",
                        "category": "Developer Information",
                        "index": 3,
                        "value": "dev_branch_1"
                      },
                      {
                        "name": "running_branch",
                        "label": "Branch name",
                        "description": "The name of the branch that is running on the app servers",
                        "category": "Developer Information",
                        "index": 3,
                        "value": "dev_branch_1"
                      }
                    ],
                    "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                    "launched_from": {
                      "type": "application",
                      "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                    },
                    "launched_from_summary": {
                    },
                    "deployment": "/api/deployments/461147093",
                    "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                    "latest_notifications": [
                      {
                        "id": "53e3bfa9a37b334abf000064",
                        "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                        "message": "Operation \"launch\" completed",
                        "category": "status_update",
                        "read": false,
                        "kind": "self_service#notification",
                        "links": {
                        }
                      }
                    ],
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "cost": {
                      "value": "23.53",
                      "unit": "$",
                      "updated_at": "2013-03-20T00:00:00+00:00"
                    },
                    "timestamps": {
                      "created_at": "2013-04-24T00:00:00+00:00",
                      "launched_at": "2013-06-09T00:00:00+00:00",
                      "terminated_at": "2013-09-02T00:00:00+00:00"
                    },
                    "kind": "self_service#execution",
                    "links": {
                      "running_operations": {
                        "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                      },
                      "latest_notifications": {
                        "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                      }
                    }
                  },
                  "created_by": {
                    "id": 9876,
                    "name": "Joe Montana",
                    "email": "joe.montana@49ers.com"
                  },
                  "timestamps": {
                    "created_at": "2013-03-03T00:00:00+00:00",
                    "finished_at": "2012-12-18T00:00:00+00:00"
                  },
                  "kind": "self_service#operation",
                  "links": {
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "name": "My dev server for testing",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                    }
                  }
                }
              ],
              "configuration_options": [
                {
                  "name": "cloud",
                  "type": "string",
                  "value": "AWS US-West"
                },
                {
                  "name": "cloud",
                  "type": "string",
                  "value": "AWS US-West"
                }
              ],
              "api_resources": [
                {
                  "name": "positive",
                  "type": "exiles",
                  "value": {
                    "href": "shiners",
                    "details": {
                    }
                  }
                }
              ],
              "outputs": [
                {
                  "name": "running_branch",
                  "label": "Branch name",
                  "description": "The name of the branch that is running on the app servers",
                  "category": "Developer Information",
                  "index": 3,
                  "value": "dev_branch_1"
                }
              ],
              "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
              "launched_from": {
                "type": "application",
                "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
              },
              "launched_from_summary": {
              },
              "deployment": "/api/deployments/461147093",
              "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
              "latest_notifications": [
                {
                  "id": "53e3bfa9a37b334abf000064",
                  "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                  "execution": {
                    "id": "5392479332ca2bd0ca000002",
                    "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                    "name": "My dev server for testing",
                    "description": "Dev server for our new user interface project.",
                    "status": "running",
                    "available_operations": [
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      }
                    ],
                    "running_operations": [
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      },
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      }
                    ],
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "api_resources": [
                      {
                        "name": "pertaining",
                        "type": "Marxisms"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "running_branch",
                        "label": "Branch name",
                        "description": "The name of the branch that is running on the app servers",
                        "category": "Developer Information",
                        "index": 3,
                        "value": "dev_branch_1"
                      }
                    ],
                    "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                    "launched_from": {
                      "type": "application",
                      "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                    },
                    "launched_from_summary": {
                    },
                    "deployment": "/api/deployments/461147093",
                    "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                    "latest_notifications": [
                      {
                        "id": "53e3bfa9a37b334abf000064",
                        "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                        "message": "Operation \"launch\" completed",
                        "category": "status_update",
                        "read": false,
                        "kind": "self_service#notification",
                        "links": {
                        }
                      },
                      {
                        "id": "53e3bfa9a37b334abf000064",
                        "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                        "message": "Operation \"launch\" completed",
                        "category": "status_update",
                        "read": false,
                        "kind": "self_service#notification",
                        "links": {
                        }
                      }
                    ],
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "cost": {
                      "value": "23.53",
                      "unit": "$",
                      "updated_at": "2014-02-21T00:00:00+00:00"
                    },
                    "timestamps": {
                      "created_at": "2014-05-31T00:00:00+00:00",
                      "launched_at": "2013-07-08T00:00:00+00:00",
                      "terminated_at": "2014-02-23T00:00:00+00:00"
                    },
                    "kind": "self_service#execution",
                    "links": {
                      "running_operations": {
                        "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                      },
                      "latest_notifications": {
                        "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                      }
                    }
                  },
                  "message": "Operation \"launch\" completed",
                  "category": "status_update",
                  "read": false,
                  "timestamps": {
                    "created_at": "2012-11-07T00:00:00+00:00"
                  },
                  "kind": "self_service#notification",
                  "links": {
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "name": "My dev server for testing",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                    }
                  }
                },
                {
                  "id": "53e3bfa9a37b334abf000064",
                  "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                  "execution": {
                    "id": "5392479332ca2bd0ca000002",
                    "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001",
                    "name": "My dev server for testing",
                    "description": "Dev server for our new user interface project.",
                    "status": "running",
                    "available_operations": [
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      },
                      {
                        "name": "update_code",
                        "description": "Update the code on the app servers",
                        "parameters": [
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          },
                          {
                            "name": "cloud",
                            "description": "Select the cloud to launch in",
                            "type": "string",
                            "default": "AWS US-East",
                            "operations": [
                              "launch",
                              "update_code"
                            ]
                          }
                        ]
                      }
                    ],
                    "running_operations": [
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      },
                      {
                        "id": "53e270fca37b3315c5000136",
                        "href": "/api/manager/projects/12345/operations/53e270fca37b3315c5000136",
                        "name": "launch",
                        "configuration_options": [
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          },
                          {
                            "name": "cloud",
                            "type": "string",
                            "value": "AWS US-West"
                          }
                        ],
                        "kind": "self_service#operation",
                        "links": {
                        }
                      }
                    ],
                    "configuration_options": [
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      },
                      {
                        "name": "cloud",
                        "type": "string",
                        "value": "AWS US-West"
                      }
                    ],
                    "api_resources": [
                      {
                        "name": "Philby",
                        "type": "singing"
                      },
                      {
                        "name": "Transylvania",
                        "type": "codifies"
                      }
                    ],
                    "outputs": [
                      {
                        "name": "running_branch",
                        "label": "Branch name",
                        "description": "The name of the branch that is running on the app servers",
                        "category": "Developer Information",
                        "index": 3,
                        "value": "dev_branch_1"
                      }
                    ],
                    "source": "name \"My CloudApp\"\\nrs_ca_ver 20131202\\nshort_description \"A basic server\"",
                    "launched_from": {
                      "type": "application",
                      "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
                    },
                    "launched_from_summary": {
                    },
                    "deployment": "/api/deployments/461147093",
                    "deployment_url": "https://us-3.rightscale.com/acct/60073/deployments/461147093",
                    "latest_notifications": [
                      {
                        "id": "53e3bfa9a37b334abf000064",
                        "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                        "message": "Operation \"launch\" completed",
                        "category": "status_update",
                        "read": false,
                        "kind": "self_service#notification",
                        "links": {
                        }
                      },
                      {
                        "id": "53e3bfa9a37b334abf000064",
                        "href": "/api/manager/projects/12345/notifications/53e3bfa9a37b334abf000064",
                        "message": "Operation \"launch\" completed",
                        "category": "status_update",
                        "read": false,
                        "kind": "self_service#notification",
                        "links": {
                        }
                      }
                    ],
                    "created_by": {
                      "id": 9876,
                      "name": "Joe Montana",
                      "email": "joe.montana@49ers.com"
                    },
                    "cost": {
                      "value": "23.53",
                      "unit": "$",
                      "updated_at": "2013-02-12T00:00:00+00:00"
                    },
                    "timestamps": {
                      "created_at": "2014-12-21T00:00:00+00:00",
                      "launched_at": "2014-01-22T00:00:00+00:00",
                      "terminated_at": "2014-11-20T00:00:00+00:00"
                    },
                    "kind": "self_service#execution",
                    "links": {
                      "running_operations": {
                        "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                      },
                      "latest_notifications": {
                        "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                      }
                    }
                  },
                  "message": "Operation \"launch\" completed",
                  "category": "info",
                  "read": false,
                  "timestamps": {
                    "created_at": "2014-11-08T00:00:00+00:00"
                  },
                  "kind": "self_service#notification",
                  "links": {
                    "execution": {
                      "id": "5392479332ca2bd0ca000002",
                      "name": "My dev server for testing",
                      "href": "/api/manager/projects/12345/executions/53d7dc711ee3ea0c74000001"
                    }
                  }
                }
              ],
              "created_by": {
                "id": 9876,
                "name": "Joe Montana",
                "email": "joe.montana@49ers.com"
              },
              "cost": {
                "value": "23.53",
                "unit": "$",
                "updated_at": "2014-07-02T00:00:00+00:00"
              },
              "timestamps": {
                "created_at": "2014-03-06T00:00:00+00:00",
                "launched_at": "2013-07-11T00:00:00+00:00",
                "terminated_at": "2012-11-29T00:00:00+00:00"
              },
              "kind": "self_service#execution",
              "links": {
                "running_operations": {
                  "href": "/api/manager/projects/12345/operations?filter[]=execution_id==5392479332ca2bd0ca000002&filter[]=status==running"
                },
                "latest_notifications": {
                  "href": "/api/manager/projects/12345/notifications?filter[]=execution_id==5392479332ca2bd0ca000002"
                }
              }
            }
          }
        },
        "configuration_option (*)": {
          "kind": {
            "name": "V1::Type::ConfigurationOption",
            "attributes": {
              "name": {
                "description": "Name of configuration option",
                "example_definition": "cloud",
                "type": {
                  "name": "String"
                }
              },
              "type": {
                "values": [
                  "string",
                  "number",
                  "list"
                ],
                "description": "Type of configuration option.",
                "example_definition": "string",
                "type": {
                  "name": "String"
                }
              },
              "value": {
                "description": "Configuration option value, a string, integer or array of strings depending on type",
                "example_definition": "AWS US-West",
                "type": {
                  "name": "Object"
                }
              }
            },
            "example": {
              "name": "cloud",
              "type": "string",
              "value": "AWS US-West"
            }
          }
        },
        "task (*)": {
          "kind": {
            "name": "V1::MediaType::Task",
            "attributes": {
              "name": {
                "description": "Task name set in RCL code, either set by human or has a default value",
                "type": {
                  "name": "String"
                }
              },
              "label": {
                "description": "Task label set in RCL code, either set by human or empty",
                "type": {
                  "name": "String"
                }
              },
              "status": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "percent": {
                      "description": "Task progress in %",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "summary": {
                      "description": "Task summary created by system",
                      "type": {
                        "name": "String"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "name": "resolve",
              "label": "meretricious",
              "status": {
                "percent": 786,
                "summary": "spindliest"
              }
            }
          }
        },
        "operation_definition (*)": {
          "kind": {
            "name": "V1::Type::OperationDefinition",
            "attributes": {
              "name": {
                "description": "Name of operation",
                "example_definition": "update_code",
                "type": {
                  "name": "String"
                }
              },
              "description": {
                "description": "Description",
                "example_definition": "Update the code on the app servers",
                "type": {
                  "name": "String"
                }
              },
              "parameters": {
                "description": "List of parameters required for the operation",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "Service::SharedType::Parameter"
                    }
                  }
                }
              }
            },
            "example": {
              "name": "update_code",
              "description": "Update the code on the app servers",
              "parameters": [
                {
                  "name": "cloud",
                  "description": "Select the cloud to launch in",
                  "type": "string",
                  "default": "AWS US-East",
                  "operations": [
                    "launch",
                    "update_code"
                  ],
                  "ui": {
                    "label": "Cloud",
                    "category": "Cloud Information",
                    "index": 1
                  },
                  "validation": {
                    "no_echo": true,
                    "min_length": 5,
                    "max_length": 100,
                    "min_value": 1024,
                    "max_value": 2048,
                    "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                    "allowed_values": [
                      "An Object",
                      "An Object"
                    ],
                    "constraint_description": "The value must fit the pattern: ###-ABC"
                  }
                },
                {
                  "name": "cloud",
                  "description": "Select the cloud to launch in",
                  "type": "string",
                  "default": "AWS US-East",
                  "operations": [
                    "launch",
                    "update_code"
                  ],
                  "ui": {
                    "label": "Cloud",
                    "category": "Cloud Information",
                    "index": 1
                  },
                  "validation": {
                    "no_echo": true,
                    "min_length": 5,
                    "max_length": 100,
                    "min_value": 1024,
                    "max_value": 2048,
                    "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                    "allowed_values": [
                      "An Object",
                      "An Object",
                      "An Object"
                    ],
                    "constraint_description": "The value must fit the pattern: ###-ABC"
                  }
                }
              ]
            }
          }
        },
        "parameter (*)": {
          "kind": {
            "name": "Service::SharedType::Parameter",
            "attributes": {
              "name": {
                "description": "Parameter name",
                "example_definition": "cloud",
                "type": {
                  "name": "String"
                }
              },
              "description": {
                "description": "A description of the parameter that will be displayed to users",
                "example_definition": "Select the cloud to launch in",
                "type": {
                  "name": "String"
                }
              },
              "type": {
                "values": [
                  "string",
                  "number",
                  "list"
                ],
                "description": "Defines whether the parameter is a string, a number or a comma separated list of values",
                "example_definition": "string",
                "type": {
                  "name": "String"
                }
              },
              "default": {
                "description": "Default value for parameter if none is specified. Note this must meet the requirements of the other fields (such as max_length, allowed pattern, etc).",
                "example_definition": "AWS US-East",
                "type": {
                  "name": "Object"
                }
              },
              "operations": {
                "description": "The name of operations that depend on this parameter",
                "example_definition": "[\"launch\", \"update_code\"]",
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "Object"
                    }
                  }
                }
              },
              "ui": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "label": {
                      "description": "The label used to display the parameter to users e.g. when defining its value",
                      "example_definition": "Cloud",
                      "type": {
                        "name": "String"
                      }
                    },
                    "category": {
                      "description": "An optional category used to group parameters in the UI",
                      "example_definition": "Cloud Information",
                      "type": {
                        "name": "String"
                      }
                    },
                    "index": {
                      "description": "Parameters are displayed in the UI in the same order as they are defined in the template. Generally this is derived from the ordering in the source CAT file.",
                      "example_definition": "1",
                      "type": {
                        "name": "Integer"
                      }
                    }
                  }
                }
              },
              "validation": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "no_echo": {
                      "description": "Whether the value of the parameter should be hidden in UIs and API responses. Generally used for passwords or other sensitive inputs. (default: false)",
                      "example_definition": "true",
                      "type": {
                        "name": "Boolean"
                      }
                    },
                    "min_length": {
                      "description": "The mininum of characters in the parameter value. Only valid when \"type\" is one of \"string\" or \"list\".",
                      "example_definition": "5",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "max_length": {
                      "description": "The maximum number of characters in the parameter value. Only valid when \"type\" is one of \"string\" or \"list\".",
                      "example_definition": "100",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "min_value": {
                      "description": "The smallest numeric value allowed for the parameter. Only valid when \"type\" is \"number\".",
                      "example_definition": "1024",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "max_value": {
                      "description": "The largest numeric value allowed for the parameter. Only valid when \"type\" is \"number\".",
                      "example_definition": "2048",
                      "type": {
                        "name": "Integer"
                      }
                    },
                    "allowed_pattern": {
                      "description": "A regular expression that the paramater value must match. Only valid when the \"type\" is \"string\". Not valid when \"allowed_values\" is specified.",
                      "example_definition": "[a-z0-9]+[a-z0-9\\.-]*",
                      "type": {
                        "name": "String"
                      }
                    },
                    "allowed_values": {
                      "description": "A comma separated list of allowed values. Not valid when \"allowed_pattern\" is specified.",
                      "type": {
                        "name": "Collection",
                        "member_attribute": {
                          "type": {
                            "name": "Object"
                          }
                        }
                      }
                    },
                    "constraint_description": {
                      "description": "Message displayed when any of the constraint is violated. The system generates default error messages, this field allows overridding these to provide a clearer error message to the user.",
                      "example_definition": "The value must fit the pattern: ###-ABC",
                      "type": {
                        "name": "String"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "name": "cloud",
              "description": "Select the cloud to launch in",
              "type": "string",
              "default": "AWS US-East",
              "operations": [
                "launch",
                "update_code"
              ],
              "ui": {
                "label": "Cloud",
                "category": "Cloud Information",
                "index": 1
              },
              "validation": {
                "no_echo": true,
                "min_length": 5,
                "max_length": 100,
                "min_value": 1024,
                "max_value": 2048,
                "allowed_pattern": "[a-z0-9]+[a-z0-9\\.-]*",
                "allowed_values": [
                  "An Object",
                  "An Object",
                  "An Object"
                ],
                "constraint_description": "The value must fit the pattern: ###-ABC"
              }
            }
          }
        },
        "resource (*)": {
          "kind": {
            "name": "V1::Type::Resource",
            "attributes": {
              "name": {
                "description": "Name of resource",
                "type": {
                  "name": "String"
                }
              },
              "type": {
                "description": "Type of resource",
                "type": {
                  "name": "String"
                }
              },
              "value": {
                "type": {
                  "name": "Struct",
                  "attributes": {
                    "href": {
                      "description": "Resource href",
                      "type": {
                        "name": "String"
                      }
                    },
                    "details": {
                      "description": "Resource fields as returned by API 1.5",
                      "type": {
                        "name": "Hash"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "name": "refillable",
              "type": "inanities",
              "value": {
                "href": "sooner",
                "details": {
                }
              }
            }
          }
        },
        "output (*)": {
          "kind": {
            "name": "V1::Type::Output",
            "attributes": {
              "name": {
                "description": "Name of the output",
                "example_definition": "running_branch",
                "type": {
                  "name": "String"
                }
              },
              "label": {
                "description": "Label shown in the UI",
                "example_definition": "Branch name",
                "type": {
                  "name": "String"
                }
              },
              "description": {
                "description": "Description to show in the UI",
                "example_definition": "The name of the branch that is running on the app servers",
                "type": {
                  "name": "String"
                }
              },
              "category": {
                "description": "Category (tab) to show this Output in the UI",
                "example_definition": "Developer Information",
                "type": {
                  "name": "String"
                }
              },
              "index": {
                "description": "Index for ordering in the UI",
                "example_definition": "3",
                "type": {
                  "name": "Integer"
                }
              },
              "value": {
                "description": "Output value",
                "example_definition": [
                  "dev_branch_1"
                ],
                "type": {
                  "name": "Object"
                }
              }
            },
            "example": {
              "name": "running_branch",
              "label": "Branch name",
              "description": "The name of the branch that is running on the app servers",
              "category": "Developer Information",
              "index": 3,
              "value": "dev_branch_1"
            }
          }
        },
        "launched_from (*)": {
          "kind": {
            "name": "V1::Type::LaunchedFrom",
            "attributes": {
              "type": {
                "description": "The type of the value (one of: application, template, compiled_cat, source",
                "example_definition": "application",
                "type": {
                  "name": "String"
                }
              },
              "value": {
                "description": "The source of where the execution launched from: application_href, template_href, compiled_cat, or source",
                "example_definition": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }",
                "type": {
                  "name": "Object"
                }
              }
            },
            "example": {
              "type": "application",
              "value": "{ name: 'My App', href: '/catalog/catalogs/60073/applications/53d2d08abe534aca90000001' }"
            }
          }
        },
        "user (*)": {
          "kind": {
            "name": "Service::SharedType::User",
            "attributes": {
              "id": {
                "required": true,
                "description": "User id",
                "example_definition": "9876",
                "type": {
                  "name": "Integer"
                }
              },
              "name": {
                "description": "User name, usually of the form \"First Last\"",
                "example_definition": "Joe Montana",
                "type": {
                  "name": "String"
                }
              },
              "email": {
                "description": "User email",
                "example_definition": "joe.montana@49ers.com",
                "type": {
                  "name": "String"
                }
              }
            },
            "example": {
              "id": 9876,
              "name": "Joe Montana",
              "email": "joe.montana@49ers.com"
            }
          }
        },
        "compiled_cat (*)": {
          "media_type": {
            "name": "Service::MediaType::CompiledCAT",
            "attributes": {
              "name": {
                "required": true,
                "type": {
                  "name": "String"
                }
              },
              "rs_ca_ver": {
                "required": true,
                "type": {
                  "name": "Integer"
                }
              },
              "short_description": {
                "type": {
                  "name": "String"
                }
              },
              "long_description": {
                "type": {
                  "name": "String"
                }
              },
              "source": {
                "required": true,
                "type": {
                  "name": "String"
                }
              },
              "parameters": {
                "type": {
                  "name": "Hash"
                }
              },
              "required_parameters": {
                "type": {
                  "name": "Collection",
                  "member_attribute": {
                    "type": {
                      "name": "String"
                    }
                  }
                }
              },
              "conditions": {
                "type": {
                  "name": "Hash"
                }
              },
              "mappings": {
                "type": {
                  "name": "Hash"
                }
              },
              "resources": {
                "required": true,
                "type": {
                  "name": "Hash"
                }
              },
              "outputs": {
                "type": {
                  "name": "Hash"
                }
              },
              "operations": {
                "type": {
                  "name": "Hash"
                }
              },
              "definitions": {
                "type": {
                  "name": "Hash"
                }
              }
            },
            "views": {
              "default": {
                "attributes": {
                  "name": {
                  },
                  "rs_ca_ver": {
                  },
                  "short_description": {
                  },
                  "long_description": {
                  },
                  "parameters": {
                  },
                  "conditions": {
                  },
                  "mappings": {
                  },
                  "resources": {
                  },
                  "outputs": {
                  },
                  "operations": {
                  },
                  "definitions": {
                  }
                },
                "example": {
                  "name": "threesome",
                  "rs_ca_ver": 422,
                  "short_description": "telephoto",
                  "long_description": "poultice",
                  "parameters": {
                    "bombardment": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "label": {
                        },
                        "index": {
                        },
                        "category": {
                        },
                        "description": {
                        },
                        "default": {
                        },
                        "no_echo": {
                        },
                        "allowed_values": {
                        },
                        "operations": {
                        },
                        "min_length": {
                        },
                        "max_length": {
                        },
                        "min_value": {
                        },
                        "max_value": {
                        },
                        "allowed_pattern": {
                        },
                        "constraint_description": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "conditions": {
                    "stencilled": {
                      "matriculating": [
                        "An Object",
                        "An Object"
                      ],
                      "Hawthorne": [
                        "An Object",
                        "An Object"
                      ]
                    },
                    "sleeplessness": {
                      "pixie": [
                        "An Object"
                      ]
                    }
                  },
                  "mappings": {
                    "talkativeness": {
                      "ringmaster": {
                        "mongeese": "walling",
                        "saves": "additives",
                        "clinicians": "regurgitating"
                      },
                      "shortest": {
                        "Fijians": "fulminations"
                      }
                    }
                  },
                  "resources": {
                    "plating": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "fields": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "aver": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "fields": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "outputs": {
                    "giving": {
                      "lazy_attributes": {
                        "index": {
                        },
                        "default_value": {
                        },
                        "category": {
                        },
                        "label": {
                        },
                        "description": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "operations": {
                    "chiefs": {
                      "lazy_attributes": {
                        "definition": {
                        },
                        "description": {
                        },
                        "parameters": {
                        },
                        "output_mappings": {
                        },
                        "resource_mappings": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "spiciness": {
                      "lazy_attributes": {
                        "definition": {
                        },
                        "description": {
                        },
                        "parameters": {
                        },
                        "output_mappings": {
                        },
                        "resource_mappings": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "definitions": {
                    "decoded": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "kindergartener": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "subclass": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  }
                }
              },
              "expanded": {
                "attributes": {
                  "name": {
                  },
                  "rs_ca_ver": {
                  },
                  "short_description": {
                  },
                  "long_description": {
                  },
                  "source": {
                  },
                  "parameters": {
                  },
                  "conditions": {
                  },
                  "mappings": {
                  },
                  "resources": {
                  },
                  "outputs": {
                  },
                  "operations": {
                  },
                  "definitions": {
                  }
                },
                "example": {
                  "name": "threesome",
                  "rs_ca_ver": 422,
                  "short_description": "telephoto",
                  "long_description": "poultice",
                  "source": "sereneness",
                  "parameters": {
                    "bombardment": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "label": {
                        },
                        "index": {
                        },
                        "category": {
                        },
                        "description": {
                        },
                        "default": {
                        },
                        "no_echo": {
                        },
                        "allowed_values": {
                        },
                        "operations": {
                        },
                        "min_length": {
                        },
                        "max_length": {
                        },
                        "min_value": {
                        },
                        "max_value": {
                        },
                        "allowed_pattern": {
                        },
                        "constraint_description": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "conditions": {
                    "stencilled": {
                      "matriculating": [
                        "An Object",
                        "An Object"
                      ],
                      "Hawthorne": [
                        "An Object",
                        "An Object"
                      ]
                    },
                    "sleeplessness": {
                      "pixie": [
                        "An Object"
                      ]
                    }
                  },
                  "mappings": {
                    "talkativeness": {
                      "ringmaster": {
                        "mongeese": "walling",
                        "saves": "additives",
                        "clinicians": "regurgitating"
                      },
                      "shortest": {
                        "Fijians": "fulminations"
                      }
                    }
                  },
                  "resources": {
                    "plating": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "fields": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "aver": {
                      "lazy_attributes": {
                        "type": {
                        },
                        "fields": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "outputs": {
                    "giving": {
                      "lazy_attributes": {
                        "index": {
                        },
                        "default_value": {
                        },
                        "category": {
                        },
                        "label": {
                        },
                        "description": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "operations": {
                    "chiefs": {
                      "lazy_attributes": {
                        "definition": {
                        },
                        "description": {
                        },
                        "parameters": {
                        },
                        "output_mappings": {
                        },
                        "resource_mappings": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "spiciness": {
                      "lazy_attributes": {
                        "definition": {
                        },
                        "description": {
                        },
                        "parameters": {
                        },
                        "output_mappings": {
                        },
                        "resource_mappings": {
                        },
                        "condition": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  },
                  "definitions": {
                    "decoded": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "kindergartener": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    },
                    "subclass": {
                      "lazy_attributes": {
                        "source": {
                        },
                        "arguments": {
                        },
                        "returns": {
                        }
                      },
                      "validating": false,
                      "dumping": false,
                      "attributes": {
                      }
                    }
                  }
                }
              }
            },
            "mime_type": "application/vnd.rightscale.self_service.compiled_cat",
            "description": null,
            "example": {
              "name": "threesome",
              "rs_ca_ver": 422,
              "short_description": "telephoto",
              "long_description": "poultice",
              "source": "sereneness",
              "parameters": {
                "bombardment": {
                  "lazy_attributes": {
                    "type": {
                    },
                    "label": {
                    },
                    "index": {
                    },
                    "category": {
                    },
                    "description": {
                    },
                    "default": {
                    },
                    "no_echo": {
                    },
                    "allowed_values": {
                    },
                    "operations": {
                    },
                    "min_length": {
                    },
                    "max_length": {
                    },
                    "min_value": {
                    },
                    "max_value": {
                    },
                    "allowed_pattern": {
                    },
                    "constraint_description": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              },
              "required_parameters": [
                "gyros",
                "pestilent"
              ],
              "conditions": {
                "stencilled": {
                  "matriculating": [
                    "An Object",
                    "An Object"
                  ],
                  "Hawthorne": [
                    "An Object",
                    "An Object"
                  ]
                },
                "sleeplessness": {
                  "pixie": [
                    "An Object"
                  ]
                }
              },
              "mappings": {
                "talkativeness": {
                  "ringmaster": {
                    "mongeese": "walling",
                    "saves": "additives",
                    "clinicians": "regurgitating"
                  },
                  "shortest": {
                    "Fijians": "fulminations"
                  }
                }
              },
              "resources": {
                "plating": {
                  "lazy_attributes": {
                    "type": {
                    },
                    "fields": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                },
                "aver": {
                  "lazy_attributes": {
                    "type": {
                    },
                    "fields": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              },
              "outputs": {
                "giving": {
                  "lazy_attributes": {
                    "index": {
                    },
                    "default_value": {
                    },
                    "category": {
                    },
                    "label": {
                    },
                    "description": {
                    },
                    "condition": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              },
              "operations": {
                "chiefs": {
                  "lazy_attributes": {
                    "definition": {
                    },
                    "description": {
                    },
                    "parameters": {
                    },
                    "output_mappings": {
                    },
                    "resource_mappings": {
                    },
                    "condition": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                },
                "spiciness": {
                  "lazy_attributes": {
                    "definition": {
                    },
                    "description": {
                    },
                    "parameters": {
                    },
                    "output_mappings": {
                    },
                    "resource_mappings": {
                    },
                    "condition": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              },
              "definitions": {
                "decoded": {
                  "lazy_attributes": {
                    "source": {
                    },
                    "arguments": {
                    },
                    "returns": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                },
                "kindergartener": {
                  "lazy_attributes": {
                    "source": {
                    },
                    "arguments": {
                    },
                    "returns": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                },
                "subclass": {
                  "lazy_attributes": {
                    "source": {
                    },
                    "arguments": {
                    },
                    "returns": {
                    }
                  },
                  "validating": false,
                  "dumping": false,
                  "attributes": {
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}